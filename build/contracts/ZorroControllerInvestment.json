{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromPid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toPid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeedLPPoolOtherToken",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeedZOR",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stablecoinToZorroLPPoolOtherTokenPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stablecoinToZorroPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPoolOtherToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroLPPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroLPPoolOtherToken",
          "type": "address"
        }
      ],
      "name": "setZorroLPPoolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniV2Router",
          "type": "address"
        }
      ],
      "name": "setUniRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "setStablecoinToZORPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "setStablecoinToZorroLPPoolOtherTokenPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedZOR",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeedLPPoolOtherToken",
          "type": "address"
        }
      ],
      "name": "setPriceFeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromPid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toPid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedLPPoolOtherToken\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedZOR\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedZOR\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedLPPoolOtherToken\",\"type\":\"address\"}],\"name\":\"setPriceFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"setStablecoinToZORPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"setStablecoinToZorroLPPoolOtherTokenPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniV2Router\",\"type\":\"address\"}],\"name\":\"setUniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroLPPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroLPPoolOtherToken\",\"type\":\"address\"}],\"name\":\"setZorroLPPoolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stablecoinToZorroLPPoolOtherTokenPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stablecoinToZorroPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPoolOtherToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_pid\":\"index of pool\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setPriceFeeds(address,address)\":{\"params\":{\"_priceFeedLPPoolOtherToken\":\"The address of the price feed for the counterparty token in the ZOR LP Pool\",\"_priceFeedZOR\":\"The address of the price feed for ZOR\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setStablecoinToZORPath(address[])\":{\"params\":{\"_path\":\"Swap path\"}},\"setStablecoinToZorroLPPoolOtherTokenPath(address[])\":{\"params\":{\"_path\":\"Swap path\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setUniRouter(address)\":{\"params\":{\"_uniV2Router\":\"Address of router\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroLPPoolParams(address,address)\":{\"params\":{\"_zorroLPPool\":\"Address of the Zorro-X LP pool\",\"_zorroLPPoolOtherToken\":\"Address of the counterpart token to the ZOR token in the LP Pool\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromPid\":\"index of pool FROM\",\"_fromTrancheId\":\"index of tranche FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toPid\":\"index of pool TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_pid\":\"index of pool\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_pid\":\"index of pool\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setPriceFeeds(address,address)\":{\"notice\":\"Setter: Chainlink price feeds\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStablecoinToZORPath(address[])\":{\"notice\":\"Setter: Set path for token swap from USD to ZOR\"},\"setStablecoinToZorroLPPoolOtherTokenPath(address[])\":{\"notice\":\"Setter: Set path for token swap from USD to counterparty token in ZOR LP pool\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setUniRouter(address)\":{\"notice\":\"Setter: Uniswap-compatible router address\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroLPPoolParams(address,address)\":{\"notice\":\"Setter: Zorro LP Pool params\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a pool\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a pool and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xd0a917e32d1251a9b2f1dea15e932815d5382e64e6b0a18104664a6cc774cd70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60174d1dd57aba43ec620c5938c37d254afaa0b05ee9c4eeef5b1f7bf7f21423\",\"dweb:/ipfs/QmNennX1XgjkDRpjtPWqxqunVUoGYiJ2EncXo8bS9rahM9\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0x2c26b67eed3123e1d7000c9d4cb50ca5bc90261174a4309dc06da49a7af26a07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b92dcd92527d817f749ac8322ae261acebec7d87279e07ebf54596520fee6568\",\"dweb:/ipfs/QmatihHN3XHhtAP88rYRktiGmGJPn5SxP8ZUeGcgACYBRr\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0xa9a21702598cf59320b704fca1f0bc7f1f3572282f0c63855504e9067891f8d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1013f9772be509f1847c48b40fd3f67ffcb6d69614cf9dfb118898fd9bdb3d35\",\"dweb:/ipfs/QmSKuBJdwYt7AipW2jpCQujrjsZWmyzvXpzBbhwhf1TQK3\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x6e79e7961283157ba1e5d47dcf742c6dd1cacd160833b3d19b5b5d02f61e2ae9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0943b5dba4a4c00b77930700c79ade3d03dcd870cf4f1793d2029fb2b08ce98f\",\"dweb:/ipfs/QmZkVQ3PM9xDXu49igeQMt3mXXqDQoAagpv9nhzRiXrwTD\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorro.sol\":{\"keccak256\":\"0x0bc5c8ba8e537c2800d4bfa81f60537eb063dccb880c18464a0e4717bbba40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91193eef46fa3d9831fd5c084fef34206d3fa4b6e7c439d82c15bf69d3707c8\",\"dweb:/ipfs/QmfFuPXAk6p8ZvHMbitFuY6fLPqmG9XQHaQzifDbieeY9D\"]},\"project:/contracts/interfaces/IZorroController.sol\":{\"keccak256\":\"0x051aaadb94a2aaa69d6d57c681fa1950fb9e313bef787f38c2417ce862ae64aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5ea27b04c39da112aa6c356994bb6fb5f3df488d79ecc3ae4ba4a8f4b010343\",\"dweb:/ipfs/QmVaYqPgjuYdD3Rwa4mCedZUWkKqnhY35UJSGjii3ZAHUU\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613c18806100206000396000f3fe608060405234801561001057600080fd5b50600436106103ff5760003560e060020a90048063745af0a811610219578063b4b4e9eb11610129578063cff38dd4116100bc578063ef1269671161008b578063ef1269671461090c578063f2fde38b14610915578063f35e4a6e14610928578063f63cce371461093b578063fc39a29e1461094e57600080fd5b8063cff38dd4146108c0578063ebfba7c4146108d3578063ed43633f146108e6578063ee4e2687146108f957600080fd5b8063c2936142116100f8578063c293614214610888578063c4e94f2214610891578063c6d758cb146108a4578063cb9c2f68146108b757600080fd5b8063b4b4e9eb14610819578063b61bb80a14610859578063b95cc6811461086c578063c13260a51461087557600080fd5b8063958e2d31116101ac578063a13346c61161017b578063a13346c6146107c5578063a4d2b083146107cd578063a4d8adf9146107e0578063af018c4b146107f3578063b22f32511461080657600080fd5b8063958e2d311461078d5780639a8a0592146107a05780639cebd371146107a95780639ec68c76146107b257600080fd5b8063823c43d0116101e8578063823c43d0146107215780638c157db2146107345780638da5cb5b14610747578063941d3fd01461075857600080fd5b8063745af0a8146106d557806379777d81146106e85780637bf604d8146106fb5780637e37c7691461070e57600080fd5b80634780f9f5116103145780635527a6f9116102a7578063693a090b11610276578063693a090b146106815780636b8eb2e5146106945780636c78d49c146106a757806370d5ae05146106ba578063715018a6146106cd57600080fd5b80635527a6f91461063f5780635c63fa8714610648578063630aff871461065b578063668ababb1461066e57600080fd5b80635051d371116102e35780635051d371146105fd57806351eb05a614610610578063529668321461062357806353f73f871461062c57600080fd5b80634780f9f5146105c557806348cd4cb1146105d85780634b0e7216146105e15780634cfea68a146105f457600080fd5b80631fae1a201161039757806339e80a881161036657806339e80a88146105655780633b710688146105785780633b9ce565146105815780633bbc1ffc1461058a57806340abd8fc1461059d57600080fd5b80631fae1a20146104c95780632e31283d146104f4578063332e5a7b1461053f57806333cfcd3b1461055257600080fd5b80630aa0988e116103d35780630aa0988e1461044b5780631526fe271461045e57806317caf6f1146104ad5780631b8fb692146104b657600080fd5b8062aeef8a14610404578063068f158d14610419578063081e3eda1461042c57806309b79b3c14610443575b600080fd5b6104176104123660046132f1565b610961565b005b610417610427366004613339565b610a00565b60aa545b6040519081526020015b60405180910390f35b610417610a5b565b610417610459366004613339565b610abf565b61047161046c36600461336c565b610b1a565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c00161043a565b61043060a45481565b6104176104c4366004613385565b610b6d565b6104dc6104d736600461336c565b610c40565b604051600160a060020a03909116815260200161043a565b6104dc610502366004613462565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b60ae546104dc90600160a060020a031681565b6104306105603660046134c0565b610c6a565b60b6546104dc90600160a060020a031681565b61043060a35481565b61043060a15481565b61041761059836600461336c565b610d07565b6105b06105ab3660046134f9565b610d66565b6040805192835260208301919091520161043a565b6104176105d3366004613577565b610e01565b610430609c5481565b6104176105ef3660046135a9565b610e93565b610430609d5481565b61041761060b3660046135a9565b610ee2565b61043061061e36600461336c565b610f31565b61043060a55481565b61043061063a366004613385565b61112f565b61043060a05481565b6104176106563660046135c4565b611159565b6104176106693660046135f9565b6111b0565b6099546104dc90600160a060020a031681565b60b1546104dc90600160a060020a031681565b6104176106a23660046136a5565b6111f0565b6104176106b53660046136e0565b6112a7565b609b546104dc90600160a060020a031681565b610417611314565b6104306106e33660046136fd565b61134d565b60b5546104dc90600160a060020a031681565b60af546104dc90600160a060020a031681565b61041761071c366004613577565b6113c7565b60ad546104dc90600160a060020a031681565b6097546104dc90600160a060020a031681565b603354600160a060020a03166104dc565b60ae5461077d9074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200161043a565b61041761079b36600461336c565b61153d565b61043060a75481565b61043060a25481565b6104176107c0366004613339565b611683565b6104176116de565b609a546104dc90600160a060020a031681565b6104dc6107ee36600461336c565b61175c565b6104176108013660046135f9565b61176c565b60b4546104dc90600160a060020a031681565b61082c61082736600461373c565b6117ac565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161043a565b6098546104dc90600160a060020a031681565b61043060a65481565b610417610883366004613771565b61180d565b610430609e5481565b61041761089f3660046135a9565b6118b4565b6104176108b2366004613793565b611903565b610430609f5481565b6104176108ce3660046137bd565b6119cb565b60b0546104dc90600160a060020a031681565b6104176108f4366004613839565b611a60565b6104176109073660046135a9565b611ad9565b61043060a85481565b6104176109233660046135a9565b611b28565b61041761093636600461336c565b611be0565b610417610949366004613339565b611c65565b60a9546104dc90600160a060020a031681565b600260655414156109905760405160e560020a62461bcd028152600401610987906138c6565b60405180910390fd5b6002606581905550600060aa84815481106109ad576109ad6138fd565b6000918252602090912060069091020180549091506109d790600160a060020a0316333086611ced565b6109f4843360405180602001604052806000815250868642611da4565b50506001606555505050565b603354600160a060020a03163314610a2d5760405160e560020a62461bcd02815260040161098790613916565b60b48054600160a060020a03938416600160a060020a03199182161790915560b58054929093169116179055565b60ad54600160a060020a031633600160a060020a031614610a915760405160e560020a62461bcd0281526004016109879061394b565b60a85460a7541415610ab85760405160e560020a62461bcd02815260040161098790613982565b600060a555565b603354600160a060020a03163314610aec5760405160e560020a62461bcd02815260040161098790613916565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa8181548110610b2a57600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60b654600160a060020a031633600160a060020a031614610ba35760405160e560020a62461bcd028152600401610987906139b9565b60a85460a7541415610bbd57610bb982826120d3565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050505050565b60b38181548110610c5057600080fd5b600091825260209091200154600160a060020a0316905081565b600060026065541415610c925760405160e560020a62461bcd028152600401610987906138c6565b60026065819055506000610cba853360405180602001604052806000815250878760006120f1565b9050610cf933826000015160aa8881548110610cd857610cd86138fd565b6000918252602090912060069091020154600160a060020a0316919061278b565b516001606555949350505050565b603354600160a060020a03163314610d345760405160e560020a62461bcd02815260040161098790613916565b60a954600160a060020a03163014610d615760405160e560020a62461bcd028152600401610987906139f0565b609f55565b60b6546000908190600160a060020a031633600160a060020a031614610da15760405160e560020a62461bcd028152600401610987906139b9565b610db188888888888860016127d9565b90925090508115610dd357609854610dd390600160a060020a0316338461278b565b8015610df657609b54609754610df691600160a060020a0391821691168361278b565b965096945050505050565b60026065541415610e275760405160e560020a62461bcd028152600401610987906138c6565b6002606581905550600060aa8581548110610e4457610e446138fd565b6000918252602090912060056006909202010154609854600160a060020a039182169250610e759116338387611ced565b6109f485336040518060200160405280600081525087874288612901565b603354600160a060020a03163314610ec05760405160e560020a62461bcd02815260040161098790613916565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610f0f5760405160e560020a62461bcd02815260040161098790613916565b60ad8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610f4757610f476138fd565b9060005260206000209060060201905080600201544311610f6b5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610fd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff49190613a27565b90508061100b575043600290910155506000919050565b60006110248360020154436129ed90919063ffffffff16565b9050600061105760a454611051866001015461104b609e5487612a0090919063ffffffff16565b90612a00565b90612a0c565b60a954909150600160a060020a03163014156110805761107781306120d3565b60009450611109565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b5050505080945061110985612a18565b60038401546111189082612a52565b600385015550504360029092019190915550919050565b600082815260ab60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a031633146111865760405160e560020a62461bcd02815260040161098790613916565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b603354600160a060020a031633146111dd5760405160e560020a62461bcd02815260040161098790613916565b8051610bb99060b2906020840190613277565b60ad54600160a060020a031633600160a060020a0316146112265760405160e560020a62461bcd0281526004016109879061394b565b600061125061123784612710612a00565b6110518661104b8960a354612a0090919063ffffffff16565b905060a154811115611265575060a154611274565b60a054811015611274575060a0545b609d5461129c9061128b9061104b89612710612a00565b60a2546110519061104b8686612a00565b609e55505050505050565b603354600160a060020a031633146112d45760405160e560020a62461bcd02815260040161098790613916565b60ae8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a031633146113415760405160e560020a62461bcd02815260040161098790613916565b61134b6000612a5e565b565b6000600260655414156113755760405160e560020a62461bcd028152600401610987906138c6565b6002606581905550600061139e33604051806020016040528060008152508888888860006127d9565b506098549091506113b990600160a060020a0316338361278b565b600160655595945050505050565b600260655414156113ed5760405160e560020a62461bcd028152600401610987906138c6565b6002606555600084815260ab60209081526040808320338452909152812080548590811061141d5761141d6138fd565b600091825260208083206003600690930201919091015487835260ab825260408084203385529092529082208054919350908690811061145f5761145f6138fd565b906000526020600020906006020160040154905060006114953360405180602001604052806000815250898960008960006127d9565b5090506114d860aa86815481106114ae576114ae6138fd565b6000918252602090912060056006909202010154609854600160a060020a0390811691168361278b565b6114f68533604051806020016040528060008152508487878a612901565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b600260655414156115635760405160e560020a62461bcd028152600401610987906138c6565b60026065556000611574823361112f565b905060005b818110156115b05761159f833360405180602001604052806000815250846000806120f1565b506115a981613a59565b9050611579565b50600060aa83815481106115c6576115c66138fd565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190613a27565b9050801561167957611679338260aa8681548110610cd857610cd86138fd565b5050600160655550565b603354600160a060020a031633146116b05760405160e560020a62461bcd02815260040161098790613916565b60af8054600160a060020a03938416600160a060020a03199182161790915560b08054929093169116179055565b60ad54600160a060020a031633600160a060020a0316146117145760405160e560020a62461bcd0281526004016109879061394b565b60a85460a754141561173b5760405160e560020a62461bcd02815260040161098790613982565b609b5460a654609754610ab892600160a060020a039182169291169061278b565b60b28181548110610c5057600080fd5b603354600160a060020a031633146117995760405160e560020a62461bcd02815260040161098790613916565b8051610bb99060b3906020840190613277565b60ab60205282600052604060002060205281600052604060002081815481106117d457600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ad54600160a060020a031633600160a060020a0316146118435760405160e560020a62461bcd0281526004016109879061394b565b60a954600160a060020a031630146118705760405160e560020a62461bcd028152600401610987906139f0565b609b5461189d90600160a060020a031661188a84846129ed565b609754600160a060020a0316919061278b565b609a54610bb9908290600160a060020a03166120d3565b603354600160a060020a031633146118e15760405160e560020a62461bcd02815260040161098790613916565b60b68054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146119305760405160e560020a62461bcd02815260040161098790613916565b609754600160a060020a03838116911614156119b75760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610987565b610bb9600160a060020a038316338361278b565b60b654600160a060020a031633600160a060020a031614611a015760405160e560020a62461bcd028152600401610987906139b9565b600060aa8881548110611a1657611a166138fd565b6000918252602090912060056006909202010154609854600160a060020a039182169250611a479116338388611ced565b611a5688888888888888612901565b5050505050505050565b603354600160a060020a03163314611a8d5760405160e560020a62461bcd02815260040161098790613916565b609d8590558383600081611aa357611aa36138fd565b602002919091013560a0555083836001818110611ac257611ac26138fd565b602002919091013560a1555060a35560a255505050565b603354600160a060020a03163314611b065760405160e560020a62461bcd02815260040161098790613916565b60b18054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611b555760405160e560020a62461bcd02815260040161098790613916565b600160a060020a038116611bd45760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610987565b611bdd81612a5e565b50565b603354600160a060020a03163314611c0d5760405160e560020a62461bcd02815260040161098790613916565b609c5415611c605760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c6500000000000000000000006044820152606401610987565b609c55565b603354600160a060020a03163314611c925760405160e560020a62461bcd02815260040161098790613916565b60a954600160a060020a03163014611cbf5760405160e560020a62461bcd028152600401610987906139f0565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611d9e9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612ab0565b50505050565b60008060aa8881548110611dba57611dba6138fd565b9060005260206000209060060201905060008511611e1d5760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e20302100000000000000000000006044820152606401610987565b611e2688610f31565b91506000611e348888612b98565b60058301548354919250611e5591600160a060020a03908116911688612c41565b600060aa8a81548110611e6a57611e6a6138fd565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f039190613a27565b60ae546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb19190613a27565b60ae546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015612020573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120449190613a27565b60048601549091506120569082612a52565b600486015561206a8c858c84868d8d612d25565b8b8a6040516120799190613aa0565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c6040516120bc91815260200190565b60405180910390a450505050509695505050505050565b609954609754610bb991600160a060020a0391821691168385611ced565b6040805180820190915260008082526020820152600160a060020a03861615801561211d575060008551115b8061213a5750600160a060020a0386161580159061213a57508451155b6121895760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f7765640000006044820152606401610987565b60006121978886888a612ed1565b9050600060aa89815481106121ae576121ae6138fd565b9060005260206000209060060201905060008260000151116122155760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e2069732030000000000000006044820152606401610987565b600081600401541161226c5760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e73206973203000006044820152606401610987565b60a0820151156122c15760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c740000000000000000000000006044820152606401610987565b6122ca89610f31565b5060006122fe83604001516122f8846004015461105186600301548860000151612a0090919063ffffffff16565b906129ed565b905080156124605760ae54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa1580156123a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c99190613abc565b915091508615612416576020860182905260a85460a754141561240757801561240257609a5461240290600160a060020a031682613074565b61245d565b80156124025761240281613123565b8115612426576124268b83613074565b60a85460a754141561244e57801561240257609a5461240290600160a060020a031682613074565b801561245d5761245d81613123565b50505b8561277e5760006124718a8a612b98565b9050600060aa8c81548110612488576124886138fd565b906000526020600020906006020160050160009054906101000a9004600160a060020a0316905060006125a061252783600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156124f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251c9190613a27565b602089015190612a00565b61105184600160a060020a03166342da4eb36040518163ffffffff1660e060020a028152600401602060405180830381865afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f9190613a27565b895161104b9064e8d4a51000612a00565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af1158015612603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126279190613a27565b5085516004860154612638916129ed565b60048681019190915585546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa1580156126a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c59190613a27565b875260008d815260ab60209081526040808320600160a060020a0387168452909152902080544291908c9081106126fe576126fe6138fd565b9060005260206000209060060201600501819055508c8b6040516127229190613aa0565b60405180910390208d600160a060020a03167fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d98d8b60000151604051612772929190918252602082015260400190565b60405180910390a45050505b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526127d49084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d3a565b505050565b600080600060aa88815481106127f1576127f16138fd565b60009182526020822060056006909202010154600160a060020a0316915061281d898c8c8b8b8a6120f1565b905061285c82826000015160aa8c8154811061283b5761283b6138fd565b6000918252602090912060069091020154600160a060020a03169190612c41565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156128c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ea9190613a27565b935080602001519250505097509795505050505050565b600060aa8881548110612916576129166138fd565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af1158015612995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b99190613a27565b90506129d3828260aa8c8154811061283b5761283b6138fd565b6129e1898989848989611da4565b50505050505050505050565b60006129f98284613ae0565b9392505050565b60006129f98284613af7565b60006129f98284613b16565b60a85460a7541415612a3f5760405160e560020a62461bcd02815260040161098790613982565b60a554612a4c9082612a52565b60a55550565b60006129f98284613b3b565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612b05826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a031661315d9092919063ffffffff16565b8051909150156127d45780806020019051810190612b239190613b53565b6127d45760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610987565b81600160a060020a038116611153576000825111612c215760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f766964656400000000000000000000000000000000000000006064820152608401610987565b612c2a82613b70565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ccf9190613a27565b612cd99190613b3b565b604051600160a060020a038516602482015260448101829052909150611d9e9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611d3a565b600060aa8881548110612d3a57612d3a6138fd565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a9052519251919550830191612dc591611051908b612a00565b815260208082018790526040808301879052600060609384018190528d815260ab8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612ec6578760ac60008b815260200190815260200160002088604051612e749190613aa0565b90815260200160405180910390206000612e9360016122f88e8e61112f565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612f0a6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612fa957600085815260ab60209081526040808320600160a060020a03861684529091529020805485908110612f4d57612f4d6138fd565b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905061306c565b600085815260ac60205260408082209051612fc5908690613aa0565b908152604080516020928190038301902060008881529083528181205489825260ab8452828220600160a060020a0390911680835293522080549192509086908110613013576130136138fd565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa1580156130da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fe9190613a27565b90508083111561310c578091505b609754611d9e90600160a060020a0316858461278b565b60a85460a754141561314a5760405160e560020a62461bcd02815260040161098790613982565b60a6546131579082612a52565b60a65550565b606061306c848460008585600160a060020a0385163b6131c25760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610987565b60008086600160a060020a031685876040516131de9190613aa0565b60006040518083038185875af1925050503d806000811461321b576040519150601f19603f3d011682016040523d82523d6000602084013e613220565b606091505b509150915061323082828661323b565b979650505050505050565b6060831561324a5750816129f9565b82511561325a5782518084602001fd5b8160405160e560020a62461bcd0281526004016109879190613baf565b8280548282559060005260206000209081019282156132cc579160200282015b828111156132cc5782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190613297565b506132d89291506132dc565b5090565b5b808211156132d857600081556001016132dd565b60008060006060848603121561330657600080fd5b505081359360208301359350604090920135919050565b8035600160a060020a038116811461333457600080fd5b919050565b6000806040838503121561334c57600080fd5b6133558361331d565b91506133636020840161331d565b90509250929050565b60006020828403121561337e57600080fd5b5035919050565b6000806040838503121561339857600080fd5b823591506133636020840161331d565b60e060020a634e487b7102600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156133ea576133ea6133a8565b604052919050565b600082601f83011261340357600080fd5b813567ffffffffffffffff81111561341d5761341d6133a8565b613430601f8201601f19166020016133c1565b81815284602083860101111561344557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561347757600080fd5b83359250602084013567ffffffffffffffff81111561349557600080fd5b6134a1868287016133f2565b925050604084013590509250925092565b8015158114611bdd57600080fd5b6000806000606084860312156134d557600080fd5b833592506020840135915060408401356134ee816134b2565b809150509250925092565b60008060008060008060c0878903121561351257600080fd5b61351b8761331d565b9550602087013567ffffffffffffffff81111561353757600080fd5b61354389828a016133f2565b95505060408701359350606087013592506080870135613562816134b2565b8092505060a087013590509295509295509295565b6000806000806080858703121561358d57600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156135bb57600080fd5b6129f98261331d565b6000806000606084860312156135d957600080fd5b83359250602084013591506135f06040850161331d565b90509250925092565b6000602080838503121561360c57600080fd5b823567ffffffffffffffff8082111561362457600080fd5b818501915085601f83011261363857600080fd5b81358181111561364a5761364a6133a8565b838102915061365a8483016133c1565b818152918301840191848101908884111561367457600080fd5b938501935b838510156136995761368a8561331d565b82529385019390850190613679565b98975050505050505050565b600080600080600060a086880312156136bd57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156136f257600080fd5b81356129f9816134b2565b6000806000806080858703121561371357600080fd5b8435935060208501359250604085013561372c816134b2565b9396929550929360600135925050565b60008060006060848603121561375157600080fd5b833592506137616020850161331d565b9150604084013590509250925092565b6000806040838503121561378457600080fd5b50508035926020909101359150565b600080604083850312156137a657600080fd5b6137af8361331d565b946020939093013593505050565b600080600080600080600060e0888a0312156137d857600080fd5b873596506137e86020890161331d565b9550604088013567ffffffffffffffff81111561380457600080fd5b6138108a828b016133f2565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561385157600080fd5b85359450602086013567ffffffffffffffff8082111561387057600080fd5b818801915088601f83011261388457600080fd5b81358181111561389357600080fd5b89602080830285010111156138a757600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b600060208284031215613a3957600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b6000600019821415613a6d57613a6d613a40565b5060010190565b60005b83811015613a8f578181015183820152602001613a77565b83811115611d9e5750506000910152565b60008251613ab2818460208701613a74565b9190910192915050565b60008060408385031215613acf57600080fd5b505080516020909101519092909150565b600082821015613af257613af2613a40565b500390565b6000816000190483118215151615613b1157613b11613a40565b500290565b600082613b365760e060020a634e487b7102600052601260045260246000fd5b500490565b60008219821115613b4e57613b4e613a40565b500190565b600060208284031215613b6557600080fd5b81516129f9816134b2565b805160208201516bffffffffffffffffffffffff198082169291906014831015613ba757808360140360080260020a820283161693505b505050919050565b6020815260008251806020840152613bce816040850160208701613a74565b601f01601f1916919091016040019291505056fea2646970667358221220744a406a682247fc385ca8a43861cd289895c42258de769f68481b7e3de55c4e64736f6c634300080a0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23497:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:123",
                "type": ""
              }
            ],
            "src": "14:316:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "384:147:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "394:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "416:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "403:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "394:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "509:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "518:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "521:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "511:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "511:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "511:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "445:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "456:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "463:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "452:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "452:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "442:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "442:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "432:93:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "363:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "374:5:123",
                "type": ""
              }
            ],
            "src": "335:196:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "623:173:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "669:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "678:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "681:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "671:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "671:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "671:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "644:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "653:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "640:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "640:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "636:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "636:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "633:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "694:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "723:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "704:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "694:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "775:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "786:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "771:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "752:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "581:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "592:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "604:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "612:6:123",
                "type": ""
              }
            ],
            "src": "536:260:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "924:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "935:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "912:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "954:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "965:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "947:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "871:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "882:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "893:4:123",
                "type": ""
              }
            ],
            "src": "801:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1053:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1099:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1108:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1111:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1101:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1101:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1101:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1074:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1083:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1095:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1066:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1066:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1063:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1124:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1147:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1134:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1019:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1030:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1042:6:123",
                "type": ""
              }
            ],
            "src": "983:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1435:373:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1457:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1468:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1453:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1445:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1481:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1491:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1485:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1549:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1564:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1572:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1560:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1596:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1607:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1592:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1592:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1612:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1639:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1650:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1635:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1655:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1742:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1769:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1780:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1765:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1765:19:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1798:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1786:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1786:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1758:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:44:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1758:44:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1375:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1383:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1391:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1399:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1407:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1415:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1426:4:123",
                "type": ""
              }
            ],
            "src": "1168:640:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1900:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1946:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1955:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1958:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1948:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1948:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1948:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1921:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1930:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1917:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1942:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1910:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1971:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1994:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1981:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2023:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1858:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1869:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1881:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1889:6:123",
                "type": ""
              }
            ],
            "src": "1813:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2173:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2183:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2195:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2206:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2191:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2183:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2225:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2240:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2248:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2236:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2236:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2218:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2218:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2142:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2153:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2164:4:123",
                "type": ""
              }
            ],
            "src": "2072:226:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2335:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2352:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2355:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2345:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2345:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2345:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2449:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2452:4:123",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2442:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2442:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2442:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2476:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2466:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2466:15:123"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2303:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2537:230:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2547:19:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2563:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2557:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2575:58:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2597:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "2613:4:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2619:2:123",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2609:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2609:13:123"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2628:2:123",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2624:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2624:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2605:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2605:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2593:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:40:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2579:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2708:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2710:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2710:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2710:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2651:10:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2663:18:123",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2648:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2648:34:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2687:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2699:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2684:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2684:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2645:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:62:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2642:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2750:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2739:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2739:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2739:22:123"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2517:4:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2526:6:123",
                "type": ""
              }
            ],
            "src": "2492:275:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2824:478:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2873:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2882:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2885:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2875:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2875:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2875:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2852:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2860:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2848:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2848:17:123"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2867:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2844:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2844:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2834:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2898:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2921:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2908:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:20:123"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2902:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2967:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2969:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2969:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2969:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2943:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2947:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2940:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:26:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2937:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2998:70:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3041:2:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3045:4:123",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3037:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3037:13:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3056:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3052:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3052:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3033:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3033:27:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3062:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3029:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3029:38:123"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3013:15:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3013:55:123"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "3002:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "3084:7:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3093:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:19:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:19:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3144:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3153:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3156:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3146:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3146:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3146:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3119:6:123"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3127:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:15:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3132:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3111:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3111:26:123"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3139:3:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3108:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3108:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3105:55:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "3186:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3195:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3182:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3182:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3206:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3214:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3202:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:17:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3221:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3169:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:55:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3169:55:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "3248:7:123"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3257:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3244:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3244:16:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3262:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3240:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3240:27:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:1:123",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3233:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3233:38:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3233:38:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3280:16:123",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "3289:7:123"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3280:5:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2798:6:123",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2806:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2814:5:123",
                "type": ""
              }
            ],
            "src": "2772:530:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3420:343:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3466:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3475:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3478:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3468:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3468:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3468:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3441:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3450:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3437:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3437:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3462:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3433:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3433:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3430:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3491:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3514:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3501:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3491:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3533:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3547:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3537:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3622:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3631:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3634:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3624:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3624:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3624:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3594:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3591:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3591:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3588:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3678:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3689:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3674:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3674:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3698:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3657:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3647:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3715:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3742:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3753:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3738:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3725:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3715:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3370:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3381:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3393:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3401:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3409:6:123",
                "type": ""
              }
            ],
            "src": "3307:456:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3810:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3864:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3873:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3876:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3866:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3866:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3866:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3833:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3854:5:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3847:6:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3847:13:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3840:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3840:21:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3830:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3830:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3823:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:40:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3820:60:123"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3799:5:123",
                "type": ""
              }
            ],
            "src": "3768:118:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3992:276:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4038:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4047:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4050:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4040:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4040:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4040:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4013:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4022:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4009:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4009:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4034:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4005:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4005:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4002:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4063:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4086:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4073:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4063:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4105:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4132:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4143:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4128:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4128:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4115:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4105:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4156:45:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4186:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4197:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4182:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4182:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4169:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:32:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4160:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4232:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4210:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4210:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4210:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4247:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4257:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4247:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3942:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3953:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3965:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3973:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3981:6:123",
                "type": ""
              }
            ],
            "src": "3891:377:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4434:569:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4481:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4490:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4493:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4483:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4483:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4483:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4455:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4464:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4451:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4451:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4476:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4447:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4447:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4444:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4506:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4535:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4516:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4506:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4554:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4585:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4596:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4581:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4581:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4568:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4568:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4558:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4643:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4652:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4655:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4645:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4645:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4645:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4615:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4623:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4612:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4612:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4609:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4668:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4699:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4710:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4695:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4695:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4719:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4678:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4668:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4736:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4763:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4774:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4759:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4759:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4746:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4746:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4787:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4814:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4825:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4810:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4810:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4797:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4787:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4838:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4868:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4879:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4864:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4864:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4851:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:33:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4842:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4915:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4893:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4893:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4893:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4930:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4940:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4930:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4954:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4981:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4992:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4977:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4964:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4964:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4954:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4360:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4371:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4383:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4391:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4399:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4407:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4415:6:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4423:6:123",
                "type": ""
              }
            ],
            "src": "4273:730:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5137:119:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5147:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5159:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5170:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5155:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5155:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5147:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5189:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5200:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5182:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5182:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5227:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5238:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5223:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5223:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5243:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5216:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5216:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5216:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5098:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5109:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5117:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5128:4:123",
                "type": ""
              }
            ],
            "src": "5008:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5382:264:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5429:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5438:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5441:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5431:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5431:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5431:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5403:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5412:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5399:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5399:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5424:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5395:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5395:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5392:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5454:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5477:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5464:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5464:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5454:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5496:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5523:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5534:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5519:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5519:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5506:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5506:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5547:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5574:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5585:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5570:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5570:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5557:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5547:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5598:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5625:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5636:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5621:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5621:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5608:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5608:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5598:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5324:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5335:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5347:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5355:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5363:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5371:6:123",
                "type": ""
              }
            ],
            "src": "5261:385:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5767:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5776:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5779:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5769:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5769:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5769:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5742:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5751:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5738:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5738:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5734:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5734:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5731:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5792:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5821:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5802:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5802:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5792:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5687:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5698:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5710:6:123",
                "type": ""
              }
            ],
            "src": "5651:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5946:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5992:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6001:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6004:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5994:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5994:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5994:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5967:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5976:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5963:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5963:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5988:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5959:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5959:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5956:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6017:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6040:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6027:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6017:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6059:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6086:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6097:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6082:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6082:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6069:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6059:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6110:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6143:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6154:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6139:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6139:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6120:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6120:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6110:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5896:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5907:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5919:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5927:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5935:6:123",
                "type": ""
              }
            ],
            "src": "5842:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6264:858:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6274:12:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6284:2:123",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6278:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6331:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6340:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6343:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6333:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6333:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6333:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6306:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6315:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6302:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6302:23:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6327:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6298:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6298:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6295:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6356:37:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6383:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6370:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6370:23:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "6360:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6402:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6412:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6406:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6457:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6466:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6469:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6459:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6459:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6459:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6445:6:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6453:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6442:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6439:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6482:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6496:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6507:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6492:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:22:123"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "6486:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6562:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6571:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6574:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6564:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6564:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6564:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "6541:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6545:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6537:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6537:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6552:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6533:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6533:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6526:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6523:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6587:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6610:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6597:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:16:123"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "6591:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6636:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6638:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6638:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6638:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "6628:2:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6632:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6625:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6625:10:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6622:36:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6667:21:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "6681:2:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6685:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6677:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6677:11:123"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "6671:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6697:39:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "6728:2:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6732:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6724:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6724:11:123"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6708:15:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6708:28:123"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "6701:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6745:16:123",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "6758:3:123"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "6749:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6777:3:123"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "6782:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6770:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6770:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6770:15:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6794:19:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6805:3:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6810:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6801:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:12:123"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "6794:3:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6822:34:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "6844:2:123"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "6848:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6840:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6840:11:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6853:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6836:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6836:20:123"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "6826:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6888:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6897:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6900:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6890:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6890:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6890:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6871:6:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6879:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6868:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6868:19:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6865:39:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6913:22:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6928:2:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6932:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6924:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6924:11:123"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "6917:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7000:92:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "7021:3:123"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "7045:3:123"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_address",
                                "nodeType": "YulIdentifier",
                                "src": "7026:18:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7026:23:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7014:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7014:36:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7014:36:123"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7063:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "7074:3:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7079:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7070:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7070:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "7063:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6955:3:123"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6960:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6952:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:15:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6968:23:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6970:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "6981:3:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6986:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6977:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6977:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "6970:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6948:3:123",
                    "statements": []
                  },
                  "src": "6944:148:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7101:15:123",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "7111:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7101:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6230:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6241:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6253:6:123",
                "type": ""
              }
            ],
            "src": "6169:953:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7265:316:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7312:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7321:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7324:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7314:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7314:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7314:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7286:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7295:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7282:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7282:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7307:3:123",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7278:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7278:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7275:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7337:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7360:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7347:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7347:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7337:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7379:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7406:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7417:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7402:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7402:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7389:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7389:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7379:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7430:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7457:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7468:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7453:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7453:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7440:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7440:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7430:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7481:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7508:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7519:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7504:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7504:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7491:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7491:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7481:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7532:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7559:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7570:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7555:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7555:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7542:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "7532:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7199:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7210:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7222:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7230:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7238:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7246:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7254:6:123",
                "type": ""
              }
            ],
            "src": "7127:454:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7653:174:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7699:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7708:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7711:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7701:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7701:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7701:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7674:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7683:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7670:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7670:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7695:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7666:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7666:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7663:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7724:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7750:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7737:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7728:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7791:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7769:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7769:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7769:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7806:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7816:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7806:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7619:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7630:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7642:6:123",
                "type": ""
              }
            ],
            "src": "7586:241:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7950:328:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7997:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8006:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8009:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7999:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7999:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7999:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7971:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7980:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7967:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7967:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7992:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7963:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7963:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7960:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8022:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8045:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8032:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8022:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8064:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8091:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8102:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8087:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8087:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8074:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8064:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8115:45:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8145:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8156:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8141:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8141:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8128:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:32:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8119:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8191:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8169:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8169:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8169:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8206:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8216:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8206:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8230:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8257:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8268:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8253:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8253:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8240:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8240:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "8230:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7892:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7903:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7915:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7923:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7931:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7939:6:123",
                "type": ""
              }
            ],
            "src": "7832:446:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8412:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8422:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8434:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8445:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8430:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8430:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8422:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8464:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8479:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8487:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8475:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8475:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8457:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8457:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8457:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8381:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8392:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8403:4:123",
                "type": ""
              }
            ],
            "src": "8283:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8637:92:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8647:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8659:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8670:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8655:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8655:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8647:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8689:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8714:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8707:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8707:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8700:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8700:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8682:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8682:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8682:41:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8606:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8617:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8628:4:123",
                "type": ""
              }
            ],
            "src": "8542:187:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8838:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8884:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8893:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8896:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8886:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8886:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8886:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8859:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8868:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8855:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8855:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8880:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8851:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8851:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8848:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8909:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8932:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8919:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8919:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8909:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8951:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8984:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8995:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8980:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8980:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8961:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8961:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8951:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9008:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9035:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9046:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9031:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9031:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9018:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9018:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9008:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8788:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8799:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8811:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8819:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8827:6:123",
                "type": ""
              }
            ],
            "src": "8734:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9302:294:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9312:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9324:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9335:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9320:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9320:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9312:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9355:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9366:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9348:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9348:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9393:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9404:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9389:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9389:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9409:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9382:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9382:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9382:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9436:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9447:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9432:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9432:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9452:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9425:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9425:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9425:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9479:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9490:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9475:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9475:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9495:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9468:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9468:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9468:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9522:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9533:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9518:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9518:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9539:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9511:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9511:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9511:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9566:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9577:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9562:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9562:19:123"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "9583:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9555:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9555:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9555:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9231:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9242:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9250:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9258:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9266:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9274:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9282:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9293:4:123",
                "type": ""
              }
            ],
            "src": "9061:535:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9688:161:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9734:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9743:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9746:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9736:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9736:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9736:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9709:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9718:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9705:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9705:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9730:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9701:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9701:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9698:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9759:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9782:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9769:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9769:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9759:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9801:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9828:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9839:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9824:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9824:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9811:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9811:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9801:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9646:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9657:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9669:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9677:6:123",
                "type": ""
              }
            ],
            "src": "9601:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9941:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9987:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9996:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9999:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9989:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9989:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9989:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9962:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9971:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9958:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9958:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9983:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9954:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9954:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9951:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10041:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "10022:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10060:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10087:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10098:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10083:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10083:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10070:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10070:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10060:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9899:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9910:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9922:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9930:6:123",
                "type": ""
              }
            ],
            "src": "9854:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10294:557:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10341:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10350:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10353:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10343:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10343:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10343:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10315:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10324:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10311:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10311:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10336:3:123",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10307:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10307:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10304:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10366:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10389:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10376:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10376:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10366:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10408:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10441:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10452:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10437:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10437:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "10418:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10418:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10408:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10465:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10496:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10507:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10492:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10492:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10479:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10479:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "10469:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10554:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10563:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10566:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10556:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10556:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10556:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10526:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10534:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10523:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10523:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10520:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10579:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10610:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "10621:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10606:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10606:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10630:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "10589:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10589:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10579:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10647:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10674:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10685:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10670:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10670:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10657:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10657:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10647:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10698:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10725:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10736:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10721:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10721:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10708:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10698:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10750:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10777:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10788:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10773:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10773:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10760:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10760:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "10750:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10802:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10829:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10840:3:123",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10825:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10825:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10812:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10812:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "10802:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10212:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10223:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10235:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10243:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10251:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10259:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10267:6:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "10275:6:123",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "10283:6:123",
                "type": ""
              }
            ],
            "src": "10113:738:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11012:665:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11059:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11068:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11071:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11061:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11061:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11061:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11033:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11042:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11029:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11029:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11054:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11025:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11025:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11022:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11084:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11107:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11094:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11094:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11084:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11126:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11157:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11168:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11153:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11153:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11140:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11140:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "11130:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11181:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11191:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11185:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11236:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11245:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11248:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11238:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11238:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11238:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11224:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11232:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11221:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11221:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11218:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11261:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11275:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11286:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11271:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11271:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "11265:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11341:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11350:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11353:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11343:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11343:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11343:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "11320:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11324:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11316:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11316:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11331:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11312:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11312:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11305:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11305:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11302:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11366:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "11393:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11380:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11380:16:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11370:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11423:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11432:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11435:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11425:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11425:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11425:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11411:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11419:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11408:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11408:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11405:34:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11498:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11507:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11510:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11500:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11500:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11500:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "11462:2:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11470:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11478:2:123",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11466:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11466:15:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11458:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11458:24:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11484:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11454:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11454:33:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "11489:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11451:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11451:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11448:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11523:21:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "11537:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11541:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11533:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11533:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "11523:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11553:16:123",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "11563:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "11553:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11578:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11605:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11616:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11601:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11601:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11588:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11588:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "11578:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11629:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11656:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11667:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11652:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11652:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11639:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11639:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "11629:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10946:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10957:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10969:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10977:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10985:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10993:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11001:6:123",
                "type": ""
              }
            ],
            "src": "10856:821:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11856:181:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11873:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11884:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11866:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11866:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11866:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11907:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11918:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11903:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11903:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11923:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11896:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11896:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11896:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11946:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11957:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11942:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11942:18:123"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11962:33:123",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11935:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11935:61:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11935:61:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12005:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12017:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12028:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12013:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12013:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12005:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11833:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11847:4:123",
                "type": ""
              }
            ],
            "src": "11682:355:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12074:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12091:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12094:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12084:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12084:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12084:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12188:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12191:4:123",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12181:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12181:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12181:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12212:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12215:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12205:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12205:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12205:15:123"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "12042:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12405:182:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12422:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12433:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12415:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12415:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12415:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12456:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12467:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12452:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12452:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12472:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12445:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12445:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12445:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12495:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12506:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12491:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12491:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12511:34:123",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12484:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12484:62:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12555:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12567:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12578:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12563:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12563:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12555:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12382:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12396:4:123",
                "type": ""
              }
            ],
            "src": "12231:356:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12766:167:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12783:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12794:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12776:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12776:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12776:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12817:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12828:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12813:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12813:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12833:2:123",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12806:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12806:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12806:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12856:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12867:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12852:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12852:18:123"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12872:19:123",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12845:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12845:47:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12845:47:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12901:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12913:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12924:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12909:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12909:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12901:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12743:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12757:4:123",
                "type": ""
              }
            ],
            "src": "12592:341:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13112:173:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13129:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13140:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13122:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13122:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13122:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13163:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13174:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13159:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13159:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13179:2:123",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13152:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13152:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13152:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13202:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13213:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13198:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13198:18:123"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13218:25:123",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13191:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13191:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13191:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13253:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13265:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13276:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13261:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13261:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13253:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13089:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13103:4:123",
                "type": ""
              }
            ],
            "src": "12938:347:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13464:161:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13481:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13492:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13474:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13474:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13474:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13515:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13526:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13511:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13511:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13531:2:123",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13504:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13504:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13504:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13554:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13565:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13550:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13550:18:123"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13570:13:123",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13543:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13543:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13543:41:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13593:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13605:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13616:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13601:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13601:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13593:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13441:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13455:4:123",
                "type": ""
              }
            ],
            "src": "13290:335:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13759:168:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13769:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13781:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13792:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13777:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13777:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13769:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13811:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13826:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13834:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13822:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13822:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13804:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13804:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13804:74:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13898:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13909:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13894:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13894:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13914:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13887:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13887:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13887:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13720:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13731:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13739:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13750:4:123",
                "type": ""
              }
            ],
            "src": "13630:297:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14106:165:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14123:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14134:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14116:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14116:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14116:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14157:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14168:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14153:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14153:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14173:2:123",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14146:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14146:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14146:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14196:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14207:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14192:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14192:18:123"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14212:17:123",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14185:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14185:45:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14185:45:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14239:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14251:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14262:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14247:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14247:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14239:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14083:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14097:4:123",
                "type": ""
              }
            ],
            "src": "13932:339:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14357:103:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14403:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14412:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14415:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14405:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14405:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14405:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14378:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14387:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14374:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14374:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14399:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14370:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14370:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "14367:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14428:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14444:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14438:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14438:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "14428:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14323:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14334:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14346:6:123",
                "type": ""
              }
            ],
            "src": "14276:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14497:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14514:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14517:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14507:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14507:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14507:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14611:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14614:4:123",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14604:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14604:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14604:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14635:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14638:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14628:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14628:15:123"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14465:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14701:88:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14732:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14734:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14734:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14734:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14717:5:123"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14728:1:123",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14724:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14724:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14714:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14714:17:123"
                  },
                  "nodeType": "YulIf",
                  "src": "14711:43:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14763:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14774:5:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14781:1:123",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14770:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14770:13:123"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14763:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14683:5:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14693:3:123",
                "type": ""
              }
            ],
            "src": "14654:135:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14968:243:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14985:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14996:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14978:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14978:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14978:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15019:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15030:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15015:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15015:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15035:2:123",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15008:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15008:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15008:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15058:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15069:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15054:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15054:18:123"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15074:34:123",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15047:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15047:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15047:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15129:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15140:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15125:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15125:18:123"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15145:23:123",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15118:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15118:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15118:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15178:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15190:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15201:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15186:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15186:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15178:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14945:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14959:4:123",
                "type": ""
              }
            ],
            "src": "14794:417:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15390:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15407:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15418:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15400:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15400:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15400:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15441:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15452:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15437:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15437:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15457:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15430:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15430:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15430:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15480:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15491:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15476:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15476:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15496:34:123",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15469:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15469:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15469:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15551:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15562:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15547:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15547:18:123"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15567:8:123",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15540:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15540:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15540:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15585:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15597:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15608:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15593:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15593:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15585:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15367:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15381:4:123",
                "type": ""
              }
            ],
            "src": "15216:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15797:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15814:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15825:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15807:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15807:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15807:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15848:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15859:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15844:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15844:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15864:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15837:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15837:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15837:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15887:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15898:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15883:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15883:18:123"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15903:23:123",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15876:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15876:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15876:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15936:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15948:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15959:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15944:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15944:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15936:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15774:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15788:4:123",
                "type": ""
              }
            ],
            "src": "15623:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16130:241:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16140:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16152:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16163:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16148:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16148:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16140:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16175:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16185:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16179:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16243:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16258:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16266:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16254:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16254:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16236:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16236:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16236:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16290:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16301:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16286:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16286:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16310:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16318:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16306:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16306:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16279:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16279:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16279:43:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16342:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16353:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16338:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16338:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16358:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16331:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16331:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16331:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16083:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16094:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16102:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16110:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16121:4:123",
                "type": ""
              }
            ],
            "src": "15973:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16550:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16567:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16578:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16560:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16560:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16560:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16601:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16612:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16597:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16597:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16617:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16590:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16590:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16590:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16640:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16651:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16636:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16636:18:123"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16656:23:123",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16629:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16629:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16629:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16689:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16701:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16712:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16697:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16697:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16689:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16527:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16541:4:123",
                "type": ""
              }
            ],
            "src": "16376:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16849:135:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16859:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16871:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16882:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16867:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16867:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16859:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16901:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16912:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16894:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16894:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16894:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16939:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16950:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16935:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16935:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16969:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16962:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16962:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16955:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16955:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16928:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16928:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16928:50:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16810:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16821:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16829:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16840:4:123",
                "type": ""
              }
            ],
            "src": "16726:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17042:205:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17052:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17061:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "17056:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17121:63:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17146:3:123"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17151:1:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17142:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17142:11:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "17165:3:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17170:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17161:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17161:11:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17155:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17155:18:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17135:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17135:39:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17135:39:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17082:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17085:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17079:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17079:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17093:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17095:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17104:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17107:2:123",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17100:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17100:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17095:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17075:3:123",
                    "statements": []
                  },
                  "src": "17071:113:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17210:31:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17223:3:123"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17228:6:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17219:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17219:16:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17237:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17212:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17212:27:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17212:27:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17199:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17202:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17196:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17196:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "17193:48:123"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "17020:3:123",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "17025:3:123",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "17030:6:123",
                "type": ""
              }
            ],
            "src": "16989:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17389:137:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17399:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17419:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17413:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17413:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17403:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17461:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17469:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17457:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17457:17:123"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17476:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17481:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "17435:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17435:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17435:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17497:23:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17508:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17513:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17504:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17504:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17497:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17365:3:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17370:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17381:3:123",
                "type": ""
              }
            ],
            "src": "17252:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17705:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17722:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17733:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17715:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17715:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17715:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17756:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17767:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17752:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17752:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17772:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17745:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17745:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17745:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17795:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17806:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17791:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17791:18:123"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17811:31:123",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17784:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17784:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17784:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17852:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17864:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17875:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17860:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17860:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17852:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17682:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17696:4:123",
                "type": ""
              }
            ],
            "src": "17531:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18063:175:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18080:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18091:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18073:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18073:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18073:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18114:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18125:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18110:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18110:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18130:2:123",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18103:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18103:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18103:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18153:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18164:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18149:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18149:18:123"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18169:27:123",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18142:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18142:55:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18142:55:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18206:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18218:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18229:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18214:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18214:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18206:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18040:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18054:4:123",
                "type": ""
              }
            ],
            "src": "17889:349:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18417:180:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18434:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18445:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18427:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18427:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18427:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18468:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18479:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18464:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18464:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18484:2:123",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18457:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18457:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18457:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18507:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18518:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18503:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18503:18:123"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18523:32:123",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18496:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18496:60:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18496:60:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18565:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18577:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18588:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18573:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18573:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18565:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18394:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18408:4:123",
                "type": ""
              }
            ],
            "src": "18243:354:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18776:170:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18793:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18804:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18786:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18786:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18786:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18827:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18838:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18823:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18823:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18843:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18816:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18816:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18816:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18866:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18877:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18862:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18862:18:123"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18882:22:123",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18855:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18855:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18855:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18914:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18926:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18937:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18922:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18922:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18914:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18753:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18767:4:123",
                "type": ""
              }
            ],
            "src": "18602:344:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19140:443:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19150:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19162:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19173:3:123",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19158:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19158:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19150:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19193:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19210:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19204:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19204:13:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19186:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19186:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19186:32:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19238:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19249:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19234:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19234:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19266:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19274:4:123",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19262:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19262:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19256:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19256:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19227:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19227:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19227:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19301:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19312:4:123",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19297:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19297:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19329:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19337:4:123",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19325:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19325:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19319:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19319:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19290:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19290:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19290:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19364:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19375:4:123",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19360:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19360:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19392:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19400:4:123",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19388:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19388:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19382:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19382:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19353:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19353:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19353:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19427:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19438:4:123",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19423:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19423:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19455:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19463:4:123",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19451:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19451:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19445:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19445:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19416:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19416:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19416:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19490:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19501:4:123",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19486:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19486:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19518:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19526:4:123",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19514:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19514:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19508:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19508:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19479:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19479:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19479:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19553:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19564:3:123",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19549:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19549:19:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19570:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19542:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19542:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19542:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$13960_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13960_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19101:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19112:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19120:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19131:4:123",
                "type": ""
              }
            ],
            "src": "18951:632:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19686:147:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19732:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19741:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19744:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19734:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19734:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19734:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19707:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19716:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19703:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19703:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19728:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19699:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19699:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19696:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19757:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19773:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19767:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19767:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19757:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19792:35:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19812:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19823:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19808:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19808:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19802:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19802:25:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19792:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19644:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19655:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19667:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19675:6:123",
                "type": ""
              }
            ],
            "src": "19588:245:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19887:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19909:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19911:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19911:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19911:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19903:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19906:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "19900:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19900:8:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19897:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19940:17:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19952:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19955:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "19948:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19948:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "19940:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19869:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19872:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "19878:4:123",
                "type": ""
              }
            ],
            "src": "19838:125:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20020:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20079:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20081:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20081:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20081:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20051:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20044:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20044:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20037:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20037:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20059:1:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20070:1:123",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "20066:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20066:6:123"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20074:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "20062:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20062:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20056:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20056:21:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20033:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20033:45:123"
                  },
                  "nodeType": "YulIf",
                  "src": "20030:71:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20110:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20125:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20128:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "20121:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20121:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "20110:7:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19999:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20002:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "20008:7:123",
                "type": ""
              }
            ],
            "src": "19968:168:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20187:228:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20218:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20239:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20242:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20232:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20232:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20232:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20340:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20343:4:123",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20333:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20333:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20333:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20368:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20371:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20361:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20361:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20361:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20207:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20200:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20200:9:123"
                  },
                  "nodeType": "YulIf",
                  "src": "20197:189:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20395:14:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20404:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20407:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "20400:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20400:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "20395:1:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20172:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20175:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "20181:1:123",
                "type": ""
              }
            ],
            "src": "20141:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20468:80:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20495:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20497:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20497:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20497:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20484:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20491:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "20487:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20487:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20481:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20481:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "20478:39:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20526:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20537:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20540:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20533:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20533:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "20526:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20451:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20454:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "20460:3:123",
                "type": ""
              }
            ],
            "src": "20420:128:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20631:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20677:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20686:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20689:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20679:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20679:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20679:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20652:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20661:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20648:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20648:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20673:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20644:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20644:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "20641:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20702:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20721:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20715:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20715:16:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "20706:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20762:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "20740:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20740:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20740:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20777:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20787:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "20777:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20597:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20608:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20620:6:123",
                "type": ""
              }
            ],
            "src": "20553:245:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20977:232:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20994:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21005:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20987:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20987:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20987:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21028:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21039:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21024:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21024:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21044:2:123",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21017:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21017:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21017:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21067:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21078:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21063:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21063:18:123"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21083:34:123",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21056:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21056:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21056:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21138:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21149:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21134:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21134:18:123"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21154:12:123",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21127:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21127:40:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21127:40:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21176:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21188:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21199:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21184:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21184:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21176:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20954:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20968:4:123",
                "type": ""
              }
            ],
            "src": "20803:406:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21388:234:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21405:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21416:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21398:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21398:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21398:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21439:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21450:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21435:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21435:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21455:2:123",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21428:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21428:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21428:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21478:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21489:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21474:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21474:18:123"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21494:34:123",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21467:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21467:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21467:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21549:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21560:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21545:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21545:18:123"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21565:14:123",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21538:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21538:42:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21538:42:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21589:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21601:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21612:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21597:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21597:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21589:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21365:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21379:4:123",
                "type": ""
              }
            ],
            "src": "21214:408:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21721:289:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21731:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "21751:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21745:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21745:12:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21735:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21766:33:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "21786:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21793:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21782:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21782:16:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21776:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21776:23:123"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21770:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21808:41:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21822:26:123",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "21818:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21818:31:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21812:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21858:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "21871:2:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21875:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21867:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21867:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21858:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21913:91:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21927:67:123",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "21944:2:123"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "21952:2:123"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21960:1:123",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21967:1:123",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "21974:2:123",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21978:6:123"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "21970:3:123"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "21970:15:123"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "21963:3:123"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21963:23:123"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "21956:3:123"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21956:31:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "21948:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21948:40:123"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "21940:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21940:49:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "21991:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21936:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21936:58:123"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21927:5:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21893:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21901:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21890:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21890:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "21887:117:123"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "21701:5:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21711:5:123",
                "type": ""
              }
            ],
            "src": "21627:383:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22144:198:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22154:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22166:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22177:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22162:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22162:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22154:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22189:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22199:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "22193:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22257:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22272:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22280:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22268:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22268:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22250:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22250:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22250:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22304:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22315:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22300:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22300:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "22324:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22332:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22320:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22320:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22293:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22293:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22293:43:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22105:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22116:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22124:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22135:4:123",
                "type": ""
              }
            ],
            "src": "22015:327:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22521:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22538:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22549:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22531:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22531:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22531:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22572:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22583:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22568:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22568:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22588:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22561:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22561:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22561:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22611:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22622:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22607:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22607:18:123"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22627:34:123",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22600:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22600:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22600:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22682:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22693:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22678:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22678:18:123"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22698:8:123",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22671:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22671:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22671:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22716:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22728:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22739:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22724:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22724:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22716:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22498:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22512:4:123",
                "type": ""
              }
            ],
            "src": "22347:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22928:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22945:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22956:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22938:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22938:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22938:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22979:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22990:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22975:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22975:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22995:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22968:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22968:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22968:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23018:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23029:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23014:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23014:18:123"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23034:31:123",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23007:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23007:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23007:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23075:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23087:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23098:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23083:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23083:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23075:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22905:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22919:4:123",
                "type": ""
              }
            ],
            "src": "22754:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23233:262:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23250:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23261:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23243:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23243:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23243:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23273:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23293:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "23287:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23287:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "23277:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23320:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23331:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23316:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23316:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "23336:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23309:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23309:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23309:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "23378:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23386:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23374:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23374:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23395:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23406:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23391:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23391:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "23411:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "23352:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23352:66:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23352:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23427:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23443:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "23462:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23470:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23458:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23458:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23479:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "23475:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23475:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "23454:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23454:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23439:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23439:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23486:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23435:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23435:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23427:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23202:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23213:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23224:4:123",
                "type": ""
              }
            ],
            "src": "23112:383:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        validator_revert_bool(value)\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$13960_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13960_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "594:32483:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;3936:300;;;;;;:::i;:::-;;:::i;7879:91:34:-;7948:8;:15;7879:91;;;947:25:123;;;935:2;920:18;7879:91:34;;;;;;;;14360:166;;;:::i;4251:187::-;;;;;;:::i;:::-;;:::i;3415:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1560:15:123;;;1542:34;;1607:2;1592:18;;1585:34;;;;1635:18;;1628:34;;;;1693:2;1678:18;;1671:34;;;;1736:3;1721:19;;1714:35;1786:15;;;1780:3;1765:19;;1758:44;1468:3;1453:19;3415:26:34;1168:640:123;2721:30:34;;;;;;31625:501:35;;;;;;:::i;:::-;;:::i;1680:54::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2236:55:123;;;2218:74;;2206:2;2191:18;1680:54:35;2072:226:123;3833:99:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3833:99:34;;;4008:32;;;;;-1:-1:-1;;;;;4008:32:34;;;15848:567:35;;;;;;:::i;:::-;;:::i;1947:34::-;;;;;-1:-1:-1;;;;;1947:34:35;;;2675:40:34;;;;;;2493:57;;;;;;6690:200;;;;;;:::i;:::-;;:::i;25865:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;5182:25:123;;;5238:2;5223:18;;5216:34;;;;5155:18;25865:1145:35;5008:248:123;11670:696:35;;;;;;:::i;:::-;;:::i;2133:25:34:-;;;;;;4540:108;;;;;;:::i;:::-;;:::i;2164:27::-;;;;;;7593:168;;;;;;:::i;:::-;;:::i;10917:2032::-;;;;;;:::i;:::-;;:::i;2857:36::-;;;;;;8167:165;;;;;;:::i;:::-;;:::i;2397:57::-;;;;;;7150:282;;;;;;:::i;:::-;;:::i;3272:121:35:-;;;;;;:::i;:::-;;:::i;1904:25:34:-;;;;;-1:-1:-1;;;;;1904:25:34;;;1505:31:35;;;;;-1:-1:-1;;;;;1505:31:35;;;9020:1674:34;;;;;;:::i;:::-;;:::i;2392:121:35:-;;;;;;:::i;:::-;;:::i;2053:26:34:-;;;;;-1:-1:-1;;;;;2053:26:34;;;1908:101:3;;;:::i;24485:639:35:-;;;;;;:::i;:::-;;:::i;1868:54::-;;;;;-1:-1:-1;;;;;1868:54:35;;;1316:26;;;;;-1:-1:-1;;;;;1316:26:35;;;29361:1209;;;;;;:::i;:::-;;:::i;3953:36:34:-;;;;;-1:-1:-1;;;;;3953:36:34;;;1795:20;;;;;-1:-1:-1;;;;;1795:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;1213:34:35;;;;;;;;;;;;;;;8707:14:123;;8700:22;8682:41;;8670:2;8655:18;1213:34:35;8542:187:123;30681:668:35;;;;;;:::i;:::-;;:::i;3078:22:34:-;;;;;;2590:30;;;;;;2726:224:35;;;;;;:::i;:::-;;:::i;13484:334:34:-;;;:::i;1967:32::-;;;;;-1:-1:-1;;;;;1967:32:34;;;1605:38:35;;;;;;:::i;:::-;;:::i;3524:175::-;;;;;;:::i;:::-;;:::i;1821:41::-;;;;;-1:-1:-1;;;;;1821:41:35;;;3578:72:34;;;;;;:::i;:::-;;:::i;:::-;;;;9348:25:123;;;9404:2;9389:18;;9382:34;;;;9432:18;;;9425:34;;;;9490:2;9475:18;;9468:34;9533:3;9518:19;;9511:35;9577:3;9562:19;;9555:35;9335:3;9320:19;3578:72:34;9061:535:123;1821:32:34;;;;;-1:-1:-1;;;;;1821:32:34;;;2957:37;;;;;;32511:564:35;;;;;;:::i;:::-;;:::i;2229:28:34:-;;;;;;4341:118:35;;;;;;:::i;:::-;;:::i;15796:301:34:-;;;;;;:::i;:::-;;:::i;2301:42::-;;;;;;13047:826:35;;;;;;:::i;:::-;;:::i;1381:36::-;;;;;-1:-1:-1;;;;;1381:36:35;;;5873:613:34;;;;;;:::i;:::-;;:::i;3060:111:35:-;;;;;;:::i;:::-;;:::i;3160:26:34:-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;5124:228:34:-;;;;;;:::i;:::-;;:::i;4844:226::-;;;;;;:::i;:::-;;:::i;3226:39::-;;;;;-1:-1:-1;;;;;3226:39:34;;;5235:618:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;5394:21:35::1;5418:8;5427:4;5418:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;5531:9:::0;;5418:14;;-1:-1:-1;5513:128:35::1;::::0;-1:-1:-1;;;;;5531:9:35::1;5572:10;5604:4;5623:8:::0;5513:45:::1;:128::i;:::-;5690:156;5712:4;5730:10;5690:156;;;;;;;;;;;::::0;5770:8:::1;5792:15;5821;5690:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;5235:618:35:o;3936:300::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4069:12:35::1;:51:::0;;-1:-1:-1;;;;;4069:51:35;;::::1;-1:-1:-1::0;;;;;;4069:51:35;;::::1;;::::0;;;4130:25:::1;:99:::0;;;;;::::1;::::0;::::1;;::::0;;3936:300::o;14360:166:34:-;1233:21;;-1:-1:-1;;;;;1233:21:34;929:10:14;-1:-1:-1;;;;;1217:37:34;;1209:67;;;;-1:-1:-1;;;;;1209:67:34;;;;;;;:::i;:::-;1687:11:::1;;1676:7;;:22;;1668:58;;;;-1:-1:-1::0;;;;;1668:58:34::1;;;;;;;:::i;:::-;14518:1:::2;14494:21;:25:::0;14360:166::o;4251:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4369:5:34::1;:14:::0;;-1:-1:-1;;;;;4369:14:34;;::::1;-1:-1:-1::0;;;;;;4369:14:34;;::::1;;::::0;;;4393:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;4251:187::o;3415:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3415:26:34;;;;-1:-1:-1;3415:26:34;;;;;;;;:::o;31625:501:35:-;2181:19;;-1:-1:-1;;;;;2181:19:35;929:10:14;-1:-1:-1;;;;;2165:35:35;;2157:59;;;;-1:-1:-1;;;;;2157:59:35;;;;;;;:::i;:::-;31806:11:::1;;31795:7;;:22;31791:329;;;31913:52;31939:11;31952:12;31913:25;:52::i;:::-;31625:501:::0;;:::o;31791:329::-:1;32071:5;::::0;32064:45:::1;::::0;;;;-1:-1:-1;;;;;13822:55:123;;;32064:45:35::1;::::0;::::1;13804:74:123::0;13894:18;;;13887:34;;;32071:5:35;;::::1;::::0;32064:18:::1;::::0;13777::123;;32064:45:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;31625:501:::0;;:::o;1680:54::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1680:54:35;;-1:-1:-1;1680:54:35;:::o;15848:567::-;15978:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;16028:28:35::1;16059:146;16082:4;16100:10;16059:146;;;;;;;;;;;::::0;16140:10:::1;16164:12;16190:5;16059:9;:146::i;:::-;16028:177;;16267:111;16332:10;16356:4;:12;;;16285:8;16294:4;16285:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;-1:-1:-1;;;;;16285:19:35::1;::::0;16267:111;:51:::1;:111::i;:::-;16396:12:::0;1772:1:8;2872:7;:22;16396:12:35;15848:567;-1:-1:-1;;;;15848:567:35:o;6690:200:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1461:24:34::1;::::0;-1:-1:-1;;;;;1461:24:34::1;1452:4;1444:41;1436:69;;;;-1:-1:-1::0;;;;;1436:69:34::1;;;;;;;:::i;:::-;6825:27:::2;:58:::0;6690:200::o;25865:1145:35:-;2181:19;;26145:18;;;;-1:-1:-1;;;;;2181:19:35;929:10:14;-1:-1:-1;;;;;2165:35:35;;2157:59;;;;-1:-1:-1;;;;;2157:59:35;;;;;;;:::i;:::-;26285:201:::1;26321:8;26343:15;26372:4;26390:10;26414:12;26440:18;26472:4;26285:22;:201::i;:::-;26251:235:::0;;-1:-1:-1;26251:235:35;-1:-1:-1;26552:14:35;;26548:164:::1;;26600:17;::::0;26582:119:::1;::::0;-1:-1:-1;;;;;26600:17:35::1;26649:10;26677::::0;26582:49:::1;:119::i;:::-;26841:21:::0;;26837:167:::1;;26933:11;::::0;26896:5:::1;::::0;26878:115:::1;::::0;-1:-1:-1;;;;;26896:5:35;;::::1;::::0;26933:11:::1;26962:17:::0;26878:37:::1;:115::i;:::-;25865:1145:::0;;;;;;;;;:::o;11670:696::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;11888:17:35::1;11908:8;11917:4;11908:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;12000:17:::1;::::0;-1:-1:-1;;;;;11908:20:35;;::::1;::::0;-1:-1:-1;11982:133:35::1;::::0;12000:17:::1;12049:10;11908:20:::0;12096:9;11982:53:::1;:133::i;:::-;12159:200;12192:4;12210:10;12159:200;;;;;;;;;;;::::0;12250:9:::1;12273:15;12302;12331:18;12159:19;:200::i;4540:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4615:11:34::1;:26:::0;;-1:-1:-1;;;;;;4615:26:34::1;-1:-1:-1::0;;;;;4615:26:34;;;::::1;::::0;;;::::1;::::0;;4540:108::o;7593:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7708:21:34::1;:46:::0;;-1:-1:-1;;;;;;7708:46:34::1;-1:-1:-1::0;;;;;7708:46:34;;;::::1;::::0;;;::::1;::::0;;7593:168::o;10917:2032::-;10967:17;11045:21;11069:8;11078:4;11069:14;;;;;;;;:::i;:::-;;;;;;;;;;;11045:38;;11172:4;:20;;;11156:12;:36;11152:75;;-1:-1:-1;11215:1:34;;10917:2032;-1:-1:-1;;10917:2032:34:o;11152:75::-;11321:10;;;;11314:32;;;;;;;;11292:19;;-1:-1:-1;;;;;11321:10:34;;11314:30;;:32;;;;;;;;;;;;;;11321:10;11314:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11292:54;-1:-1:-1;11360:16:34;11356:104;;-1:-1:-1;11415:12:34;11392:20;;;;:35;-1:-1:-1;11448:1:34;;10917:2032;-1:-1:-1;10917:2032:34:o;11356:104::-;11572:21;11596:38;11613:4;:20;;;11596:12;:16;;:38;;;;:::i;:::-;11572:62;;11743:19;11765:113;11862:15;;11765:79;11828:4;:15;;;11765:45;11796:13;;11765;:30;;:45;;;;:::i;:::-;:62;;:79::i;:::-;:96;;:113::i;:::-;11986:24;;11743:135;;-1:-1:-1;;;;;;11986:24:34;11977:4;11969:41;11965:706;;;12170:53;12196:11;12217:4;12170:25;:53::i;:::-;12312:1;12300:13;;11965:706;;;12467:5;;12460:46;;;;;12487:4;12460:46;;;13804:74:123;13894:18;;;13887:34;;;-1:-1:-1;;;;;12467:5:34;;;;12460:18;;13777::123;;12460:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12566:11;12554:23;;12629:31;12650:9;12629:20;:31::i;:::-;12792:20;;;;:37;;12817:11;12792:24;:37::i;:::-;12769:20;;;:60;-1:-1:-1;;12930:12:34;12907:20;;;;:35;;;;-1:-1:-1;10917:2032:34;;-1:-1:-1;10917:2032:34:o;8167:165::-;8264:7;8294:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8294:24:34;;;;;;;;;:31;8167:165;;;;;:::o;7150:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7309:7:34::1;:18:::0;;;;7337:11:::1;:26:::0;7373:24:::1;:52:::0;;-1:-1:-1;;;;;;7373:52:34::1;-1:-1:-1::0;;;;;7373:52:34;;::::1;::::0;;;::::1;::::0;;7150:282::o;3272:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;3357:29:35;;::::1;::::0;:21:::1;::::0;:29:::1;::::0;::::1;::::0;::::1;:::i;9020:1674:34:-:0;1233:21;;-1:-1:-1;;;;;1233:21:34;929:10:14;-1:-1:-1;;;;;1217:37:34;;1209:67;;;;-1:-1:-1;;;;;1209:67:34;;;;;;;:::i;:::-;9443:47:::1;9493:173;9632:33;:22:::0;9659:5:::1;9632:26;:33::i;:::-;9493:117;9581:28;9493:66;9540:18;9493:25;;:46;;:66;;;;:::i;:173::-;9443:223;;9799:42;;9745:39;:96;9728:472;;;-1:-1:-1::0;9908:42:34::1;::::0;9728:472:::1;;;10038:42;;9984:39;:96;9967:233;;;-1:-1:-1::0;10147:42:34::1;::::0;9967:233:::1;10673:12;::::0;10504:183:::1;::::0;10635:51:::1;::::0;:33:::1;:22:::0;10662:5:::1;10635:26;:33::i;:51::-;10601:15;::::0;10504:113:::1;::::0;:79:::1;:21:::0;10543:39;10504:38:::1;:79::i;:183::-;10488:13;:199:::0;-1:-1:-1;;;;;;9020:1674:34:o;2392:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;2472:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;2472:34:35;;::::1;::::0;;;::::1;::::0;;2392:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;24485:639:35:-;24664:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;24715::35::1;24739:191;24775:10;24739:191;;;;;;;;;;;::::0;24815:4:::1;24833:10;24857:12;24883:18;24915:5;24739:22;:191::i;:::-;-1:-1:-1::0;25000:17:35::1;::::0;24714:216;;-1:-1:-1;24982:107:35::1;::::0;-1:-1:-1;;;;;25000:17:35::1;25045:10;24714:216:::0;24982:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;25107:10:35;24485:639;-1:-1:-1;;;;;24485:639:35:o;29361:1209::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;29589:22:35::1;29614:21:::0;;;:11:::1;:21;::::0;;;;;;;29636:10:::1;29614:33:::0;;;;;;;:71;;29661:14;;29614:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;29745:21;;;:11:::1;:21:::0;;;;;;29767:10:::1;29745:33:::0;;;;;;;;:71;;29614:96;;-1:-1:-1;29745:33:35;29792:14;;29745:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;29720:111;;29863:20;29889:192;29925:10;29889:192;;;;;;;;;;;::::0;29965:8:::1;29987:14;30015:5;30034:18;30066:5;29889:22;:192::i;:::-;29862:219;;;30127:121;30190:8;30199:6;30190:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;30145:17:::1;::::0;-1:-1:-1;;;;;30145:17:35;;::::1;::::0;30190:22:::1;30226:12:::0;30127:49:::1;:121::i;:::-;30280:203;30313:6;30333:10;30280:203;;;;;;;;;;;::::0;30373:12:::1;30399:14;30427;30455:18;30280:19;:203::i;:::-;30499:64;::::0;30518:10:::1;2218:74:123::0;;30556:6:35;;30540:14;;30530:8;;30499:64:::1;::::0;2206:2:123;2191:18;30499:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;29361:1209:35:o;30681:668::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;30829:19:35::1;30851:31;30865:4:::0;30871:10:::1;30851:13;:31::i;:::-;30829:53;;30897:11;30892:123;30920:11;30914:3;:17;30892:123;;;30954:50;30964:4;30970:10;30954:50;;;;;;;;;;;::::0;30986:3:::1;30991:5;30998::::0;30954:9:::1;:50::i;:::-;-1:-1:-1::0;30933:5:35::1;::::0;::::1;:::i;:::-;;;30892:123;;;;31067:16;31104:8;31113:4;31104:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;31086:85:::1;::::0;;;;31156:4:::1;31086:85;::::0;::::1;2218:74:123::0;-1:-1:-1;;;;;31104:19:35;;::::1;::::0;31086:48:::1;::::0;2191:18:123;;31086:85:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31067:104:::0;-1:-1:-1;31185:12:35;;31181:162:::1;;31213:119;31282:10;31310:8;31231;31240:4;31231:14;;;;;;;;:::i;31213:119::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;30681:668:35:o;2726:224::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;2861:11:35::1;:26:::0;;-1:-1:-1;;;;;2861:26:35;;::::1;-1:-1:-1::0;;;;;;2861:26:35;;::::1;;::::0;;;2897:21:::1;:46:::0;;;;;::::1;::::0;::::1;;::::0;;2726:224::o;13484:334:34:-;1233:21;;-1:-1:-1;;;;;1233:21:34;929:10:14;-1:-1:-1;;;;;1217:37:34;;1209:67;;;;-1:-1:-1;;;;;1209:67:34;;;;;;;:::i;:::-;1687:11:::1;;1676:7;;:22;;1668:58;;;;-1:-1:-1::0;;;;;1668:58:34::1;;;;;;;:::i;:::-;13701:11:::2;::::0;13726:22:::2;::::0;13668:5:::2;::::0;13650:108:::2;::::0;-1:-1:-1;;;;;13668:5:34;;::::2;::::0;13701:11;::::2;::::0;13650:37:::2;:108::i;1605:38:35:-:0;;;;;;;;;;;;3524:175;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;3647:45:35;;::::1;::::0;:37:::1;::::0;:45:::1;::::0;::::1;::::0;::::1;:::i;3578:72:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3578:72:34;;-1:-1:-1;3578:72:34;-1:-1:-1;3578:72:34;;;:::o;32511:564:35:-;1233:21:34;;-1:-1:-1;;;;;1233:21:34;929:10:14;-1:-1:-1;;;;;1217:37:34;;1209:67;;;;-1:-1:-1;;;;;1209:67:34;;;;;;;:::i;:::-;1461:24:::1;::::0;-1:-1:-1;;;;;1461:24:34::1;1452:4;1444:41;1436:69;;;;-1:-1:-1::0;;;;;1436:69:34::1;;;;;;;:::i;:::-;32858:11:35::2;::::0;32807:117:::2;::::0;-1:-1:-1;;;;;32858:11:35::2;32883:31;:12:::0;32900:13;32883:16:::2;:31::i;:::-;32825:5;::::0;-1:-1:-1;;;;;32825:5:35::2;::::0;32807:117;:37:::2;:117::i;:::-;33050:17;::::0;33009:59:::2;::::0;33035:13;;-1:-1:-1;;;;;33050:17:35::2;33009:25;:59::i;4341:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4421:19:35::1;:31:::0;;-1:-1:-1;;;;;;4421:31:35::1;-1:-1:-1::0;;;;;4421:31:35;;;::::1;::::0;;;::::1;::::0;;4341:118::o;15796:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;15937:5:34::1;::::0;-1:-1:-1;;;;;15927:15:34;;::::1;15937:5:::0;::::1;15927:15;;15906:115;;;::::0;-1:-1:-1;;;;;15906:115:34;;14996:2:123;15906:115:34::1;::::0;::::1;14978:21:123::0;15035:2;15015:18;;;15008:30;15074:34;15054:18;;;15047:62;15145:23;15125:18;;;15118:51;15186:19;;15906:115:34::1;14794:417:123::0;15906:115:34::1;16031:59;-1:-1:-1::0;;;;;16031:38:34;::::1;16070:10;16082:7:::0;16031:38:::1;:59::i;13047:826:35:-:0;2181:19;;-1:-1:-1;;;;;2181:19:35;929:10:14;-1:-1:-1;;;;;2165:35:35;;2157:59;;;;-1:-1:-1;;;;;2157:59:35;;;;;;;:::i;:::-;13375:17:::1;13395:8;13404:4;13395:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;13487:17:::1;::::0;-1:-1:-1;;;;;13395:20:35;;::::1;::::0;-1:-1:-1;13469:133:35::1;::::0;13487:17:::1;13536:10;13395:20:::0;13583:9;13469:53:::1;:133::i;:::-;13655:211;13688:4;13706:8;13728:15;13757:9;13780:15;13809;13838:18;13655:19;:211::i;:::-;13329:544;13047:826:::0;;;;;;;:::o;5873:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;6141:12:34::1;:28:::0;;;6247:17;;6265:1:::1;6247:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;6202:42;:65:::0;-1:-1:-1;6322:17:34;;6340:1:::1;6322:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6277:42;:65:::0;-1:-1:-1;6352:25:34::1;:54:::0;6445:15:::1;:34:::0;-1:-1:-1;;;5873:613:34:o;3060:111:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;3133:16:35::1;:31:::0;;-1:-1:-1;;;;;;3133:31:35::1;-1:-1:-1::0;;;;;3133:31:35;;;::::1;::::0;;;::::1;::::0;;3060:111::o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;15418:2:123;2238:73:3::1;::::0;::::1;15400:21:123::0;15457:2;15437:18;;;15430:30;15496:34;15476:18;;;15469:62;15567:8;15547:18;;;15540:36;15593:19;;2238:73:3::1;15216:402:123::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;5124:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5270:10:34::1;::::0;:15;5262:49:::1;;;::::0;-1:-1:-1;;;;;5262:49:34;;15825:2:123;5262:49:34::1;::::0;::::1;15807:21:123::0;15864:2;15844:18;;;15837:30;15903:23;15883:18;;;15876:51;15944:18;;5262:49:34::1;15623:345:123::0;5262:49:34::1;5321:10;:24:::0;5124:228::o;4844:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1461:24:34::1;::::0;-1:-1:-1;;;;;1461:24:34::1;1452:4;1444:41;1436:69;;;;-1:-1:-1::0;;;;;1436:69:34::1;;;;;;;:::i;:::-;4991:10:::2;:24:::0;;-1:-1:-1;;;;;4991:24:34;;::::2;-1:-1:-1::0;;;;;;4991:24:34;;::::2;;::::0;;;5025:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4844:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;16254:15:123;;;1143:68:12;;;16236:34:123;16306:15;;16286:18;;;16279:43;16338:18;;;16331:34;;;1116:96:12;;1136:5;;1166:27;;16148:18:123;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;6634:2082:35:-;6854:25;6916:21;6940:8;6949:4;6940:14;;;;;;;;:::i;:::-;;;;;;;;;;;6916:38;;7012:1;7001:8;:12;6993:46;;;;-1:-1:-1;;;;;6993:46:35;;16578:2:123;6993:46:35;;;16560:21:123;16617:2;16597:18;;;16590:30;16656:23;16636:18;;;16629:51;16697:18;;6993:46:35;16376:345:123;6993:46:35;7165:16;7176:4;7165:10;:16::i;:::-;7145:36;;7242:21;7266:43;7283:8;7293:15;7266:16;:43::i;:::-;7405:10;;;;7359:9;;7242:67;;-1:-1:-1;7341:106:35;;-1:-1:-1;;;;;7359:9:35;;;;7405:10;7429:8;7341:50;:106::i;:::-;7574:19;7603:8;7612:4;7603:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;7596:77;;;;;;;;947:25:123;;;-1:-1:-1;;;;;7603:20:35;;;;7596:45;;920:18:123;;7596:77:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7777:17;;7754:100;;;;;;;;16894:25:123;;;7831:22:35;;;;;16962:14:123;16955:22;16935:18;;;16928:50;7574:99:35;;-1:-1:-1;7728:23:35;;-1:-1:-1;;;;;7777:17:35;;;;7754:59;;16867:18:123;;7754:100:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8036:17;;8013:125;;;;;;;;5182:25:123;;;5223:18;;;5216:34;;;7728:126:35;;-1:-1:-1;7984:26:35;;-1:-1:-1;;;;;8036:17:35;;;;8013:61;;5155:18:123;;8013:125:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8278:30;;;;7984:154;;-1:-1:-1;8278:76:35;;7984:154;8278:34;:76::i;:::-;8245:30;;;:109;8391:217;8419:4;8437:13;8464:15;8493:18;8525:15;8554;8583;8391:14;:217::i;:::-;8694:4;8677:15;8654:55;;;;;;:::i;:::-;;;;;;;;8662:13;-1:-1:-1;;;;;8654:55:35;;8700:8;8654:55;;;;947:25:123;;935:2;920:18;;801:177;8654:55:35;;;;;;;;6881:1835;;;;;6634:2082;;;;;;;;:::o;14755:250:34:-;14931:10;;14894:5;;14876:122;;-1:-1:-1;;;;;14894:5:34;;;;14931:10;14955:12;14981:7;14876:41;:122::i;17116:5790:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;17474:27:35;;;:57;;;;;17530:1;17505:15;:22;:26;17474:57;17473:139;;;-1:-1:-1;;;;;;17553:27:35;;;;;;:58;;-1:-1:-1;17584:22:35;;:27;17553:58;17452:215;;;;-1:-1:-1;;;;;17452:215:35;;17733:2:123;17452:215:35;;;17715:21:123;17772:2;17752:18;;;17745:30;17811:31;17791:18;;;17784:59;17860:18;;17452:215:35;17531:353:123;17452:215:35;17733:27;17763:119;17788:4;17806:10;17830:15;17859:13;17763:11;:119::i;:::-;17733:149;;17938:22;17963:8;17972:4;17963:14;;;;;;;;:::i;:::-;;;;;;;;;;;17938:39;;18069:1;18045:8;:21;;;:25;18037:63;;;;-1:-1:-1;;;;;18037:63:35;;18091:2:123;18037:63:35;;;18073:21:123;18130:2;18110:18;;;18103:30;18169:27;18149:18;;;18142:55;18214:18;;18037:63:35;17889:349:123;18037:63:35;18222:1;18188:5;:31;;;:35;18167:112;;;;-1:-1:-1;;;;;18167:112:35;;18445:2:123;18167:112:35;;;18427:21:123;18484:2;18464:18;;;18457:30;18523:32;18503:18;;;18496:60;18573:18;;18167:112:35;18243:354:123;18167:112:35;18353:22;;;;:27;18345:60;;;;-1:-1:-1;;;;;18345:60:35;;18804:2:123;18345:60:35;;;18786:21:123;18843:2;18823:18;;;18816:30;18882:22;18862:18;;;18855:50;18922:18;;18345:60:35;18602:344:123;18345:60:35;18511:16;18522:4;18511:10;:16::i;:::-;;18569:23;18595:164;18739:8;:19;;;18609:115;18679:5;:31;;;18609:48;18635:5;:21;;;18609:8;:21;;;:25;;:48;;;;:::i;:115::-;18595:143;;:164::i;:::-;18569:190;-1:-1:-1;18835:19:35;;18831:2263;;19044:17;;19021:87;;;;;;19204:13:123;;19021:87:35;;;19186:32:123;19274:4;19262:17;;19256:24;19234:20;;;19227:54;19325:17;;;19319:24;19297:20;;;19290:54;19400:4;19388:17;;19382:24;19360:20;;;19353:54;19463:4;19451:17;;19445:24;19423:20;;;19416:54;19526:4;19514:17;;19508:24;19486:20;;;19479:54;19549:19;;;19542:35;;;18944:19:35;;;;-1:-1:-1;;;;;19044:17:35;;;;19021:60;;19158:19:123;;19021:87:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18926:182;;;;19127:19;19123:1961;;;19209:21;;;:35;;;19278:11;;19267:7;;:22;19263:777;;;19472:19;;19468:213;;19623:17;;19604:54;;-1:-1:-1;;;;;19623:17:35;19642:15;19604:18;:54::i;:::-;19123:1961;;19263:777;19914:19;;19910:112;;19961:38;19983:15;19961:21;:38::i;19123:1961::-;20164:15;;20160:108;;20203:46;20222:13;20237:11;20203:18;:46::i;:::-;20301:11;;20290:7;;:22;20286:784;;;20499:19;;20495:213;;20650:17;;20631:54;;-1:-1:-1;;;;;20650:17:35;20669:15;20631:18;:54::i;20286:784::-;20944:19;;20940:112;;20991:38;21013:15;20991:21;:38::i;:::-;18856:2238;;18831:2263;21181:12;21176:1724;;21380:26;21409:94;21443:13;21474:15;21409:16;:94::i;:::-;21380:123;;21543:13;21566:8;21575:4;21566:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;;;;;;;-1:-1:-1;;;;;21566:20:35;21543:44;;21836:22;21861:184;21995:49;22023:6;-1:-1:-1;;;;;22023:18:35;;:20;;;;;-1:-1:-1;;;22023:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21995:23;;;;;:27;:49::i;:::-;21861:112;21948:6;-1:-1:-1;;;;;21948:22:35;;:24;;;;;-1:-1:-1;;;21948:24:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21861:38;;:65;;21921:4;21861:59;:65::i;:184::-;22116:40;;;;;;;;947:25:123;;;21836:209:35;;-1:-1:-1;;;;;;22116:24:35;;;;;920:18:123;;22116:40:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22311:21:35;;22241:48;;;;:92;;:69;:92::i;:::-;22207:31;;;;:126;;;;22425:10;;22407:84;;;;;22472:4;22407:84;;;2218:74:123;;;;-1:-1:-1;;;;;22425:10:35;;22407:39;;2191:18:123;;22407:84:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22392:99;;:12;22544:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;22544:37:35;;;;;;;;;:49;;22627:15;;22544:37;22582:10;;22544:49;;;;;;:::i;:::-;;;;;;;;;;;:80;;:98;;;;22813:4;22780:15;22723:166;;;;;;:::i;:::-;;;;;;;;22749:13;-1:-1:-1;;;;;22723:166:35;;22835:10;22863:4;:12;;;22723:166;;;;;;5182:25:123;;;5238:2;5223:18;;5216:34;5170:2;5155:18;;5008:248;22723:166:35;;;;;;;;21195:1705;;;21176:1724;17369:5537;;;17116:5790;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;13822:55:123;;895:58:12;;;13804:74:123;13894:18;;;13887:34;;;868:86:12;;888:5;;918:23;;13777:18:123;;895:58:12;13630:297:123;868:86:12;745:216;;;:::o;27845:1107:35:-;28112:18;28132:25;28199:18;28220:8;28229:4;28220:14;;;;;;;;:::i;:::-;;;;;;;;:20;:14;;;;;:20;;-1:-1:-1;;;;;28220:20:35;;-1:-1:-1;28357:171:35;28380:4;28398:8;28420:15;28449:10;28473:12;28499:19;28357:9;:171::i;:::-;28326:202;;28606:120;28680:10;28704:4;:12;;;28624:8;28633:4;28624:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;28624:19:35;;28606:120;:60;:120::i;:::-;28839:12;;28783:110;;;;;;;;5182:25:123;;;;5223:18;;;5216:34;;;-1:-1:-1;;;;;28783:42:35;;;;;5155:18:123;;28783:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28770:123;;28924:4;:21;;;28904:41;;28159:793;;27845:1107;;;;;;;;;;:::o;14578:982::-;14883:17;14903:8;14912:4;14903:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;15014:106;;;;;;;;5182:25:123;;;5223:18;;;5216:34;;;-1:-1:-1;;;;;14903:20:35;;;;-1:-1:-1;14903:20:35;;15014:41;;5155:18:123;;15014:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14995:125;;15198:115;15272:9;15295:8;15216;15225:4;15216:14;;;;;;;;:::i;15198:115::-;15386:167;15408:4;15426:8;15448:15;15477:8;15499:15;15528;15386:8;:167::i;:::-;;14837:723;;14578:982;;;;;;;:::o;3119:96:19:-;3177:7;3203:5;3207:1;3203;:5;:::i;:::-;3196:12;3119:96;-1:-1:-1;;;3119:96:19:o;3462:::-;3520:7;3546:5;3550:1;3546;:5;:::i;3847:96::-;3905:7;3931:5;3935:1;3931;:5;:::i;13119:212:34:-;1687:11;;1676:7;;:22;;1668:58;;;;-1:-1:-1;;;;;1668:58:34;;;;;;;:::i;:::-;13283:21:::1;::::0;:41:::1;::::0;13309:14;13283:25:::1;:41::i;:::-;13259:21;:65:::0;-1:-1:-1;13119:212:34:o;2752:96:19:-;2810:7;2836:5;2840:1;2836;:5;:::i;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;21005:2:123;3921:85:12;;;20987:21:123;21044:2;21024:18;;;21017:30;21083:34;21063:18;;;21056:62;21154:12;21134:18;;;21127:40;21184:19;;3921:85:12;20803:406:123;8722:686:35;8946:8;-1:-1:-1;;;;;9026:22:35;;9022:380;;9162:1;9137:15;:22;:26;9112:129;;;;-1:-1:-1;;;;;9112:129:35;;21416:2:123;9112:129:35;;;21398:21:123;21455:2;21435:18;;;21428:30;21494:34;21474:18;;;21467:62;21565:14;21545:18;;;21538:42;21597:19;;9112:129:35;21214:408:123;9112:129:35;9366:24;9374:15;9366:24;:::i;:::-;9358:33;;;;8722:686;-1:-1:-1;;;8722:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;22250:34:123;-1:-1:-1;;;;;22320:15:123;;;22300:18;;;22293:43;2236:20:12;;2301:5;;2259:15;;;;;22162:18:123;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;13822:55:123;;2343:69:12;;;13804:74:123;13894:18;;;13887:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;13777:18:123;;2343:69:12;13630:297:123;9846:1342:35;10151:20;10174:8;10183:4;10174:14;;;;;;;;:::i;:::-;;;;;;;;;10151:37;;;;;;;;;10174:14;;;;;;;10151:37;;-1:-1:-1;;;;;10151:37:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10264:504;;;;;;;;;;;;;;;;10501:30;10435:20;;10151:37;;-1:-1:-1;10264:504:35;;;10435:110;;:44;;10304:18;10435:24;:44::i;:110::-;10264:504;;;;;;;;;;;;;;;;-1:-1:-1;10264:504:35;;;;;;;10832:17;;;:11;:17;;;;;-1:-1:-1;;;;;10832:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10999:22;;10230:538;;-1:-1:-1;10999:26:35;10995:187;;11158:13;11041:18;:24;11060:4;11041:24;;;;;;;;;;;11066:15;11041:41;;;;;;:::i;:::-;;;;;;;;;;;;;:114;11100:41;11139:1;11100:34;11114:4;11120:13;11100;:34::i;:41::-;11041:114;;;;;;;;;;;;:130;;;;;-1:-1:-1;;;;;11041:130:35;;;;;-1:-1:-1;;;;;11041:130:35;;;;;;10995:187;10121:1067;;9846:1342;;;;;;;:::o;23399:605::-;23568:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23568:27:35;-1:-1:-1;;;;;23611:27:35;;;23607:391;;23700:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;23700:32:35;;;;;;;;;:44;;23733:10;;23700:44;;;;;;:::i;:::-;;;;;;;;;;;23689:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23607:391;;;23813:20;23836:24;;;:18;:24;;;;;;:41;;;;23861:15;;23836:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;23944:17;;;:11;:17;;;;;-1:-1:-1;;;;;23836:83:35;;;23944:31;;;;;;:43;;23836:83;;-1:-1:-1;23944:31:35;23836:83;;23944:43;;;;;;:::i;:::-;;;;;;;;;;;23933:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23761:237;23607:391;23399:605;;;;;;:::o;15246:333:34:-;15400:5;;15382:49;;;;;15425:4;15382:49;;;2218:74:123;15344:9:34;;15325:16;;-1:-1:-1;;;;;15400:5:34;;;;15382:34;;2191:18:123;;15382:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15363:68;;15457:8;15445:9;:20;15441:70;;;15492:8;15481:19;;15441:70;15538:5;;15520:52;;-1:-1:-1;;;;;15538:5:34;15558:3;15563:8;15520:37;:52::i;13990:217::-;1687:11;;1676:7;;:22;;1668:58;;;;-1:-1:-1;;;;;1668:58:34;;;;;;;:::i;:::-;14157:22:::1;::::0;:43:::1;::::0;14184:15;14157:26:::1;:43::i;:::-;14132:22;:68:::0;-1:-1:-1;13990:217:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4005;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;22956:2:123;5239:60:13;;;22938:21:123;22995:2;22975:18;;;22968:30;23034:31;23014:18;;;23007:59;23083:18;;5239:60:13;22754:353:123;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:316:123;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:123;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:123;305:18;;;292:32;;14:316;-1:-1:-1;14:316:123:o;335:196::-;403:20;;-1:-1:-1;;;;;452:54:123;;442:65;;432:93;;521:1;518;511:12;432:93;335:196;;;:::o;536:260::-;604:6;612;665:2;653:9;644:7;640:23;636:32;633:52;;;681:1;678;671:12;633:52;704:29;723:9;704:29;:::i;:::-;694:39;;752:38;786:2;775:9;771:18;752:38;:::i;:::-;742:48;;536:260;;;;;:::o;983:180::-;1042:6;1095:2;1083:9;1074:7;1070:23;1066:32;1063:52;;;1111:1;1108;1101:12;1063:52;-1:-1:-1;1134:23:123;;983:180;-1:-1:-1;983:180:123:o;1813:254::-;1881:6;1889;1942:2;1930:9;1921:7;1917:23;1913:32;1910:52;;;1958:1;1955;1948:12;1910:52;1994:9;1981:23;1971:33;;2023:38;2057:2;2046:9;2042:18;2023:38;:::i;2303:184::-;-1:-1:-1;;;;;2352:1:123;2345:88;2452:4;2449:1;2442:15;2476:4;2473:1;2466:15;2492:275;2563:2;2557:9;2628:2;2609:13;;-1:-1:-1;;2605:27:123;2593:40;;2663:18;2648:34;;2684:22;;;2645:62;2642:88;;;2710:18;;:::i;:::-;2746:2;2739:22;2492:275;;-1:-1:-1;2492:275:123:o;2772:530::-;2814:5;2867:3;2860:4;2852:6;2848:17;2844:27;2834:55;;2885:1;2882;2875:12;2834:55;2921:6;2908:20;2947:18;2943:2;2940:26;2937:52;;;2969:18;;:::i;:::-;3013:55;3056:2;3037:13;;-1:-1:-1;;3033:27:123;3062:4;3029:38;3013:55;:::i;:::-;3093:2;3084:7;3077:19;3139:3;3132:4;3127:2;3119:6;3115:15;3111:26;3108:35;3105:55;;;3156:1;3153;3146:12;3105:55;3221:2;3214:4;3206:6;3202:17;3195:4;3186:7;3182:18;3169:55;3269:1;3244:16;;;3262:4;3240:27;3233:38;;;;3248:7;2772:530;-1:-1:-1;;;2772:530:123:o;3307:456::-;3393:6;3401;3409;3462:2;3450:9;3441:7;3437:23;3433:32;3430:52;;;3478:1;3475;3468:12;3430:52;3514:9;3501:23;3491:33;;3575:2;3564:9;3560:18;3547:32;3602:18;3594:6;3591:30;3588:50;;;3634:1;3631;3624:12;3588:50;3657:49;3698:7;3689:6;3678:9;3674:22;3657:49;:::i;:::-;3647:59;;;3753:2;3742:9;3738:18;3725:32;3715:42;;3307:456;;;;;:::o;3768:118::-;3854:5;3847:13;3840:21;3833:5;3830:32;3820:60;;3876:1;3873;3866:12;3891:377;3965:6;3973;3981;4034:2;4022:9;4013:7;4009:23;4005:32;4002:52;;;4050:1;4047;4040:12;4002:52;4086:9;4073:23;4063:33;;4143:2;4132:9;4128:18;4115:32;4105:42;;4197:2;4186:9;4182:18;4169:32;4210:28;4232:5;4210:28;:::i;:::-;4257:5;4247:15;;;3891:377;;;;;:::o;4273:730::-;4383:6;4391;4399;4407;4415;4423;4476:3;4464:9;4455:7;4451:23;4447:33;4444:53;;;4493:1;4490;4483:12;4444:53;4516:29;4535:9;4516:29;:::i;:::-;4506:39;;4596:2;4585:9;4581:18;4568:32;4623:18;4615:6;4612:30;4609:50;;;4655:1;4652;4645:12;4609:50;4678:49;4719:7;4710:6;4699:9;4695:22;4678:49;:::i;:::-;4668:59;;;4774:2;4763:9;4759:18;4746:32;4736:42;;4825:2;4814:9;4810:18;4797:32;4787:42;;4879:3;4868:9;4864:19;4851:33;4893:28;4915:5;4893:28;:::i;:::-;4940:5;4930:15;;;4992:3;4981:9;4977:19;4964:33;4954:43;;4273:730;;;;;;;;:::o;5261:385::-;5347:6;5355;5363;5371;5424:3;5412:9;5403:7;5399:23;5395:33;5392:53;;;5441:1;5438;5431:12;5392:53;-1:-1:-1;;5464:23:123;;;5534:2;5519:18;;5506:32;;-1:-1:-1;5585:2:123;5570:18;;5557:32;;5636:2;5621:18;5608:32;;-1:-1:-1;5261:385:123;-1:-1:-1;5261:385:123:o;5651:186::-;5710:6;5763:2;5751:9;5742:7;5738:23;5734:32;5731:52;;;5779:1;5776;5769:12;5731:52;5802:29;5821:9;5802:29;:::i;5842:322::-;5919:6;5927;5935;5988:2;5976:9;5967:7;5963:23;5959:32;5956:52;;;6004:1;6001;5994:12;5956:52;6040:9;6027:23;6017:33;;6097:2;6086:9;6082:18;6069:32;6059:42;;6120:38;6154:2;6143:9;6139:18;6120:38;:::i;:::-;6110:48;;5842:322;;;;;:::o;6169:953::-;6253:6;6284:2;6327;6315:9;6306:7;6302:23;6298:32;6295:52;;;6343:1;6340;6333:12;6295:52;6383:9;6370:23;6412:18;6453:2;6445:6;6442:14;6439:34;;;6469:1;6466;6459:12;6439:34;6507:6;6496:9;6492:22;6482:32;;6552:7;6545:4;6541:2;6537:13;6533:27;6523:55;;6574:1;6571;6564:12;6523:55;6610:2;6597:16;6632:2;6628;6625:10;6622:36;;;6638:18;;:::i;:::-;6685:2;6681;6677:11;6667:21;;6708:28;6732:2;6728;6724:11;6708:28;:::i;:::-;6770:15;;;6840:11;;;6836:20;;;6801:12;;;;6868:19;;;6865:39;;;6900:1;6897;6890:12;6865:39;6924:11;;;;6944:148;6960:6;6955:3;6952:15;6944:148;;;7026:23;7045:3;7026:23;:::i;:::-;7014:36;;6977:12;;;;7070;;;;6944:148;;;7111:5;6169:953;-1:-1:-1;;;;;;;;6169:953:123:o;7127:454::-;7222:6;7230;7238;7246;7254;7307:3;7295:9;7286:7;7282:23;7278:33;7275:53;;;7324:1;7321;7314:12;7275:53;-1:-1:-1;;7347:23:123;;;7417:2;7402:18;;7389:32;;-1:-1:-1;7468:2:123;7453:18;;7440:32;;7519:2;7504:18;;7491:32;;-1:-1:-1;7570:3:123;7555:19;7542:33;;-1:-1:-1;7127:454:123;-1:-1:-1;7127:454:123:o;7586:241::-;7642:6;7695:2;7683:9;7674:7;7670:23;7666:32;7663:52;;;7711:1;7708;7701:12;7663:52;7750:9;7737:23;7769:28;7791:5;7769:28;:::i;7832:446::-;7915:6;7923;7931;7939;7992:3;7980:9;7971:7;7967:23;7963:33;7960:53;;;8009:1;8006;7999:12;7960:53;8045:9;8032:23;8022:33;;8102:2;8091:9;8087:18;8074:32;8064:42;;8156:2;8145:9;8141:18;8128:32;8169:28;8191:5;8169:28;:::i;:::-;7832:446;;;;-1:-1:-1;8216:5:123;;8268:2;8253:18;8240:32;;-1:-1:-1;;7832:446:123:o;8734:322::-;8811:6;8819;8827;8880:2;8868:9;8859:7;8855:23;8851:32;8848:52;;;8896:1;8893;8886:12;8848:52;8932:9;8919:23;8909:33;;8961:38;8995:2;8984:9;8980:18;8961:38;:::i;:::-;8951:48;;9046:2;9035:9;9031:18;9018:32;9008:42;;8734:322;;;;;:::o;9601:248::-;9669:6;9677;9730:2;9718:9;9709:7;9705:23;9701:32;9698:52;;;9746:1;9743;9736:12;9698:52;-1:-1:-1;;9769:23:123;;;9839:2;9824:18;;;9811:32;;-1:-1:-1;9601:248:123:o;9854:254::-;9922:6;9930;9983:2;9971:9;9962:7;9958:23;9954:32;9951:52;;;9999:1;9996;9989:12;9951:52;10022:29;10041:9;10022:29;:::i;:::-;10012:39;10098:2;10083:18;;;;10070:32;;-1:-1:-1;;;9854:254:123:o;10113:738::-;10235:6;10243;10251;10259;10267;10275;10283;10336:3;10324:9;10315:7;10311:23;10307:33;10304:53;;;10353:1;10350;10343:12;10304:53;10389:9;10376:23;10366:33;;10418:38;10452:2;10441:9;10437:18;10418:38;:::i;:::-;10408:48;;10507:2;10496:9;10492:18;10479:32;10534:18;10526:6;10523:30;10520:50;;;10566:1;10563;10556:12;10520:50;10589:49;10630:7;10621:6;10610:9;10606:22;10589:49;:::i;:::-;10113:738;;;;-1:-1:-1;10579:59:123;;10685:2;10670:18;;10657:32;;-1:-1:-1;10736:3:123;10721:19;;10708:33;;10788:3;10773:19;;10760:33;;-1:-1:-1;10840:3:123;10825:19;;;10812:33;;-1:-1:-1;10113:738:123;-1:-1:-1;;;10113:738:123:o;10856:821::-;10969:6;10977;10985;10993;11001;11054:3;11042:9;11033:7;11029:23;11025:33;11022:53;;;11071:1;11068;11061:12;11022:53;11107:9;11094:23;11084:33;;11168:2;11157:9;11153:18;11140:32;11191:18;11232:2;11224:6;11221:14;11218:34;;;11248:1;11245;11238:12;11218:34;11286:6;11275:9;11271:22;11261:32;;11331:7;11324:4;11320:2;11316:13;11312:27;11302:55;;11353:1;11350;11343:12;11302:55;11393:2;11380:16;11419:2;11411:6;11408:14;11405:34;;;11435:1;11432;11425:12;11405:34;11489:7;11484:2;11478;11470:6;11466:15;11462:2;11458:24;11454:33;11451:46;11448:66;;;11510:1;11507;11500:12;11448:66;10856:821;;11541:2;11533:11;;;;;-1:-1:-1;11563:6:123;;11616:2;11601:18;;11588:32;;-1:-1:-1;11667:2:123;11652:18;11639:32;;-1:-1:-1;10856:821:123;-1:-1:-1;;;10856:821:123:o;11682:355::-;11884:2;11866:21;;;11923:2;11903:18;;;11896:30;11962:33;11957:2;11942:18;;11935:61;12028:2;12013:18;;11682:355::o;12042:184::-;-1:-1:-1;;;;;12091:1:123;12084:88;12191:4;12188:1;12181:15;12215:4;12212:1;12205:15;12231:356;12433:2;12415:21;;;12452:18;;;12445:30;12511:34;12506:2;12491:18;;12484:62;12578:2;12563:18;;12231:356::o;12592:341::-;12794:2;12776:21;;;12833:2;12813:18;;;12806:30;12872:19;12867:2;12852:18;;12845:47;12924:2;12909:18;;12592:341::o;12938:347::-;13140:2;13122:21;;;13179:2;13159:18;;;13152:30;13218:25;13213:2;13198:18;;13191:53;13276:2;13261:18;;12938:347::o;13290:335::-;13492:2;13474:21;;;13531:2;13511:18;;;13504:30;13570:13;13565:2;13550:18;;13543:41;13616:2;13601:18;;13290:335::o;13932:339::-;14134:2;14116:21;;;14173:2;14153:18;;;14146:30;14212:17;14207:2;14192:18;;14185:45;14262:2;14247:18;;13932:339::o;14276:184::-;14346:6;14399:2;14387:9;14378:7;14374:23;14370:32;14367:52;;;14415:1;14412;14405:12;14367:52;-1:-1:-1;14438:16:123;;14276:184;-1:-1:-1;14276:184:123:o;14465:::-;-1:-1:-1;;;;;14514:1:123;14507:88;14614:4;14611:1;14604:15;14638:4;14635:1;14628:15;14654:135;14693:3;-1:-1:-1;;14714:17:123;;14711:43;;;14734:18;;:::i;:::-;-1:-1:-1;14781:1:123;14770:13;;14654:135::o;16989:258::-;17061:1;17071:113;17085:6;17082:1;17079:13;17071:113;;;17161:11;;;17155:18;17142:11;;;17135:39;17107:2;17100:10;17071:113;;;17202:6;17199:1;17196:13;17193:48;;;-1:-1:-1;;17237:1:123;17219:16;;17212:27;16989:258::o;17252:274::-;17381:3;17419:6;17413:13;17435:53;17481:6;17476:3;17469:4;17461:6;17457:17;17435:53;:::i;:::-;17504:16;;;;;17252:274;-1:-1:-1;;17252:274:123:o;19588:245::-;19667:6;19675;19728:2;19716:9;19707:7;19703:23;19699:32;19696:52;;;19744:1;19741;19734:12;19696:52;-1:-1:-1;;19767:16:123;;19823:2;19808:18;;;19802:25;19767:16;;19802:25;;-1:-1:-1;19588:245:123:o;19838:125::-;19878:4;19906:1;19903;19900:8;19897:34;;;19911:18;;:::i;:::-;-1:-1:-1;19948:9:123;;19838:125::o;19968:168::-;20008:7;20074:1;20070;20066:6;20062:14;20059:1;20056:21;20051:1;20044:9;20037:17;20033:45;20030:71;;;20081:18;;:::i;:::-;-1:-1:-1;20121:9:123;;19968:168::o;20141:274::-;20181:1;20207;20197:189;;-1:-1:-1;;;;;20239:1:123;20232:88;20343:4;20340:1;20333:15;20371:4;20368:1;20361:15;20197:189;-1:-1:-1;20400:9:123;;20141:274::o;20420:128::-;20460:3;20491:1;20487:6;20484:1;20481:13;20478:39;;;20497:18;;:::i;:::-;-1:-1:-1;20533:9:123;;20420:128::o;20553:245::-;20620:6;20673:2;20661:9;20652:7;20648:23;20644:32;20641:52;;;20689:1;20686;20679:12;20641:52;20721:9;20715:16;20740:28;20762:5;20740:28;:::i;21627:383::-;21745:12;;21793:4;21782:16;;21776:23;-1:-1:-1;;21867:11:123;;;;21745:12;21776:23;21901:2;21890:14;;21887:117;;;21991:2;21978:6;21974:2;21970:15;21967:1;21963:23;21960:1;21956:31;21952:2;21948:40;21944:2;21940:49;21936:58;21927:67;;21887:117;;;;21627:383;;;:::o;23112:::-;23261:2;23250:9;23243:21;23224:4;23293:6;23287:13;23336:6;23331:2;23320:9;23316:18;23309:34;23352:66;23411:6;23406:2;23395:9;23391:18;23386:2;23378:6;23374:15;23352:66;:::i;:::-;23479:2;23458:15;-1:-1:-1;;23454:29:123;23439:45;;;;23486:2;23435:54;;23112:383;-1:-1:-1;;23112:383:123:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/IVault.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\";\n\nimport \"../libraries/Math.sol\";\n\nimport \"../libraries/SafeSwap.sol\";\n\nimport \"../libraries/PriceFeed.sol\";\n\nimport \"../interfaces/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n    using SignedSafeMathUpgradeable for int256;\n    using CustomMath for uint256;\n    using SafeSwapUni for IAMMRouter02;\n    using PriceFeed for AggregatorV3Interface;\n\n    /* Structs */\n    struct WithdrawalResult {\n        uint256 wantAmt; // Amount of Want token withdrawn\n        uint256 rewardsDueXChain; // ZOR rewards due to the origin (cross chain) user\n    }\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Zorro LP pool\n    address public zorroLPPool; // Main pool for Zorro liquidity\n    address public zorroLPPoolOtherToken; // For the dominant LP pool, the counterparty token to the ZOR token\n    // Swaps\n    address public uniRouterAddress; // Router contract address for adding/removing liquidity, etc.\n    address[] public stablecoinToZorroPath; // The path to swap USD to ZOR\n    address[] public stablecoinToZorroLPPoolOtherTokenPath; // The router path from USD to the primary Zorro LP pool, Token 0\n    // Oracles\n    AggregatorV3Interface public priceFeedZOR;\n    AggregatorV3Interface public priceFeedLPPoolOtherToken;\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Zorro LP Pool params\n    /// @param _zorroLPPool Address of the Zorro-X LP pool\n    /// @param _zorroLPPoolOtherToken Address of the counterpart token to the ZOR token in the LP Pool\n    function setZorroLPPoolParams(\n        address _zorroLPPool,\n        address _zorroLPPoolOtherToken\n    ) external onlyOwner {\n        zorroLPPool = _zorroLPPool;\n        zorroLPPoolOtherToken = _zorroLPPoolOtherToken;\n    }\n\n    /// @notice Setter: Uniswap-compatible router address\n    /// @param _uniV2Router Address of router\n    function setUniRouter(address _uniV2Router) external onlyOwner {\n        uniRouterAddress = _uniV2Router;\n    }\n\n    /// @notice Setter: Set path for token swap from USD to ZOR\n    /// @param _path Swap path\n    function setStablecoinToZORPath(address[] memory _path) external onlyOwner {\n        stablecoinToZorroPath = _path;\n    }\n\n    /// @notice Setter: Set path for token swap from USD to counterparty token in ZOR LP pool\n    /// @param _path Swap path\n    function setStablecoinToZorroLPPoolOtherTokenPath(address[] memory _path)\n        external\n        onlyOwner\n    {\n        stablecoinToZorroLPPoolOtherTokenPath = _path;\n    }\n\n    /// @notice Setter: Chainlink price feeds\n    /// @param _priceFeedZOR The address of the price feed for ZOR\n    /// @param _priceFeedLPPoolOtherToken The address of the price feed for the counterparty token in the ZOR LP Pool\n    function setPriceFeeds(\n        address _priceFeedZOR,\n        address _priceFeedLPPoolOtherToken\n    ) external onlyOwner {\n        priceFeedZOR = AggregatorV3Interface(_priceFeedZOR);\n        priceFeedLPPoolOtherToken = AggregatorV3Interface(\n            _priceFeedLPPoolOtherToken\n        );\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Events */\n\n    event Deposit(\n        address indexed account,\n        bytes indexed foreignAccount,\n        uint256 indexed pid,\n        uint256 wantAmount\n    );\n\n    event Withdraw(\n        address indexed account,\n        bytes indexed foreignAccount,\n        uint256 indexed pid,\n        uint256 trancheId,\n        uint256 wantAmount\n    );\n    event TransferInvestment(\n        address account,\n        uint256 indexed fromPid,\n        uint256 indexed fromTrancheId,\n        uint256 indexed toPid\n    );\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _pid index of pool\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _pid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(pool.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _pid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _pid index of pool\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updatePool(_pid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(pool.want).safeIncreaseAllowance(\n            pool.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(poolInfo[_pid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = ZorroControllerActions(controllerActions).getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = ZorroControllerActions(controllerActions).getUserContribution(\n            sharesAdded,\n            _timeMultiplier\n        );\n\n        // Update pool info: Increment the pool's total contributions by the contribution added\n        pool.totalTrancheContributions = pool.totalTrancheContributions.add(\n            _contributionAdded\n        );\n\n        // Create tranche\n        _createTranche(\n            _pid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _pid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _pid Index of pool\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get pool\n        PoolInfo memory pool = poolInfo[_pid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: pool.accZORRORewards.mul(_contributionAdded).div(\n                pool.totalTrancheContributions\n            ), // Pro-rata share of accumulated pool rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_pid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_pid][_foreignAccount][\n                trancheLength(_pid, _localAccount).sub(1)\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _pid index of pool to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _pid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _pid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _pid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _pid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _pid index of pool\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _pid index of pool\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _pid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get pool and current tranche info\n        PoolInfo storage _pool = poolInfo[_pid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _pool.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        updatePool(_pid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (\n            _tranche.contribution.mul(_pool.accZORRORewards).div(\n                _pool.totalTrancheContributions\n            )\n        ).sub(_tranche.rewardDebt);\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = ZorroControllerActions(controllerActions).getAdjustedRewards(_tranche, _pendingRewards);\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Get local (on-chain) account\n            address _resolvedLocalAcct = _getLocalAccount(\n                _localAccount,\n                _foreignAccount\n            );\n\n            // Get vault\n            IVault _vault = IVault(poolInfo[_pid].vault);\n\n            // Get staked want tokens\n            // TODO: This MUST be based on shares and NOT want tokens,\n            // Because the quantity of want owed to the user will likely increase \n            // over time..... << END TODO\n            uint256 _stakedWantAmt = _tranche\n                .contribution\n                .mul(1e12)\n                .mul(_vault.wantLockedTotal())\n                .div(_tranche.timeMultiplier.mul(_vault.sharesTotal()));\n\n            // Withdraw the want token for this account\n            _vault.withdrawWantToken(_stakedWantAmt);\n\n            // Update shares safely\n            _pool.totalTrancheContributions = _pool\n                .totalTrancheContributions\n                .sub(_tranche.contribution);\n\n            // Calculate Want token balance\n            _res.wantAmt = IERC20Upgradeable(_pool.want).balanceOf(\n                address(this)\n            );\n\n            // Mark tranche as exited\n            trancheInfo[_pid][_resolvedLocalAcct][_trancheId]\n                .exitedVaultAt = block.timestamp;\n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _pid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _pid Pool ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _pid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_pid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_pid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_pid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a pool and converts the Want token into USD\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a pool and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = poolInfo[_pid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromPid index of pool FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toPid index of pool TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromPid,\n        uint256 _fromTrancheId,\n        uint256 _toPid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromPid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            poolInfo[_toPid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toPid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromPid, _fromTrancheId, _toPid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a pool\n    /// @param _pid index of pool\n    function withdrawAll(uint256 _pid) public nonReentrant {\n        // Iterate through all tranches for the current user and pool and withdraw\n        uint256 numTranches = trancheLength(_pid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_pid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(poolInfo[_pid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted.sub(_totalSlashed)\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        15449
      ],
      "IAMMRouter01": [
        13438
      ],
      "IAMMRouter02": [
        13526
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        13899
      ],
      "IZorro": [
        13943
      ],
      "IZorroController": [
        14274
      ],
      "IZorroControllerAnalytics": [
        14079
      ],
      "IZorroControllerBase": [
        14053
      ],
      "IZorroControllerInvestment": [
        14234
      ],
      "IZorroControllerPoolMgmt": [
        14264
      ],
      "Initializable": [
        1774
      ],
      "MathUpgradeable": [
        3516
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PriceFeed": [
        15499
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15716
      ],
      "SafeSwapUni": [
        15698
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10813
      ],
      "ZorroControllerBase": [
        7133
      ],
      "ZorroControllerInvestment": [
        8558
      ]
    },
    "id": 8559,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 7134,
        "src": "58:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 7137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 13900,
        "src": "96:34:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 2885,
        "src": "132:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "id": 7139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 3829,
        "src": "222:80:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "id": 7140,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 3893,
        "src": "304:86:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/Math.sol",
        "file": "../libraries/Math.sol",
        "id": 7141,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 15450,
        "src": "392:31:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/SafeSwap.sol",
        "file": "../libraries/SafeSwap.sol",
        "id": 7142,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 15717,
        "src": "425:35:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/PriceFeed.sol",
        "file": "../libraries/PriceFeed.sol",
        "id": 7143,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 15500,
        "src": "462:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorroController.sol",
        "file": "../interfaces/IZorroController.sol",
        "id": 7144,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 14275,
        "src": "500:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7145,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 10814,
        "src": "546:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7146,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14234,
              "src": "636:26:35"
            },
            "id": 7147,
            "nodeType": "InheritanceSpecifier",
            "src": "636:26:35"
          },
          {
            "baseName": {
              "id": 7148,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7133,
              "src": "668:19:35"
            },
            "id": 7149,
            "nodeType": "InheritanceSpecifier",
            "src": "668:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8558,
        "linearizedBaseContracts": [
          8558,
          7133,
          1944,
          571,
          3169,
          1774,
          14234,
          14053
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "603:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7153,
            "libraryName": {
              "id": 7150,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "720:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "714:49:35",
            "typeName": {
              "id": 7152,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7151,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "745:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "745:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 7156,
            "libraryName": {
              "id": 7154,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3828,
              "src": "774:19:35"
            },
            "nodeType": "UsingForDirective",
            "src": "768:38:35",
            "typeName": {
              "id": 7155,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "798:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 7159,
            "libraryName": {
              "id": 7157,
              "name": "SignedSafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3892,
              "src": "817:25:35"
            },
            "nodeType": "UsingForDirective",
            "src": "811:43:35",
            "typeName": {
              "id": 7158,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "847:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 7162,
            "libraryName": {
              "id": 7160,
              "name": "CustomMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15449,
              "src": "865:10:35"
            },
            "nodeType": "UsingForDirective",
            "src": "859:29:35",
            "typeName": {
              "id": 7161,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 7166,
            "libraryName": {
              "id": 7163,
              "name": "SafeSwapUni",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15698,
              "src": "899:11:35"
            },
            "nodeType": "UsingForDirective",
            "src": "893:35:35",
            "typeName": {
              "id": 7165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7164,
                "name": "IAMMRouter02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13526,
                "src": "915:12:35"
              },
              "referencedDeclaration": 13526,
              "src": "915:12:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAMMRouter02_$13526",
                "typeString": "contract IAMMRouter02"
              }
            }
          },
          {
            "id": 7170,
            "libraryName": {
              "id": 7167,
              "name": "PriceFeed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15499,
              "src": "939:9:35"
            },
            "nodeType": "UsingForDirective",
            "src": "933:42:35",
            "typeName": {
              "id": 7169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7168,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "953:21:35"
              },
              "referencedDeclaration": 45,
              "src": "953:21:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            }
          },
          {
            "canonicalName": "ZorroControllerInvestment.WithdrawalResult",
            "id": 7175,
            "members": [
              {
                "constant": false,
                "id": 7172,
                "mutability": "mutable",
                "name": "wantAmt",
                "nameLocation": "1041:7:35",
                "nodeType": "VariableDeclaration",
                "scope": 7175,
                "src": "1033:15:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7171,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1033:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7174,
                "mutability": "mutable",
                "name": "rewardsDueXChain",
                "nameLocation": "1100:16:35",
                "nodeType": "VariableDeclaration",
                "scope": 7175,
                "src": "1092:24:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7173,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1092:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "WithdrawalResult",
            "nameLocation": "1006:16:35",
            "nodeType": "StructDefinition",
            "scope": 8558,
            "src": "999:176:35",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7177,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "1225:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1213:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7176,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1213:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bf604d8",
            "id": 7179,
            "mutability": "mutable",
            "name": "zorroLPPool",
            "nameLocation": "1331:11:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1316:26:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7178,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1316:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebfba7c4",
            "id": 7181,
            "mutability": "mutable",
            "name": "zorroLPPoolOtherToken",
            "nameLocation": "1396:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1381:36:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7180,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1381:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "693a090b",
            "id": 7183,
            "mutability": "mutable",
            "name": "uniRouterAddress",
            "nameLocation": "1520:16:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1505:31:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7182,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1505:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4d8adf9",
            "id": 7186,
            "mutability": "mutable",
            "name": "stablecoinToZorroPath",
            "nameLocation": "1622:21:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1605:38:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7184,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1605:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7185,
              "nodeType": "ArrayTypeName",
              "src": "1605:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fae1a20",
            "id": 7189,
            "mutability": "mutable",
            "name": "stablecoinToZorroLPPoolOtherTokenPath",
            "nameLocation": "1697:37:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1680:54:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7187,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1680:7:35",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7188,
              "nodeType": "ArrayTypeName",
              "src": "1680:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b22f3251",
            "id": 7192,
            "mutability": "mutable",
            "name": "priceFeedZOR",
            "nameLocation": "1850:12:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1821:41:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7191,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7190,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1821:21:35"
              },
              "referencedDeclaration": 45,
              "src": "1821:21:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "79777d81",
            "id": 7195,
            "mutability": "mutable",
            "name": "priceFeedLPPoolOtherToken",
            "nameLocation": "1897:25:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1868:54:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7194,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7193,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1868:21:35"
              },
              "referencedDeclaration": 45,
              "src": "1868:21:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7197,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "1962:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "1947:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7196,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1947:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7209,
              "nodeType": "Block",
              "src": "2147:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7201,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "2165:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7203,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7197,
                          "src": "2181:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2165:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2202:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2157:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7207,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:59:35"
                },
                {
                  "id": 7208,
                  "nodeType": "PlaceholderStatement",
                  "src": "2226:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7198,
              "nodeType": "StructuredDocumentation",
              "src": "2044:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7210,
            "name": "onlyZorroXChain",
            "nameLocation": "2129:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2144:2:35"
            },
            "src": "2120:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14087
            ],
            "body": {
              "id": 7222,
              "nodeType": "Block",
              "src": "2462:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7218,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7177,
                      "src": "2472:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7219,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7213,
                      "src": "2497:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2472:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7221,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7211,
              "nodeType": "StructuredDocumentation",
              "src": "2259:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7223,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "2452:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2452:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "2401:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7213,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "2432:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7223,
                  "src": "2427:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:16:35"
            },
            "returnParameters": {
              "id": 7217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:0:35"
            },
            "scope": 8558,
            "src": "2392:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14094
            ],
            "body": {
              "id": 7241,
              "nodeType": "Block",
              "src": "2851:99:35",
              "statements": [
                {
                  "expression": {
                    "id": 7235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7233,
                      "name": "zorroLPPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7179,
                      "src": "2861:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7234,
                      "name": "_zorroLPPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7226,
                      "src": "2875:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2861:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7236,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:26:35"
                },
                {
                  "expression": {
                    "id": 7239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7237,
                      "name": "zorroLPPoolOtherToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7181,
                      "src": "2897:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7238,
                      "name": "_zorroLPPoolOtherToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7228,
                      "src": "2921:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2897:46:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7240,
                  "nodeType": "ExpressionStatement",
                  "src": "2897:46:35"
                }
              ]
            },
            "documentation": {
              "id": 7224,
              "nodeType": "StructuredDocumentation",
              "src": "2519:202:35",
              "text": "@notice Setter: Zorro LP Pool params\n @param _zorroLPPool Address of the Zorro-X LP pool\n @param _zorroLPPoolOtherToken Address of the counterpart token to the ZOR token in the LP Pool"
            },
            "functionSelector": "9ec68c76",
            "id": 7242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7231,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7230,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "2841:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2841:9:35"
              }
            ],
            "name": "setZorroLPPoolParams",
            "nameLocation": "2735:20:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7226,
                  "mutability": "mutable",
                  "name": "_zorroLPPool",
                  "nameLocation": "2773:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7242,
                  "src": "2765:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7228,
                  "mutability": "mutable",
                  "name": "_zorroLPPoolOtherToken",
                  "nameLocation": "2803:22:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7242,
                  "src": "2795:30:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:76:35"
            },
            "returnParameters": {
              "id": 7232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:0:35"
            },
            "scope": 8558,
            "src": "2726:224:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14099
            ],
            "body": {
              "id": 7254,
              "nodeType": "Block",
              "src": "3123:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7250,
                      "name": "uniRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7183,
                      "src": "3133:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7251,
                      "name": "_uniV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7245,
                      "src": "3152:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3133:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7253,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7243,
              "nodeType": "StructuredDocumentation",
              "src": "2956:99:35",
              "text": "@notice Setter: Uniswap-compatible router address\n @param _uniV2Router Address of router"
            },
            "functionSelector": "ee4e2687",
            "id": 7255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7247,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "3113:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "3113:9:35"
              }
            ],
            "name": "setUniRouter",
            "nameLocation": "3069:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7245,
                  "mutability": "mutable",
                  "name": "_uniV2Router",
                  "nameLocation": "3090:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7255,
                  "src": "3082:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:22:35"
            },
            "returnParameters": {
              "id": 7249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3123:0:35"
            },
            "scope": 8558,
            "src": "3060:111:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14105
            ],
            "body": {
              "id": 7268,
              "nodeType": "Block",
              "src": "3347:46:35",
              "statements": [
                {
                  "expression": {
                    "id": 7266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7264,
                      "name": "stablecoinToZorroPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7186,
                      "src": "3357:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7265,
                      "name": "_path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7259,
                      "src": "3381:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3357:29:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 7267,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:29:35"
                }
              ]
            },
            "documentation": {
              "id": 7256,
              "nodeType": "StructuredDocumentation",
              "src": "3177:90:35",
              "text": "@notice Setter: Set path for token swap from USD to ZOR\n @param _path Swap path"
            },
            "functionSelector": "630aff87",
            "id": 7269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7261,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "3337:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "3337:9:35"
              }
            ],
            "name": "setStablecoinToZORPath",
            "nameLocation": "3281:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7259,
                  "mutability": "mutable",
                  "name": "_path",
                  "nameLocation": "3321:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7269,
                  "src": "3304:22:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7257,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3304:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7258,
                    "nodeType": "ArrayTypeName",
                    "src": "3304:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3303:24:35"
            },
            "returnParameters": {
              "id": 7263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3347:0:35"
            },
            "scope": 8558,
            "src": "3272:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14111
            ],
            "body": {
              "id": 7282,
              "nodeType": "Block",
              "src": "3637:62:35",
              "statements": [
                {
                  "expression": {
                    "id": 7280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7278,
                      "name": "stablecoinToZorroLPPoolOtherTokenPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7189,
                      "src": "3647:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7279,
                      "name": "_path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7273,
                      "src": "3687:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3647:45:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 7281,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:45:35"
                }
              ]
            },
            "documentation": {
              "id": 7270,
              "nodeType": "StructuredDocumentation",
              "src": "3399:120:35",
              "text": "@notice Setter: Set path for token swap from USD to counterparty token in ZOR LP pool\n @param _path Swap path"
            },
            "functionSelector": "af018c4b",
            "id": 7283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7276,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7275,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "3623:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "3623:9:35"
              }
            ],
            "name": "setStablecoinToZorroLPPoolOtherTokenPath",
            "nameLocation": "3533:40:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7273,
                  "mutability": "mutable",
                  "name": "_path",
                  "nameLocation": "3591:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7283,
                  "src": "3574:22:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3574:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7272,
                    "nodeType": "ArrayTypeName",
                    "src": "3574:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3573:24:35"
            },
            "returnParameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:35"
            },
            "scope": 8558,
            "src": "3524:175:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14118
            ],
            "body": {
              "id": 7305,
              "nodeType": "Block",
              "src": "4059:177:35",
              "statements": [
                {
                  "expression": {
                    "id": 7297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7293,
                      "name": "priceFeedZOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7192,
                      "src": "4069:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7295,
                          "name": "_priceFeedZOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7286,
                          "src": "4106:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7294,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "4084:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 7296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4084:36:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "4069:51:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 7298,
                  "nodeType": "ExpressionStatement",
                  "src": "4069:51:35"
                },
                {
                  "expression": {
                    "id": 7303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7299,
                      "name": "priceFeedLPPoolOtherToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7195,
                      "src": "4130:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7301,
                          "name": "_priceFeedLPPoolOtherToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7288,
                          "src": "4193:26:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7300,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "4158:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 7302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4158:71:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "4130:99:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 7304,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:99:35"
                }
              ]
            },
            "documentation": {
              "id": 7284,
              "nodeType": "StructuredDocumentation",
              "src": "3705:226:35",
              "text": "@notice Setter: Chainlink price feeds\n @param _priceFeedZOR The address of the price feed for ZOR\n @param _priceFeedLPPoolOtherToken The address of the price feed for the counterparty token in the ZOR LP Pool"
            },
            "functionSelector": "068f158d",
            "id": 7306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7290,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "4049:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "4049:9:35"
              }
            ],
            "name": "setPriceFeeds",
            "nameLocation": "3945:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7286,
                  "mutability": "mutable",
                  "name": "_priceFeedZOR",
                  "nameLocation": "3976:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7306,
                  "src": "3968:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7288,
                  "mutability": "mutable",
                  "name": "_priceFeedLPPoolOtherToken",
                  "nameLocation": "4007:26:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7306,
                  "src": "3999:34:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:81:35"
            },
            "returnParameters": {
              "id": 7292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:0:35"
            },
            "scope": 8558,
            "src": "3936:300:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14123
            ],
            "body": {
              "id": 7318,
              "nodeType": "Block",
              "src": "4411:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7314,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7197,
                      "src": "4421:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7315,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7309,
                      "src": "4443:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4421:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7317,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7307,
              "nodeType": "StructuredDocumentation",
              "src": "4242:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7311,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "4401:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "4401:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "4350:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "4381:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7319,
                  "src": "4373:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4372:19:35"
            },
            "returnParameters": {
              "id": 7313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4411:0:35"
            },
            "scope": 8558,
            "src": "4341:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 7329,
            "name": "Deposit",
            "nameLocation": "4489:7:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7321,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4522:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7329,
                  "src": "4506:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7323,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "foreignAccount",
                  "nameLocation": "4553:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7329,
                  "src": "4539:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7322,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4539:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7325,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "4593:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7329,
                  "src": "4577:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4577:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7327,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wantAmount",
                  "nameLocation": "4614:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7329,
                  "src": "4606:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4496:134:35"
            },
            "src": "4483:148:35"
          },
          {
            "anonymous": false,
            "id": 7341,
            "name": "Withdraw",
            "nameLocation": "4643:8:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7331,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4677:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "4661:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4661:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7333,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "foreignAccount",
                  "nameLocation": "4708:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "4694:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7332,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4694:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7335,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "4748:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "4732:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7337,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trancheId",
                  "nameLocation": "4769:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "4761:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4761:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7339,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wantAmount",
                  "nameLocation": "4796:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "4788:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4788:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4651:161:35"
            },
            "src": "4637:176:35"
          },
          {
            "anonymous": false,
            "id": 7351,
            "name": "TransferInvestment",
            "nameLocation": "4824:18:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7343,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4860:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7351,
                  "src": "4852:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4852:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromPid",
                  "nameLocation": "4893:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7351,
                  "src": "4877:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromTrancheId",
                  "nameLocation": "4926:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7351,
                  "src": "4910:29:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4910:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toPid",
                  "nameLocation": "4965:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7351,
                  "src": "4949:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4842:134:35"
            },
            "src": "4818:159:35"
          },
          {
            "baseFunctions": [
              14132
            ],
            "body": {
              "id": 7395,
              "nodeType": "Block",
              "src": "5359:494:35",
              "statements": [
                {
                  "assignments": [
                    7365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7365,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5411:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7395,
                      "src": "5394:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7363,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13974,
                          "src": "5394:8:35"
                        },
                        "referencedDeclaration": 13974,
                        "src": "5394:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7369,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7366,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6567,
                      "src": "5418:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7368,
                    "indexExpression": {
                      "id": 7367,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7354,
                      "src": "5427:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5418:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5572:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5572:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7379,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5604:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5596:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7377,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5596:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5596:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7381,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7356,
                        "src": "5623:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7371,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7365,
                              "src": "5531:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "5531:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7370,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "5513:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5513:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "5513:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:128:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7383,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:128:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7385,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "5712:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5730:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5730:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5754:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7389,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7356,
                        "src": "5770:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7390,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7358,
                        "src": "5792:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7391,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5821:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5821:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7384,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7511,
                      "src": "5690:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7394,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7352,
              "nodeType": "StructuredDocumentation",
              "src": "5004:226:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _pid index of pool\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7396,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7360,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "5346:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "5346:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "5244:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7354,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "5269:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7396,
                  "src": "5261:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7356,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "5291:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7396,
                  "src": "5283:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5283:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7358,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "5317:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7396,
                  "src": "5309:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5309:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5251:87:35"
            },
            "returnParameters": {
              "id": 7362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5359:0:35"
            },
            "scope": 8558,
            "src": "5235:618:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7510,
              "nodeType": "Block",
              "src": "6881:1835:35",
              "statements": [
                {
                  "assignments": [
                    7416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7416,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6933:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7510,
                      "src": "6916:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7415,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7414,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13974,
                          "src": "6916:8:35"
                        },
                        "referencedDeclaration": 13974,
                        "src": "6916:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7420,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7417,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6567,
                      "src": "6940:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7419,
                    "indexExpression": {
                      "id": 7418,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7399,
                      "src": "6949:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6940:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6916:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7422,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7405,
                          "src": "7001:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7012:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7001:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6993:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6993:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7427,
                  "nodeType": "ExpressionStatement",
                  "src": "6993:46:35"
                },
                {
                  "expression": {
                    "id": 7432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7428,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7412,
                      "src": "7145:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7430,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7399,
                          "src": "7176:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7429,
                        "name": "updatePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6979,
                        "src": "7165:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7165:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7145:36:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7433,
                  "nodeType": "ExpressionStatement",
                  "src": "7145:36:35"
                },
                {
                  "assignments": [
                    7435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7435,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "7250:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7510,
                      "src": "7242:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7242:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7440,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7437,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7401,
                        "src": "7283:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7438,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7403,
                        "src": "7293:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7436,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7551,
                      "src": "7266:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7266:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7242:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7446,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7416,
                          "src": "7405:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13973,
                        "src": "7405:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7448,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "7429:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7442,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7416,
                              "src": "7359:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7443,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "7359:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7441,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "7341:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7341:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "7341:50:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7341:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7450,
                  "nodeType": "ExpressionStatement",
                  "src": "7341:106:35"
                },
                {
                  "assignments": [
                    7452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7452,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "7582:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7510,
                      "src": "7574:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7574:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7460,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "7655:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7454,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6567,
                                "src": "7603:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7456,
                              "indexExpression": {
                                "id": 7455,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7399,
                                "src": "7612:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7603:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7457,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13973,
                            "src": "7603:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7453,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "7596:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13899_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7596:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13899",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13859,
                      "src": "7596:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7596:77:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7574:99:35"
                },
                {
                  "assignments": [
                    7464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7464,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "7736:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7510,
                      "src": "7728:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7728:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7472,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7469,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "7814:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7470,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7177,
                        "src": "7831:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7466,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6587,
                            "src": "7777:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7465,
                          "name": "ZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10813,
                          "src": "7754:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10813_$",
                            "typeString": "type(contract ZorroControllerActions)"
                          }
                        },
                        "id": 7467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7754:41:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZorroControllerActions_$10813",
                          "typeString": "contract ZorroControllerActions"
                        }
                      },
                      "id": 7468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10793,
                      "src": "7754:59:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7754:100:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7728:126:35"
                },
                {
                  "assignments": [
                    7474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7474,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "7992:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7510,
                      "src": "7984:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7984:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7482,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7479,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7452,
                        "src": "8088:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7480,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7464,
                        "src": "8113:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7476,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6587,
                            "src": "8036:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7475,
                          "name": "ZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10813,
                          "src": "8013:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10813_$",
                            "typeString": "type(contract ZorroControllerActions)"
                          }
                        },
                        "id": 7477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8013:41:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZorroControllerActions_$10813",
                          "typeString": "contract ZorroControllerActions"
                        }
                      },
                      "id": 7478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10812,
                      "src": "8013:61:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8013:125:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7984:154:35"
                },
                {
                  "expression": {
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7483,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7416,
                        "src": "8245:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 7485,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13971,
                      "src": "8245:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7489,
                          "name": "_contributionAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7474,
                          "src": "8326:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 7486,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7416,
                            "src": "8278:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                            }
                          },
                          "id": 7487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13971,
                          "src": "8278:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3692,
                        "src": "8278:34:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8278:76:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8245:109:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7492,
                  "nodeType": "ExpressionStatement",
                  "src": "8245:109:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7494,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7399,
                        "src": "8419:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7495,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7435,
                        "src": "8437:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7496,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7403,
                        "src": "8464:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7497,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "8493:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7498,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7464,
                        "src": "8525:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7499,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "8554:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7500,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7409,
                        "src": "8583:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7493,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7628,
                      "src": "8391:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8391:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7502,
                  "nodeType": "ExpressionStatement",
                  "src": "8391:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7504,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7435,
                        "src": "8662:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7505,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7403,
                        "src": "8677:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7506,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7399,
                        "src": "8694:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7507,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "8700:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7503,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7329,
                      "src": "8654:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8654:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7509,
                  "nodeType": "EmitStatement",
                  "src": "8649:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7397,
              "nodeType": "StructuredDocumentation",
              "src": "5859:770:35",
              "text": "@notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _pid index of pool\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "6643:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7399,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "6669:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6661:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6661:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7401,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "6691:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6683:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6683:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7403,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6722:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6709:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7402,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6709:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7405,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "6755:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6747:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6747:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7407,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "6781:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6773:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7409,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6814:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6806:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6651:184:35"
            },
            "returnParameters": {
              "id": 7413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7412,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "6862:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "6854:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6854:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6853:27:35"
            },
            "scope": 8558,
            "src": "6634:2082:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7550,
              "nodeType": "Block",
              "src": "8868:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7520,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7518,
                      "src": "8931:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7521,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7513,
                      "src": "8946:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8931:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7523,
                  "nodeType": "ExpressionStatement",
                  "src": "8931:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7524,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7513,
                      "src": "9026:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9046:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9038:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9038:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9038:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9026:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7549,
                  "nodeType": "IfStatement",
                  "src": "9022:380:35",
                  "trueBody": {
                    "id": 7548,
                    "nodeType": "Block",
                    "src": "9050:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7531,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7515,
                                  "src": "9137:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9137:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9162:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9137:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9181:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9112:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9112:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7537,
                        "nodeType": "ExpressionStatement",
                        "src": "9112:129:35"
                      },
                      {
                        "expression": {
                          "id": 7546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7538,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7518,
                            "src": "9343:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7543,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7515,
                                    "src": "9374:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9366:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7541,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9366:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9366:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9358:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7539,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9358:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9358:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9343:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7547,
                        "nodeType": "ExpressionStatement",
                        "src": "9343:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "8731:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7513,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "8756:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7551,
                  "src": "8748:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8748:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7515,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "8779:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7551,
                  "src": "8766:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7514,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8766:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8747:48:35"
            },
            "returnParameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "8850:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7551,
                  "src": "8842:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8842:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8841:22:35"
            },
            "scope": 8558,
            "src": "8722:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7627,
              "nodeType": "Block",
              "src": "10121:1067:35",
              "statements": [
                {
                  "assignments": [
                    7571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7571,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "10167:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7627,
                      "src": "10151:20:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_memory_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7569,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13974,
                          "src": "10151:8:35"
                        },
                        "referencedDeclaration": 13974,
                        "src": "10151:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7575,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7572,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6567,
                      "src": "10174:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7574,
                    "indexExpression": {
                      "id": 7573,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "10183:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10174:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10151:37:35"
                },
                {
                  "assignments": [
                    7578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7578,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "10249:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7627,
                      "src": "10230:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7576,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13960,
                          "src": "10230:11:35"
                        },
                        "referencedDeclaration": 13960,
                        "src": "10230:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7595,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7580,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7560,
                        "src": "10304:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7581,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "10394:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7588,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7571,
                              "src": "10501:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_memory_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo memory"
                              }
                            },
                            "id": 7589,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalTrancheContributions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13971,
                            "src": "10501:30:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7585,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7560,
                                "src": "10460:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 7582,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7571,
                                  "src": "10435:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13974_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo memory"
                                  }
                                },
                                "id": 7583,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13969,
                                "src": "10435:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3722,
                              "src": "10435:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 7586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10435:44:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3737,
                          "src": "10435:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10435:110:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7591,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7564,
                        "src": "10657:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7592,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7566,
                        "src": "10712:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10756:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7579,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13960,
                      "src": "10264:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$13960_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10264:504:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10230:538:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7602,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "10870:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7596,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6575,
                            "src": "10832:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7599,
                          "indexExpression": {
                            "id": 7597,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "10844:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10832:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7600,
                        "indexExpression": {
                          "id": 7598,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7556,
                          "src": "10850:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10832:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "10832:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$13960_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10832:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7604,
                  "nodeType": "ExpressionStatement",
                  "src": "10832:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7605,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "10999:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10999:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11024:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10999:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7626,
                  "nodeType": "IfStatement",
                  "src": "10995:187:35",
                  "trueBody": {
                    "id": 7625,
                    "nodeType": "Block",
                    "src": "11027:155:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7609,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6583,
                                  "src": "11041:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7619,
                                "indexExpression": {
                                  "id": 7610,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7554,
                                  "src": "11060:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11041:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7620,
                              "indexExpression": {
                                "id": 7611,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7558,
                                "src": "11066:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11041:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7621,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 7617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11139:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 7613,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7554,
                                      "src": "11114:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 7614,
                                      "name": "_localAccount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7556,
                                      "src": "11120:13:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7612,
                                    "name": "trancheLength",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6781,
                                    "src": "11100:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,address) view returns (uint256)"
                                    }
                                  },
                                  "id": 7615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11100:34:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3707,
                                "src": "11100:38:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11100:41:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11041:114:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7622,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7556,
                            "src": "11158:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11041:130:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7624,
                        "nodeType": "ExpressionStatement",
                        "src": "11041:130:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7552,
              "nodeType": "StructuredDocumentation",
              "src": "9414:427:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _pid Index of pool\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "9855:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7554,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9887:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "9879:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9879:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7556,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "9909:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "9901:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9901:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7558,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9945:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "9932:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9932:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7560,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "9978:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "9970:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9970:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "10014:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "10006:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10006:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7564,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "10047:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "10039:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10039:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7566,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "10090:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7628,
                  "src": "10082:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10082:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9869:242:35"
            },
            "returnParameters": {
              "id": 7568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10121:0:35"
            },
            "scope": 8558,
            "src": "9846:1342:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14143
            ],
            "body": {
              "id": 7671,
              "nodeType": "Block",
              "src": "11842:524:35",
              "statements": [
                {
                  "assignments": [
                    7643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7643,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11896:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7671,
                      "src": "11888:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7642,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11888:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7648,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7644,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6567,
                        "src": "11908:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7646,
                      "indexExpression": {
                        "id": 7645,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7631,
                        "src": "11917:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11908:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7647,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13973,
                    "src": "11908:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11888:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7653,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12049:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12049:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7655,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7643,
                        "src": "12073:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7656,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7633,
                        "src": "12096:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7650,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6529,
                            "src": "12000:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7649,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11982:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11982:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "11982:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11982:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7658,
                  "nodeType": "ExpressionStatement",
                  "src": "11982:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7660,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7631,
                        "src": "12192:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12210:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12210:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12234:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7664,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7633,
                        "src": "12250:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7665,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7635,
                        "src": "12273:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7666,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "12302:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12302:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7668,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7637,
                        "src": "12331:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7659,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7776,
                      "src": "12159:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12159:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7670,
                  "nodeType": "ExpressionStatement",
                  "src": "12159:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7629,
              "nodeType": "StructuredDocumentation",
              "src": "11194:471:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _pid index of pool to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7640,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7639,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "11829:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "11829:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "11679:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7631,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "11715:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7672,
                  "src": "11707:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11707:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7633,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11737:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7672,
                  "src": "11729:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11729:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7635,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11764:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7672,
                  "src": "11756:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11756:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7637,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11797:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7672,
                  "src": "11789:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11789:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11697:124:35"
            },
            "returnParameters": {
              "id": 7641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11842:0:35"
            },
            "scope": 8558,
            "src": "11670:696:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14160
            ],
            "body": {
              "id": 7719,
              "nodeType": "Block",
              "src": "13329:544:35",
              "statements": [
                {
                  "assignments": [
                    7693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7693,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "13383:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7719,
                      "src": "13375:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7692,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13375:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7698,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7694,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6567,
                        "src": "13395:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7696,
                      "indexExpression": {
                        "id": 7695,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7675,
                        "src": "13404:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13395:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7697,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13973,
                    "src": "13395:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13375:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13536:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13536:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7705,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7693,
                        "src": "13560:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7706,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7681,
                        "src": "13583:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7700,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6529,
                            "src": "13487:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7699,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "13469:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13469:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "13469:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13469:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7708,
                  "nodeType": "ExpressionStatement",
                  "src": "13469:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7710,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7675,
                        "src": "13688:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7711,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7677,
                        "src": "13706:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7712,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7679,
                        "src": "13728:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7713,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7681,
                        "src": "13757:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7714,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7683,
                        "src": "13780:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7715,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7685,
                        "src": "13809:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7716,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7687,
                        "src": "13838:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7709,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7776,
                      "src": "13655:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13655:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7718,
                  "nodeType": "ExpressionStatement",
                  "src": "13655:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7673,
              "nodeType": "StructuredDocumentation",
              "src": "12372:670:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7689,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7210,
                  "src": "13313:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "13313:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "13056:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7675,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13102:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13094:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13094:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7677,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "13124:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13116:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13116:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7679,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "13155:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13142:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7678,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13142:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7681,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "13188:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13180:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13180:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7683,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "13215:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13207:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7685,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "13248:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13240:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13240:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7687,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "13281:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "13273:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13273:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13084:221:35"
            },
            "returnParameters": {
              "id": 7691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13329:0:35"
            },
            "scope": 8558,
            "src": "13047:826:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7775,
              "nodeType": "Block",
              "src": "14837:723:35",
              "statements": [
                {
                  "assignments": [
                    7739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7739,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "14891:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7775,
                      "src": "14883:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7738,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14883:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7744,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7740,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6567,
                        "src": "14903:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7742,
                      "indexExpression": {
                        "id": 7741,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7723,
                        "src": "14912:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14903:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7743,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13973,
                    "src": "14903:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14883:40:35"
                },
                {
                  "assignments": [
                    7746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7746,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "15003:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7775,
                      "src": "14995:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14995:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7754,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7751,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7729,
                        "src": "15069:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7752,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "15092:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7748,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7739,
                            "src": "15021:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7747,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13899,
                          "src": "15014:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13899_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15014:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13899",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13852,
                      "src": "15014:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15014:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14995:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7762,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7739,
                        "src": "15272:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7763,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7746,
                        "src": "15295:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7756,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6567,
                                "src": "15216:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7758,
                              "indexExpression": {
                                "id": 7757,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7723,
                                "src": "15225:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15216:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7759,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "15216:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7755,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "15198:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15198:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "15198:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15198:115:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7765,
                  "nodeType": "ExpressionStatement",
                  "src": "15198:115:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7767,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7723,
                        "src": "15408:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7768,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7725,
                        "src": "15426:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7769,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7727,
                        "src": "15448:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7770,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7746,
                        "src": "15477:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7771,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "15499:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7772,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7733,
                        "src": "15528:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7766,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7511,
                      "src": "15386:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15386:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7774,
                  "nodeType": "ExpressionStatement",
                  "src": "15386:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7721,
              "nodeType": "StructuredDocumentation",
              "src": "13879:694:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "14587:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7723,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "14624:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14616:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14616:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7725,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "14646:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14638:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14638:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7727,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "14677:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14664:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7726,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14664:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7729,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "14710:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14702:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14702:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7731,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "14737:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14729:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14729:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7733,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "14770:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14762:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14762:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7735,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "14803:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7776,
                  "src": "14795:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14606:221:35"
            },
            "returnParameters": {
              "id": 7737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14837:0:35"
            },
            "scope": 8558,
            "src": "14578:982:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14171
            ],
            "body": {
              "id": 7819,
              "nodeType": "Block",
              "src": "15987:428:35",
              "statements": [
                {
                  "assignments": [
                    7792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7792,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "16052:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7819,
                      "src": "16028:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                        "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7791,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7790,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7175,
                          "src": "16028:16:35"
                        },
                        "referencedDeclaration": 7175,
                        "src": "16028:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$7175_storage_ptr",
                          "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7794,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7779,
                        "src": "16082:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7795,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16100:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16100:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16124:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7798,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7781,
                        "src": "16140:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7799,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "16164:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16190:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7793,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8115,
                      "src": "16059:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$7175_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct ZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16059:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                      "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16028:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7810,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16332:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16332:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7812,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7792,
                          "src": "16356:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                            "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7172,
                        "src": "16356:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7804,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6567,
                                "src": "16285:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7806,
                              "indexExpression": {
                                "id": 7805,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7779,
                                "src": "16294:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16285:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "16285:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7803,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "16267:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16267:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "16267:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16267:111:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7815,
                  "nodeType": "ExpressionStatement",
                  "src": "16267:111:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7816,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7792,
                      "src": "16396:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                        "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7817,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7172,
                    "src": "16396:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7789,
                  "id": 7818,
                  "nodeType": "Return",
                  "src": "16389:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7777,
              "nodeType": "StructuredDocumentation",
              "src": "15566:277:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _pid index of pool\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7785,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "15956:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "15956:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "15857:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7779,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "15883:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7820,
                  "src": "15875:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15875:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7781,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "15905:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7820,
                  "src": "15897:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15897:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7783,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "15930:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7820,
                  "src": "15925:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15925:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15865:83:35"
            },
            "returnParameters": {
              "id": 7789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7820,
                  "src": "15978:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15978:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15977:9:35"
            },
            "scope": 8558,
            "src": "15848:567:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8114,
              "nodeType": "Block",
              "src": "17369:5537:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7840,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7825,
                                  "src": "17474:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17499:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "17491:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7841,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17491:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17491:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17474:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7846,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7827,
                                    "src": "17505:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17505:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17530:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17505:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17474:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7851,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17473:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7852,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7825,
                                  "src": "17553:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7855,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17578:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "17570:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7853,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "17570:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17570:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17553:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7858,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7827,
                                    "src": "17584:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7859,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17584:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17610:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17584:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17553:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7863,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17552:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17473:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17626:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17452:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17452:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7867,
                  "nodeType": "ExpressionStatement",
                  "src": "17452:215:35"
                },
                {
                  "assignments": [
                    7870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7870,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "17752:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8114,
                      "src": "17733:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7869,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7868,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13960,
                          "src": "17733:11:35"
                        },
                        "referencedDeclaration": 13960,
                        "src": "17733:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7877,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7872,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "17788:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7873,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7829,
                        "src": "17806:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7874,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7827,
                        "src": "17830:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7875,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7825,
                        "src": "17859:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7871,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8170,
                      "src": "17763:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$13960_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17763:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17733:149:35"
                },
                {
                  "assignments": [
                    7880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7880,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nameLocation": "17955:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8114,
                      "src": "17938:22:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7879,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7878,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13974,
                          "src": "17938:8:35"
                        },
                        "referencedDeclaration": 13974,
                        "src": "17938:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7884,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7881,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6567,
                      "src": "17963:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7883,
                    "indexExpression": {
                      "id": 7882,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7823,
                      "src": "17972:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17963:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17938:39:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7886,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7870,
                            "src": "18045:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7887,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13949,
                          "src": "18045:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18069:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18045:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18072:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18037:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18037:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7892,
                  "nodeType": "ExpressionStatement",
                  "src": "18037:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7894,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7880,
                            "src": "18188:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                            }
                          },
                          "id": 7895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13971,
                          "src": "18188:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18222:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18188:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18237:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18167:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18167:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7900,
                  "nodeType": "ExpressionStatement",
                  "src": "18167:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7902,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7870,
                            "src": "18353:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13959,
                          "src": "18353:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18379:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18353:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18382:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18345:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18345:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7908,
                  "nodeType": "ExpressionStatement",
                  "src": "18345:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7910,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "18522:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7909,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6979,
                      "src": "18511:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18511:16:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7912,
                  "nodeType": "ExpressionStatement",
                  "src": "18511:16:35"
                },
                {
                  "assignments": [
                    7914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7914,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "18577:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8114,
                      "src": "18569:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18569:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7930,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7927,
                          "name": "_tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7870,
                          "src": "18739:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13953,
                        "src": "18739:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 7922,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "18679:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                  }
                                },
                                "id": 7923,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13971,
                                "src": "18679:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 7918,
                                      "name": "_pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7880,
                                      "src": "18635:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                      }
                                    },
                                    "id": 7919,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accZORRORewards",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13969,
                                    "src": "18635:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 7915,
                                      "name": "_tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7870,
                                      "src": "18609:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                        "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                      }
                                    },
                                    "id": 7916,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "contribution",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13949,
                                    "src": "18609:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 7917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3722,
                                  "src": "18609:25:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 7920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18609:48:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3737,
                              "src": "18609:52:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 7924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18609:115:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7925,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18595:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3707,
                      "src": "18595:143:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18595:164:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18569:190:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7931,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7914,
                      "src": "18835:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18853:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18835:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8017,
                  "nodeType": "IfStatement",
                  "src": "18831:2263:35",
                  "trueBody": {
                    "id": 8016,
                    "nodeType": "Block",
                    "src": "18856:2238:35",
                    "statements": [
                      {
                        "assignments": [
                          7935,
                          7937
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7935,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "18952:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8016,
                            "src": "18944:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7934,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18944:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7937,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "18989:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8016,
                            "src": "18981:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7936,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18981:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7945,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7942,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7870,
                              "src": "19082:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7943,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7914,
                              "src": "19092:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7939,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6587,
                                  "src": "19044:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7938,
                                "name": "ZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10813,
                                "src": "19021:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10813_$",
                                  "typeString": "type(contract ZorroControllerActions)"
                                }
                              },
                              "id": 7940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19021:41:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZorroControllerActions_$10813",
                                "typeString": "contract ZorroControllerActions"
                              }
                            },
                            "id": 7941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10752,
                            "src": "19021:60:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$13960_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19021:87:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18926:182:35"
                      },
                      {
                        "condition": {
                          "id": 7946,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7833,
                          "src": "19127:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 8014,
                          "nodeType": "Block",
                          "src": "20060:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7979,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7935,
                                  "src": "20164:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20178:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20164:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7988,
                              "nodeType": "IfStatement",
                              "src": "20160:108:35",
                              "trueBody": {
                                "id": 7987,
                                "nodeType": "Block",
                                "src": "20181:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7983,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7825,
                                          "src": "20222:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7984,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7935,
                                          "src": "20237:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7982,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7105,
                                        "src": "20203:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20203:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7986,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20203:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7989,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6559,
                                  "src": "20290:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7990,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6561,
                                  "src": "20301:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20290:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 8012,
                                "nodeType": "Block",
                                "src": "20732:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 8005,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 8003,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7937,
                                        "src": "20944:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 8004,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20962:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "20944:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 8011,
                                    "nodeType": "IfStatement",
                                    "src": "20940:112:35",
                                    "trueBody": {
                                      "id": 8010,
                                      "nodeType": "Block",
                                      "src": "20965:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 8007,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7937,
                                                "src": "21013:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 8006,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7032,
                                              "src": "20991:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 8008,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "20991:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 8009,
                                          "nodeType": "ExpressionStatement",
                                          "src": "20991:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 8013,
                              "nodeType": "IfStatement",
                              "src": "20286:784:35",
                              "trueBody": {
                                "id": 8002,
                                "nodeType": "Block",
                                "src": "20314:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7994,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7992,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7937,
                                        "src": "20499:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7993,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20517:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "20499:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 8001,
                                    "nodeType": "IfStatement",
                                    "src": "20495:213:35",
                                    "trueBody": {
                                      "id": 8000,
                                      "nodeType": "Block",
                                      "src": "20520:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7996,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6533,
                                                "src": "20650:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7997,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7937,
                                                "src": "20669:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7995,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7105,
                                              "src": "20631:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7998,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "20631:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7999,
                                          "nodeType": "ExpressionStatement",
                                          "src": "20631:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 8015,
                        "nodeType": "IfStatement",
                        "src": "19123:1961:35",
                        "trueBody": {
                          "id": 7978,
                          "nodeType": "Block",
                          "src": "19148:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7947,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7837,
                                    "src": "19209:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                                      "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7949,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7174,
                                  "src": "19209:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7950,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7935,
                                  "src": "19233:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19209:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7952,
                              "nodeType": "ExpressionStatement",
                              "src": "19209:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7953,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6559,
                                  "src": "19267:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7954,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6561,
                                  "src": "19278:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19267:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7976,
                                "nodeType": "Block",
                                "src": "19705:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7969,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7967,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7937,
                                        "src": "19914:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7968,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19932:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "19914:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7975,
                                    "nodeType": "IfStatement",
                                    "src": "19910:112:35",
                                    "trueBody": {
                                      "id": 7974,
                                      "nodeType": "Block",
                                      "src": "19935:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7971,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7937,
                                                "src": "19983:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7970,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7032,
                                              "src": "19961:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7972,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19961:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7973,
                                          "nodeType": "ExpressionStatement",
                                          "src": "19961:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7977,
                              "nodeType": "IfStatement",
                              "src": "19263:777:35",
                              "trueBody": {
                                "id": 7966,
                                "nodeType": "Block",
                                "src": "19291:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7958,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7956,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7937,
                                        "src": "19472:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19490:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "19472:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7965,
                                    "nodeType": "IfStatement",
                                    "src": "19468:213:35",
                                    "trueBody": {
                                      "id": 7964,
                                      "nodeType": "Block",
                                      "src": "19493:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7960,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6533,
                                                "src": "19623:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7961,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7937,
                                                "src": "19642:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7959,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7105,
                                              "src": "19604:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7962,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19604:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7963,
                                          "nodeType": "ExpressionStatement",
                                          "src": "19604:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 8019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "21180:13:35",
                    "subExpression": {
                      "id": 8018,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7831,
                      "src": "21181:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8113,
                  "nodeType": "IfStatement",
                  "src": "21176:1724:35",
                  "trueBody": {
                    "id": 8112,
                    "nodeType": "Block",
                    "src": "21195:1705:35",
                    "statements": [
                      {
                        "assignments": [
                          8021
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8021,
                            "mutability": "mutable",
                            "name": "_resolvedLocalAcct",
                            "nameLocation": "21388:18:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8112,
                            "src": "21380:26:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8020,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21380:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8026,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8023,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "21443:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8024,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7827,
                              "src": "21474:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 8022,
                            "name": "_getLocalAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7551,
                            "src": "21409:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 8025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21409:94:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21380:123:35"
                      },
                      {
                        "assignments": [
                          8029
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8029,
                            "mutability": "mutable",
                            "name": "_vault",
                            "nameLocation": "21550:6:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8112,
                            "src": "21543:13:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$13899",
                              "typeString": "contract IVault"
                            },
                            "typeName": {
                              "id": 8028,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8027,
                                "name": "IVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13899,
                                "src": "21543:6:35"
                              },
                              "referencedDeclaration": 13899,
                              "src": "21543:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$13899",
                                "typeString": "contract IVault"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8036,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 8031,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6567,
                                  "src": "21566:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 8033,
                                "indexExpression": {
                                  "id": 8032,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7823,
                                  "src": "21575:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21566:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                }
                              },
                              "id": 8034,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13973,
                              "src": "21566:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8030,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "21559:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$13899_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21559:28:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$13899",
                            "typeString": "contract IVault"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21543:44:35"
                      },
                      {
                        "assignments": [
                          8038
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8038,
                            "mutability": "mutable",
                            "name": "_stakedWantAmt",
                            "nameLocation": "21844:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8112,
                            "src": "21836:22:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8037,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21836:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8058,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 8053,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8029,
                                      "src": "22023:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$13899",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 8054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sharesTotal",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13843,
                                    "src": "22023:18:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 8055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22023:20:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 8050,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7870,
                                    "src": "21995:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 8051,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timeMultiplier",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13951,
                                  "src": "21995:23:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3722,
                                "src": "21995:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21995:49:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 8045,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8029,
                                      "src": "21948:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$13899",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 8046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "wantLockedTotal",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13838,
                                    "src": "21948:22:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 8047,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21948:24:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31653132",
                                      "id": 8042,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21921:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000_by_1",
                                        "typeString": "int_const 1000000000000"
                                      },
                                      "value": "1e12"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000000000000_by_1",
                                        "typeString": "int_const 1000000000000"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 8039,
                                        "name": "_tranche",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7870,
                                        "src": "21861:8:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                        }
                                      },
                                      "id": 8040,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "contribution",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13949,
                                      "src": "21861:38:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 8041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3722,
                                    "src": "21861:59:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 8043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21861:65:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3722,
                                "src": "21861:86:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21861:112:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3737,
                            "src": "21861:133:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21861:184:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21836:209:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8062,
                              "name": "_stakedWantAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8038,
                              "src": "22141:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8059,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8029,
                              "src": "22116:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$13899",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 8061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawWantToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13866,
                            "src": "22116:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 8063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22116:40:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8064,
                        "nodeType": "ExpressionStatement",
                        "src": "22116:40:35"
                      },
                      {
                        "expression": {
                          "id": 8074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 8065,
                              "name": "_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7880,
                              "src": "22207:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 8067,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalTrancheContributions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13971,
                            "src": "22207:31:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 8071,
                                  "name": "_tranche",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7870,
                                  "src": "22311:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                  }
                                },
                                "id": 8072,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contribution",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13949,
                                "src": "22311:21:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 8068,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "22241:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                  }
                                },
                                "id": 8069,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13971,
                                "src": "22241:48:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3707,
                              "src": "22241:69:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22241:92:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22207:126:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8075,
                        "nodeType": "ExpressionStatement",
                        "src": "22207:126:35"
                      },
                      {
                        "expression": {
                          "id": 8089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 8076,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7837,
                              "src": "22392:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                                "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                              }
                            },
                            "id": 8078,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wantAmt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7172,
                            "src": "22392:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 8086,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "22472:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                                      "typeString": "contract ZorroControllerInvestment"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                                      "typeString": "contract ZorroControllerInvestment"
                                    }
                                  ],
                                  "id": 8085,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22464:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 8084,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22464:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 8087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22464:13:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 8080,
                                      "name": "_pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7880,
                                      "src": "22425:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage_ptr",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                      }
                                    },
                                    "id": 8081,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "want",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13963,
                                    "src": "22425:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  ],
                                  "id": 8079,
                                  "name": "IERC20Upgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2635,
                                  "src": "22407:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                    "typeString": "type(contract IERC20Upgradeable)"
                                  }
                                },
                                "id": 8082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22407:29:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                  "typeString": "contract IERC20Upgradeable"
                                }
                              },
                              "id": 8083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2574,
                              "src": "22407:39:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 8088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22407:84:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22392:99:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8090,
                        "nodeType": "ExpressionStatement",
                        "src": "22392:99:35"
                      },
                      {
                        "expression": {
                          "id": 8101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 8091,
                                    "name": "trancheInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6575,
                                    "src": "22544:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                    }
                                  },
                                  "id": 8095,
                                  "indexExpression": {
                                    "id": 8092,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7823,
                                    "src": "22556:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22544:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                  }
                                },
                                "id": 8096,
                                "indexExpression": {
                                  "id": 8093,
                                  "name": "_resolvedLocalAcct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8021,
                                  "src": "22562:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22544:37:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8097,
                              "indexExpression": {
                                "id": 8094,
                                "name": "_trancheId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7829,
                                "src": "22582:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22544:49:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                              }
                            },
                            "id": 8098,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "exitedVaultAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13959,
                            "src": "22544:80:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 8099,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "22627:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 8100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "22627:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22544:98:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8102,
                        "nodeType": "ExpressionStatement",
                        "src": "22544:98:35"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 8104,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "22749:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8105,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7827,
                              "src": "22780:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 8106,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7823,
                              "src": "22813:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8107,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7829,
                              "src": "22835:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8108,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7837,
                                "src": "22863:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                                  "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 8109,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7172,
                              "src": "22863:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 8103,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7341,
                            "src": "22723:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 8110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22723:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8111,
                        "nodeType": "EmitStatement",
                        "src": "22718:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7821,
              "nodeType": "StructuredDocumentation",
              "src": "16421:690:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _pid index of pool\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 8115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "17125:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7823,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "17152:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17144:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17144:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7825,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "17174:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17166:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17166:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7827,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "17210:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17197:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7826,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17197:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7829,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "17243:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17235:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17235:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7831,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "17268:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17263:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7830,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17263:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7833,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "17295:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17290:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17290:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17134:186:35"
            },
            "returnParameters": {
              "id": 7838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7837,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "17363:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8115,
                  "src": "17339:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                    "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7836,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7835,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7175,
                      "src": "17339:16:35"
                    },
                    "referencedDeclaration": 7175,
                    "src": "17339:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$7175_storage_ptr",
                      "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17338:30:35"
            },
            "scope": 8558,
            "src": "17116:5790:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8169,
              "nodeType": "Block",
              "src": "23597:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8130,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8124,
                      "src": "23611:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23636:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23628:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23628:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23628:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23611:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8167,
                    "nodeType": "Block",
                    "src": "23761:237:35",
                    "statements": [
                      {
                        "assignments": [
                          8148
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8148,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "23821:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 8167,
                            "src": "23813:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8147,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23813:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8156,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 8149,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6583,
                                "src": "23836:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 8151,
                              "indexExpression": {
                                "id": 8150,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8118,
                                "src": "23855:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23836:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 8153,
                            "indexExpression": {
                              "id": 8152,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8122,
                              "src": "23861:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23836:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 8155,
                          "indexExpression": {
                            "id": 8154,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8120,
                            "src": "23895:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23836:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23813:106:35"
                      },
                      {
                        "expression": {
                          "id": 8165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8157,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8128,
                            "src": "23933:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 8158,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6575,
                                  "src": "23944:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 8160,
                                "indexExpression": {
                                  "id": 8159,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8118,
                                  "src": "23956:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23944:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 8162,
                              "indexExpression": {
                                "id": 8161,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8148,
                                "src": "23962:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23944:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 8164,
                            "indexExpression": {
                              "id": 8163,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8120,
                              "src": "23976:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23944:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "23933:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 8166,
                        "nodeType": "ExpressionStatement",
                        "src": "23933:54:35"
                      }
                    ]
                  },
                  "id": 8168,
                  "nodeType": "IfStatement",
                  "src": "23607:391:35",
                  "trueBody": {
                    "id": 8146,
                    "nodeType": "Block",
                    "src": "23640:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 8144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 8136,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8128,
                            "src": "23689:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 8137,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6575,
                                  "src": "23700:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 8139,
                                "indexExpression": {
                                  "id": 8138,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8118,
                                  "src": "23712:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23700:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 8141,
                              "indexExpression": {
                                "id": 8140,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8124,
                                "src": "23718:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23700:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 8143,
                            "indexExpression": {
                              "id": 8142,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8120,
                              "src": "23733:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23700:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "23689:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 8145,
                        "nodeType": "ExpressionStatement",
                        "src": "23689:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8116,
              "nodeType": "StructuredDocumentation",
              "src": "22912:482:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _pid Pool ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 8170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "23408:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8118,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "23437:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "23429:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23429:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8120,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "23459:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "23451:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23451:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8122,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "23492:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "23479:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8121,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23479:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8124,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "23525:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "23517:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23517:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23419:125:35"
            },
            "returnParameters": {
              "id": 8129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8128,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "23587:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "23568:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$13960_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 8127,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8126,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13960,
                      "src": "23568:11:35"
                    },
                    "referencedDeclaration": 13960,
                    "src": "23568:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23567:29:35"
            },
            "scope": 8558,
            "src": "23399:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14184
            ],
            "body": {
              "id": 8210,
              "nodeType": "Block",
              "src": "24673:451:35",
              "statements": [
                {
                  "assignments": [
                    8187,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8187,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "24723:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8210,
                      "src": "24715:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8186,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24715:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8198,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "24775:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24775:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24799:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8192,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8173,
                        "src": "24815:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8193,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8175,
                        "src": "24833:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8194,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8177,
                        "src": "24857:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8195,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8179,
                        "src": "24883:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24915:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8188,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8345,
                      "src": "24739:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24739:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24714:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "25045:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25045:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8205,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8187,
                        "src": "25069:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8200,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6529,
                            "src": "25000:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8199,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "24982:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24982:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "24982:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24982:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8207,
                  "nodeType": "ExpressionStatement",
                  "src": "24982:107:35"
                },
                {
                  "expression": {
                    "id": 8208,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8187,
                    "src": "25107:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8185,
                  "id": 8209,
                  "nodeType": "Return",
                  "src": "25100:17:35"
                }
              ]
            },
            "documentation": {
              "id": 8171,
              "nodeType": "StructuredDocumentation",
              "src": "24010:470:35",
              "text": "@notice Withdraws funds from a pool and converts the Want token into USD\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 8211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8181,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "24642:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "24642:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "24494:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8173,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "24533:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "24525:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24525:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8175,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "24555:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "24547:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24547:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8177,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "24580:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "24575:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24575:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8179,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "24610:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "24602:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24602:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24515:119:35"
            },
            "returnParameters": {
              "id": 8185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "24664:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24664:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24663:9:35"
            },
            "scope": 8558,
            "src": "24485:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14203
            ],
            "body": {
              "id": 8274,
              "nodeType": "Block",
              "src": "26196:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 8245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 8233,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8229,
                          "src": "26252:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8234,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8231,
                          "src": "26264:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8235,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26251:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8237,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8214,
                          "src": "26321:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 8238,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8216,
                          "src": "26343:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 8239,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8218,
                          "src": "26372:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8240,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8220,
                          "src": "26390:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8241,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8222,
                          "src": "26414:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 8242,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8224,
                          "src": "26440:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 8243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26472:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 8236,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8345,
                        "src": "26285:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 8244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26285:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "26251:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8246,
                  "nodeType": "ExpressionStatement",
                  "src": "26251:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8247,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8229,
                      "src": "26552:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26565:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26552:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8260,
                  "nodeType": "IfStatement",
                  "src": "26548:164:35",
                  "trueBody": {
                    "id": 8259,
                    "nodeType": "Block",
                    "src": "26568:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8254,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "26649:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "26649:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8256,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8229,
                              "src": "26677:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8251,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6529,
                                  "src": "26600:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8250,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "26582:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26582:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "26582:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26582:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8258,
                        "nodeType": "ExpressionStatement",
                        "src": "26582:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8261,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8231,
                      "src": "26841:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26861:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26841:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8273,
                  "nodeType": "IfStatement",
                  "src": "26837:167:35",
                  "trueBody": {
                    "id": 8272,
                    "nodeType": "Block",
                    "src": "26864:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8268,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6535,
                              "src": "26933:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8269,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8231,
                              "src": "26962:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8265,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6527,
                                  "src": "26896:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8264,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "26878:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26878:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "26878:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26878:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8271,
                        "nodeType": "ExpressionStatement",
                        "src": "26878:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8212,
              "nodeType": "StructuredDocumentation",
              "src": "25130:730:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8226,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7210,
                  "src": "26112:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "26112:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "25874:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8214,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "25923:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "25915:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25915:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8216,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "25954:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "25941:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8215,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25941:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8218,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "25987:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "25979:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25979:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8220,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "26009:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "26001:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26001:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8222,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "26034:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "26029:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8221,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "26029:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8224,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "26064:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "26056:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26056:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25905:183:35"
            },
            "returnParameters": {
              "id": 8232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8229,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "26153:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "26145:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26145:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8231,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "26173:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8275,
                  "src": "26165:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26165:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26144:47:35"
            },
            "scope": 8558,
            "src": "25865:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8344,
              "nodeType": "Block",
              "src": "28159:793:35",
              "statements": [
                {
                  "assignments": [
                    8298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8298,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "28207:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8344,
                      "src": "28199:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8297,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28199:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8303,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8299,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6567,
                        "src": "28220:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8301,
                      "indexExpression": {
                        "id": 8300,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8282,
                        "src": "28229:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28220:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 8302,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13973,
                    "src": "28220:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28199:41:35"
                },
                {
                  "assignments": [
                    8306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8306,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "28350:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8344,
                      "src": "28326:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                        "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8304,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7175,
                          "src": "28326:16:35"
                        },
                        "referencedDeclaration": 7175,
                        "src": "28326:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$7175_storage_ptr",
                          "typeString": "struct ZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8315,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8308,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8282,
                        "src": "28380:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8309,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8278,
                        "src": "28398:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8310,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "28420:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8311,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8284,
                        "src": "28449:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8312,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8286,
                        "src": "28473:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8313,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8290,
                        "src": "28499:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8307,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8115,
                      "src": "28357:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$7175_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct ZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28357:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                      "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28326:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8323,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8298,
                        "src": "28680:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8324,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8306,
                          "src": "28704:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                            "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8325,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7172,
                        "src": "28704:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8317,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6567,
                                "src": "28624:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8319,
                              "indexExpression": {
                                "id": 8318,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8282,
                                "src": "28633:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28624:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8320,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "28624:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8316,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "28606:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28606:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "28606:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28606:120:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8327,
                  "nodeType": "ExpressionStatement",
                  "src": "28606:120:35"
                },
                {
                  "expression": {
                    "id": 8337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8328,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8293,
                      "src": "28770:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8333,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8306,
                            "src": "28839:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                              "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7172,
                          "src": "28839:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8335,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8288,
                          "src": "28865:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8330,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8298,
                              "src": "28790:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8329,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "28783:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$13899_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28783:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$13899",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13875,
                        "src": "28783:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28783:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28770:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8338,
                  "nodeType": "ExpressionStatement",
                  "src": "28770:123:35"
                },
                {
                  "expression": {
                    "id": 8342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8339,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8295,
                      "src": "28904:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8340,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8306,
                        "src": "28924:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                          "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8341,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7174,
                      "src": "28924:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28904:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8343,
                  "nodeType": "ExpressionStatement",
                  "src": "28904:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8276,
              "nodeType": "StructuredDocumentation",
              "src": "27016:824:35",
              "text": "@notice Private function for withdrawing funds from a pool and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "27854:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8278,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "27894:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "27886:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27886:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8280,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "27925:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "27912:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8279,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "27912:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8282,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "27958:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "27950:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27950:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8284,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "27980:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "27972:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27972:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8286,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "28005:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "28000:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28000:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8288,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "28035:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "28027:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28027:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8290,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "28068:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "28063:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8289,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28063:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27876:217:35"
            },
            "returnParameters": {
              "id": 8296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8293,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "28120:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "28112:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28112:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8295,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "28140:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8345,
                  "src": "28132:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28132:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28111:47:35"
            },
            "scope": 8558,
            "src": "27845:1107:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14214
            ],
            "body": {
              "id": 8426,
              "nodeType": "Block",
              "src": "29533:1037:35",
              "statements": [
                {
                  "assignments": [
                    8360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8360,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "29597:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8426,
                      "src": "29589:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29589:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8370,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8361,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6575,
                            "src": "29614:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8363,
                          "indexExpression": {
                            "id": 8362,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8348,
                            "src": "29626:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29614:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8366,
                        "indexExpression": {
                          "expression": {
                            "id": 8364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "29636:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "29636:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29614:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8368,
                      "indexExpression": {
                        "id": 8367,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8350,
                        "src": "29661:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "29614:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8369,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13955,
                    "src": "29614:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29589:121:35"
                },
                {
                  "assignments": [
                    8372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8372,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "29728:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8426,
                      "src": "29720:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29720:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8382,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8373,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6575,
                            "src": "29745:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8375,
                          "indexExpression": {
                            "id": 8374,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8348,
                            "src": "29757:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "29745:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8378,
                        "indexExpression": {
                          "expression": {
                            "id": 8376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "29767:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "29767:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29745:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13960_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8380,
                      "indexExpression": {
                        "id": 8379,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8350,
                        "src": "29792:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "29745:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13960_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8381,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13957,
                    "src": "29745:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29720:111:35"
                },
                {
                  "assignments": [
                    8384,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8384,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "29871:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8426,
                      "src": "29863:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29863:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8395,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "29925:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "29925:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29949:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8389,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "29965:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8390,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8350,
                        "src": "29987:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30015:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8392,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8354,
                        "src": "30034:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30066:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8385,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8345,
                      "src": "29889:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29889:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29862:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8400,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6567,
                            "src": "30190:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8402,
                          "indexExpression": {
                            "id": 8401,
                            "name": "_toPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8352,
                            "src": "30199:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30190:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                          }
                        },
                        "id": 8403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13973,
                        "src": "30190:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8404,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "30226:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8397,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6529,
                            "src": "30145:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8396,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "30127:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30127:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "30127:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30127:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8406,
                  "nodeType": "ExpressionStatement",
                  "src": "30127:121:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8408,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8352,
                        "src": "30313:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8409,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "30333:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30333:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30357:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8412,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "30373:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8413,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8360,
                        "src": "30399:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8414,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8372,
                        "src": "30427:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8415,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8354,
                        "src": "30455:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8407,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7776,
                      "src": "30280:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30280:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8417,
                  "nodeType": "ExpressionStatement",
                  "src": "30280:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "30518:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30518:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8421,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "30530:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8422,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8350,
                        "src": "30540:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8423,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8352,
                        "src": "30556:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8418,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7351,
                      "src": "30499:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30499:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8425,
                  "nodeType": "EmitStatement",
                  "src": "30494:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8346,
              "nodeType": "StructuredDocumentation",
              "src": "28958:398:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromPid index of pool FROM\n @param _fromTrancheId index of tranche FROM\n @param _toPid index of pool TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8357,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8356,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "29520:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29520:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "29370:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8348,
                  "mutability": "mutable",
                  "name": "_fromPid",
                  "nameLocation": "29406:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "29398:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29398:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8350,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "29432:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "29424:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29424:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8352,
                  "mutability": "mutable",
                  "name": "_toPid",
                  "nameLocation": "29464:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "29456:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29456:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8354,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "29488:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "29480:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29480:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29388:124:35"
            },
            "returnParameters": {
              "id": 8358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29533:0:35"
            },
            "scope": 8558,
            "src": "29361:1209:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14219
            ],
            "body": {
              "id": 8497,
              "nodeType": "Block",
              "src": "30736:613:35",
              "statements": [
                {
                  "assignments": [
                    8436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8436,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "30837:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8497,
                      "src": "30829:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30829:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8442,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8438,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8430,
                        "src": "30865:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "30871:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30871:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8437,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6781,
                      "src": "30851:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30851:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30829:53:35"
                },
                {
                  "body": {
                    "id": 8463,
                    "nodeType": "Block",
                    "src": "30940:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8454,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8430,
                              "src": "30964:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8455,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "30970:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "30970:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30982:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8458,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8444,
                              "src": "30986:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30991:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30998:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8453,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8115,
                            "src": "30954:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$7175_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct ZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30954:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$7175_memory_ptr",
                            "typeString": "struct ZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8462,
                        "nodeType": "ExpressionStatement",
                        "src": "30954:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8447,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8444,
                      "src": "30914:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8448,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8436,
                      "src": "30920:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30914:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8464,
                  "initializationExpression": {
                    "assignments": [
                      8444
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8444,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "30905:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8464,
                        "src": "30897:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8443,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30897:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8446,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30911:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30897:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "30933:5:35",
                      "subExpression": {
                        "id": 8450,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8444,
                        "src": "30935:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8452,
                    "nodeType": "ExpressionStatement",
                    "src": "30933:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "30892:123:35"
                },
                {
                  "assignments": [
                    8466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8466,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "31075:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8497,
                      "src": "31067:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31067:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8479,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8476,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "31156:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8558",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "31148:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "31148:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31148:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8468,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6567,
                                "src": "31104:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8470,
                              "indexExpression": {
                                "id": 8469,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8430,
                                "src": "31113:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31104:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8471,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13963,
                            "src": "31104:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8467,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "31086:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31086:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "31086:48:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31086:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31067:104:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8480,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8466,
                      "src": "31185:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31196:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "31185:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8496,
                  "nodeType": "IfStatement",
                  "src": "31181:162:35",
                  "trueBody": {
                    "id": 8495,
                    "nodeType": "Block",
                    "src": "31199:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8490,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "31282:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "31282:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8492,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8466,
                              "src": "31310:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8484,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6567,
                                      "src": "31231:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13974_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8486,
                                    "indexExpression": {
                                      "id": 8485,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8430,
                                      "src": "31240:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "31231:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13974_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 8487,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13963,
                                  "src": "31231:19:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8483,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "31213:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31213:38:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "31213:51:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31213:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8494,
                        "nodeType": "ExpressionStatement",
                        "src": "31213:119:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8428,
              "nodeType": "StructuredDocumentation",
              "src": "30576:100:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a pool\n @param _pid index of pool"
            },
            "functionSelector": "958e2d31",
            "id": 8498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8432,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "30723:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "30723:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "30690:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8430,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "30710:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8498,
                  "src": "30702:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30702:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30701:14:35"
            },
            "returnParameters": {
              "id": 8434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30736:0:35"
            },
            "scope": 8558,
            "src": "30681:668:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14226
            ],
            "body": {
              "id": 8527,
              "nodeType": "Block",
              "src": "31738:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8508,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6559,
                      "src": "31795:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8509,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6561,
                      "src": "31806:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31795:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8525,
                    "nodeType": "Block",
                    "src": "31982:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8521,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8503,
                              "src": "32083:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8522,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8501,
                              "src": "32097:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8518,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6527,
                                  "src": "32071:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8517,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13943,
                                "src": "32064:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$13943_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32064:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$13943",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13935,
                            "src": "32064:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32064:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8524,
                        "nodeType": "ExpressionStatement",
                        "src": "32064:45:35"
                      }
                    ]
                  },
                  "id": 8526,
                  "nodeType": "IfStatement",
                  "src": "31791:329:35",
                  "trueBody": {
                    "id": 8516,
                    "nodeType": "Block",
                    "src": "31819:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8512,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8501,
                              "src": "31939:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8513,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8503,
                              "src": "31952:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8511,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7063,
                            "src": "31913:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31913:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8515,
                        "nodeType": "ExpressionStatement",
                        "src": "31913:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8499,
              "nodeType": "StructuredDocumentation",
              "src": "31393:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8505,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7210,
                  "src": "31718:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "31718:15:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "31634:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8501,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "31660:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8528,
                  "src": "31652:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31652:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8503,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "31681:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8528,
                  "src": "31673:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31673:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31651:43:35"
            },
            "returnParameters": {
              "id": 8507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31738:0:35"
            },
            "scope": 8558,
            "src": "31625:501:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14233
            ],
            "body": {
              "id": 8556,
              "nodeType": "Block",
              "src": "32668:407:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8544,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6535,
                        "src": "32858:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8547,
                            "name": "_totalSlashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8533,
                            "src": "32900:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8545,
                            "name": "_totalMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8531,
                            "src": "32883:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3707,
                          "src": "32883:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32883:31:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8541,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6527,
                            "src": "32825:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8540,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "32807:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32807:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "32807:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32807:117:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8550,
                  "nodeType": "ExpressionStatement",
                  "src": "32807:117:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8552,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8533,
                        "src": "33035:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8553,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6533,
                        "src": "33050:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8551,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7063,
                      "src": "33009:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33009:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8555,
                  "nodeType": "ExpressionStatement",
                  "src": "33009:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8529,
              "nodeType": "StructuredDocumentation",
              "src": "32132:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8536,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8535,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6498,
                  "src": "32611:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "32611:30:35"
              },
              {
                "id": 8538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8537,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6513,
                  "src": "32650:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "32650:13:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "32520:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8531,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "32551:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "32543:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32543:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8533,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "32573:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "32565:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32565:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32542:45:35"
            },
            "returnParameters": {
              "id": 8539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32668:0:35"
            },
            "scope": 8558,
            "src": "32511:564:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8559,
        "src": "594:32483:35",
        "usedErrors": []
      }
    ],
    "src": "33:33045:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-22T13:22:22.246Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_pid": "index of pool",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setPriceFeeds(address,address)": {
        "params": {
          "_priceFeedLPPoolOtherToken": "The address of the price feed for the counterparty token in the ZOR LP Pool",
          "_priceFeedZOR": "The address of the price feed for ZOR"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setStablecoinToZORPath(address[])": {
        "params": {
          "_path": "Swap path"
        }
      },
      "setStablecoinToZorroLPPoolOtherTokenPath(address[])": {
        "params": {
          "_path": "Swap path"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setUniRouter(address)": {
        "params": {
          "_uniV2Router": "Address of router"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroLPPoolParams(address,address)": {
        "params": {
          "_zorroLPPool": "Address of the Zorro-X LP pool",
          "_zorroLPPoolOtherToken": "Address of the counterpart token to the ZOR token in the LP Pool"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromPid": "index of pool FROM",
          "_fromTrancheId": "index of tranche FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toPid": "index of pool TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_pid": "index of pool",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_pid": "index of pool"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setPriceFeeds(address,address)": {
        "notice": "Setter: Chainlink price feeds"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStablecoinToZORPath(address[])": {
        "notice": "Setter: Set path for token swap from USD to ZOR"
      },
      "setStablecoinToZorroLPPoolOtherTokenPath(address[])": {
        "notice": "Setter: Set path for token swap from USD to counterparty token in ZOR LP pool"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setUniRouter(address)": {
        "notice": "Setter: Uniswap-compatible router address"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroLPPoolParams(address,address)": {
        "notice": "Setter: Zorro LP Pool params"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a pool"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a pool and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}