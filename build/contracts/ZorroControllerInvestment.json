{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromPid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toPid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerActions",
          "type": "address"
        }
      ],
      "name": "setControllerActions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromPid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toPid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerActions\",\"type\":\"address\"}],\"name\":\"setControllerActions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_pid\":\"index of pool\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromPid\":\"index of pool FROM\",\"_fromTrancheId\":\"index of tranche FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toPid\":\"index of pool TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_pid\":\"index of pool\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_pid\":\"index of pool\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setControllerActions(address)\":{\"notice\":\"Setter: Set controller actions contract address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a pool\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a pool and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0xfbe205aa66a4f63700443764afd6b46c57dbc1d099ce41cefd19eaeca790a843\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b956e95c9949d7cc30c677332d1b464de88f73c312e44caa703018b051def9a9\",\"dweb:/ipfs/QmPFAv4GGvQ9MTNYNrbr5M4NtbCzzXAyHRQEeGPbaMxUfz\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0xb11035f4892da600a1977fa8f4811039998c3956372eba04a73152a89bc785c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5add24178b514db11097c22fdaa313cd4517ae955018bca3ee950235d85289e2\",\"dweb:/ipfs/QmXct4HWMGw9JnpcEkaCbHBtvjZqNEXRGxbDeb5T2XQAMk\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x9426bd4faa5a8f0617d83ec37c7af52862c921736f20e55b1060fb1abc01f56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2a0f6d8adaaaac3fb2070c48d6f09e76dd172d450e2ea4abefecff0a8ba0488\",\"dweb:/ipfs/QmaKJys3vsj1nbvc6wJhNuPLeXhLsct2P7jNxF8LKFtDGD\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IZorro.sol\":{\"keccak256\":\"0x284b2d31511ea30be2fad6dd9d82ee9fe9b2f83781771085f1efbbe61f35f90e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adf06657f42401bb5e1c2fbb01df2c1eb214f4c0701f6aebf2d2dbb8388c31bb\",\"dweb:/ipfs/QmQ7Y8tbTD7phUfDmr97fv4D8NUkf8QXAyVwuMVoSzAVio\"]},\"project:/contracts/interfaces/IZorroController.sol\":{\"keccak256\":\"0xab0424b7f3e7a51058fa576584f483dbff1fae5f8738ea9c18df40d22c87b745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0040fe96c619f35ec12827341a579eadcf9197e219cc33bb59a315393fd6f06\",\"dweb:/ipfs/QmX4DCic2c5LWu86mQF9uZGzn9YR2cCMp1z2RJ9W2N6Gyg\"]},\"project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\":{\"keccak256\":\"0xb6990237f266cfbdab4cc86b418d689c8e6ecc748feda1a0ef6a3846b6e166e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4735836a392cd7c8365f089df43ab80c907976ad823b25c20808486b10c86f98\",\"dweb:/ipfs/QmXdGGNyfhsW8v4vYNC7cCXqq1MHTtDvqDdZ8MFVKW7NMS\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol\":{\"keccak256\":\"0x816005771e6f06fc6a18a41af8671d7ebe99681d8cb2c9babbf26bb32200c4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd5cee78aa86e75195e8e268b4025720e04472d5339b6482ee517a9f6328caf\",\"dweb:/ipfs/QmTMDQxGE2Sh4nnpPjwweupjA88i6JTxsctxNjTRj7pU4Z\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0x0bc3689c3a876f7e4e1122f5a8b027eff52dfcde0688b98af0ea028035c71957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e21014d909a88bec34483b063a8b7575a67f12ba507267f3646e067d97213529\",\"dweb:/ipfs/QmcEkvaYLpsGzbqr8jLmKbtSyPAzAAaTQgkufpq2B3N32d\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x32cac346245d108670fd526a8d05a98c826fc16481b5e1a5f3342ef4bffe8692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b9abe0286f0afa0793191ce077c9e821ee7b0f6f3cf1c60a6c2691262e5970\",\"dweb:/ipfs/QmYqaL5S8TPMmLgxZGM4g7J3DrPASVi9WDNdyLWBqThd34\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061394d806100206000396000f3fe608060405234801561001057600080fd5b50600436106103865760003560e060020a9004806370d5ae05116101e2578063b4b4e9eb11610113578063cb9c2f68116100b1578063f2fde38b11610080578063f2fde38b146107cb578063f35e4a6e146107de578063f63cce37146107f1578063fc39a29e1461080457600080fd5b8063cb9c2f6814610793578063cff38dd41461079c578063ed43633f146107af578063ef126967146107c257600080fd5b8063c13260a5116100ed578063c13260a514610751578063c293614214610764578063c4e94f221461076d578063c6d758cb1461078057600080fd5b8063b4b4e9eb146106f5578063b61bb80a14610735578063b95cc6811461074857600080fd5b8063941d3fd0116101805780639cebd3711161015a5780639cebd371146106be578063a13346c6146106c7578063a1be201d146106cf578063a4d2b083146106e257600080fd5b8063941d3fd01461066d578063958e2d31146106a25780639a8a0592146106b557600080fd5b80637e37c769116101bc5780637e37c76914610623578063823c43d0146106365780638c157db2146106495780638da5cb5b1461065c57600080fd5b806370d5ae05146105f5578063715018a614610608578063745af0a81461061057600080fd5b806340abd8fc116102bc578063529668321161025a5780635c63fa87116102345780635c63fa87146105a9578063668ababb146105bc5780636b8eb2e5146105cf5780636c78d49c146105e257600080fd5b8063529668321461058457806353f73f871461058d5780635527a6f9146105a057600080fd5b80634b0e7216116102965780634b0e7216146105425780634cfea68a146105555780635051d3711461055e57806351eb05a61461057157600080fd5b806340abd8fc146104fe5780634780f9f51461052657806348cd4cb11461053957600080fd5b80632e31283d1161032957806339e80a881161030357806339e80a88146104c65780633b710688146104d95780633b9ce565146104e25780633bbc1ffc146104eb57600080fd5b80632e31283d1461043d578063332e5a7b146104a057806333cfcd3b146104b357600080fd5b80630aa0988e116103655780630aa0988e146103bf5780631526fe27146103d257806317caf6f1146104215780631b8fb6921461042a57600080fd5b8062aeef8a1461038b578063081e3eda146103a057806309b79b3c146103b7575b600080fd5b61039e6103993660046130c4565b610817565b005b60aa545b6040519081526020015b60405180910390f35b61039e6108b6565b61039e6103cd366004613105565b61091a565b6103e56103e036600461313e565b610975565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103ae565b6103a460a45481565b61039e610438366004613157565b6109c8565b61048861044b366004613222565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103ae565b60ae5461048890600160a060020a031681565b6103a46104c1366004613280565b610a9b565b60af5461048890600160a060020a031681565b6103a460a35481565b6103a460a15481565b61039e6104f936600461313e565b610b38565b61051161050c3660046132b9565b610b97565b604080519283526020830191909152016103ae565b61039e610534366004613339565b610c32565b6103a4609c5481565b61039e61055036600461336b565b610cc4565b6103a4609d5481565b61039e61056c36600461336b565b610d13565b6103a461057f36600461313e565b610d62565b6103a460a55481565b6103a461059b366004613157565b610f55565b6103a460a05481565b61039e6105b7366004613388565b610f7f565b60995461048890600160a060020a031681565b61039e6105dd3660046133b6565b610fd6565b61039e6105f03660046133f1565b6110a6565b609b5461048890600160a060020a031681565b61039e611113565b6103a461061e36600461340e565b61114c565b61039e610631366004613339565b6111c6565b60ad5461048890600160a060020a031681565b60975461048890600160a060020a031681565b603354600160a060020a0316610488565b60ae546106929074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103ae565b61039e6106b036600461313e565b61133c565b6103a460a75481565b6103a460a25481565b61039e611482565b61039e6106dd36600461336b565b611500565b609a5461048890600160a060020a031681565b61070861070336600461344d565b61154f565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103ae565b60985461048890600160a060020a031681565b6103a460a65481565b61039e61075f366004613485565b6115b0565b6103a4609e5481565b61039e61077b36600461336b565b611657565b61039e61078e3660046134a7565b6116a6565b6103a4609f5481565b61039e6107aa3660046134d3565b61176e565b61039e6107bd366004613551565b611803565b6103a460a85481565b61039e6107d936600461336b565b61187c565b61039e6107ec36600461313e565b611934565b61039e6107ff366004613105565b6119b9565b60a95461048890600160a060020a031681565b600260655414156108465760405160e560020a62461bcd02815260040161083d906135de565b60405180910390fd5b6002606581905550600060aa848154811061086357610863613615565b60009182526020909120600690910201805490915061088d90600160a060020a0316333086611a41565b6108aa843360405180602001604052806000815250868642611af8565b50506001606555505050565b60ad54600160a060020a031633600160a060020a0316146108ec5760405160e560020a62461bcd02815260040161083d9061362e565b60a85460a75414156109135760405160e560020a62461bcd02815260040161083d90613665565b600060a555565b603354600160a060020a031633146109475760405160e560020a62461bcd02815260040161083d9061369c565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa818154811061098557600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60af54600160a060020a031633600160a060020a0316146109fe5760405160e560020a62461bcd02815260040161083d906136d1565b60a85460a7541415610a1857610a148282611e2c565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050505050565b600060026065541415610ac35760405160e560020a62461bcd02815260040161083d906135de565b60026065819055506000610aeb85336040518060200160405280600081525087876000611e4a565b9050610b2a33826000015160aa8881548110610b0957610b09613615565b6000918252602090912060069091020154600160a060020a03169190612574565b516001606555949350505050565b603354600160a060020a03163314610b655760405160e560020a62461bcd02815260040161083d9061369c565b60a954600160a060020a03163014610b925760405160e560020a62461bcd02815260040161083d90613708565b609f55565b60af546000908190600160a060020a031633600160a060020a031614610bd25760405160e560020a62461bcd02815260040161083d906136d1565b610be288888888888860016125c2565b90925090508115610c0457609854610c0490600160a060020a03163384612574565b8015610c2757609b54609754610c2791600160a060020a03918216911683612574565b965096945050505050565b60026065541415610c585760405160e560020a62461bcd02815260040161083d906135de565b6002606581905550600060aa8581548110610c7557610c75613615565b6000918252602090912060056006909202010154609854600160a060020a039182169250610ca69116338387611a41565b6108aa853360405180602001604052806000815250878742886126ea565b603354600160a060020a03163314610cf15760405160e560020a62461bcd02815260040161083d9061369c565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610d405760405160e560020a62461bcd02815260040161083d9061369c565b60ad8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610d7857610d78613615565b9060005260206000209060060201905080600201544311610d9c5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e25919061373f565b905080610e3c575043600290910155506000919050565b6000826002015443610e4e9190613771565b9050600060a4548460010154609e5484610e689190613788565b610e729190613788565b610e7c91906137a7565b60a954909150600160a060020a0316301415610ea557610e9c8130611e2c565b60009450610f2e565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b50505050809450610f2e856127d6565b808460030154610f3e91906137cc565b600385015550504360029092019190915550919050565b600082815260ab60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610fac5760405160e560020a62461bcd02815260040161083d9061369c565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a03161461100c5760405160e560020a62461bcd02815260040161083d9061362e565b600061101a83612710613788565b848660a3546110299190613788565b6110339190613788565b61103d91906137a7565b905060a154811115611052575060a154611061565b60a054811015611061575060a0545b609d5461107087612710613788565b61107a9190613788565b60a2546110878385613788565b6110919190613788565b61109b91906137a7565b609e55505050505050565b603354600160a060020a031633146110d35760405160e560020a62461bcd02815260040161083d9061369c565b60ae8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a031633146111405760405160e560020a62461bcd02815260040161083d9061369c565b61114a6000612811565b565b6000600260655414156111745760405160e560020a62461bcd02815260040161083d906135de565b6002606581905550600061119d33604051806020016040528060008152508888888860006125c2565b506098549091506111b890600160a060020a03163383612574565b600160655595945050505050565b600260655414156111ec5760405160e560020a62461bcd02815260040161083d906135de565b6002606555600084815260ab60209081526040808320338452909152812080548590811061121c5761121c613615565b600091825260208083206003600690930201919091015487835260ab825260408084203385529092529082208054919350908690811061125e5761125e613615565b906000526020600020906006020160040154905060006112943360405180602001604052806000815250898960008960006125c2565b5090506112d760aa86815481106112ad576112ad613615565b6000918252602090912060056006909202010154609854600160a060020a03908116911683612574565b6112f58533604051806020016040528060008152508487878a6126ea565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b600260655414156113625760405160e560020a62461bcd02815260040161083d906135de565b600260655560006113738233610f55565b905060005b818110156113af5761139e83336040518060200160405280600081525084600080611e4a565b506113a8816137e4565b9050611378565b50600060aa83815481106113c5576113c5613615565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611434573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611458919061373f565b9050801561147857611478338260aa8681548110610b0957610b09613615565b5050600160655550565b60ad54600160a060020a031633600160a060020a0316146114b85760405160e560020a62461bcd02815260040161083d9061362e565b60a85460a75414156114df5760405160e560020a62461bcd02815260040161083d90613665565b609b5460a65460975461091392600160a060020a0391821692911690612574565b603354600160a060020a0316331461152d5760405160e560020a62461bcd02815260040161083d9061369c565b60ae8054600160a060020a031916600160a060020a0392909216919091179055565b60ab602052826000526040600020602052816000526040600020818154811061157757600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ad54600160a060020a031633600160a060020a0316146115e65760405160e560020a62461bcd02815260040161083d9061362e565b60a954600160a060020a031630146116135760405160e560020a62461bcd02815260040161083d90613708565b609b5461164090600160a060020a031661162d8385613771565b609754600160a060020a03169190612574565b609a54610a14908290600160a060020a0316611e2c565b603354600160a060020a031633146116845760405160e560020a62461bcd02815260040161083d9061369c565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116d35760405160e560020a62461bcd02815260040161083d9061369c565b609754600160a060020a038381169116141561175a5760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161083d565b610a14600160a060020a0383163383612574565b60af54600160a060020a031633600160a060020a0316146117a45760405160e560020a62461bcd02815260040161083d906136d1565b600060aa88815481106117b9576117b9613615565b6000918252602090912060056006909202010154609854600160a060020a0391821692506117ea9116338388611a41565b6117f9888888888888886126ea565b5050505050505050565b603354600160a060020a031633146118305760405160e560020a62461bcd02815260040161083d9061369c565b609d859055838360008161184657611846613615565b602002919091013560a055508383600181811061186557611865613615565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146118a95760405160e560020a62461bcd02815260040161083d9061369c565b600160a060020a0381166119285760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161083d565b61193181612811565b50565b603354600160a060020a031633146119615760405160e560020a62461bcd02815260040161083d9061369c565b609c54156119b45760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161083d565b609c55565b603354600160a060020a031633146119e65760405160e560020a62461bcd02815260040161083d9061369c565b60a954600160a060020a03163014611a135760405160e560020a62461bcd02815260040161083d90613708565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611af29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612863565b50505050565b60008060aa8881548110611b0e57611b0e613615565b9060005260206000209060060201905060008511611b715760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161083d565b611b7a88610d62565b91506000611b88888861294b565b60058301548354919250611ba991600160a060020a039081169116886129f4565b600060aa8a81548110611bbe57611bbe613615565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c57919061373f565b60ae546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d05919061373f565b60ae546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d98919061373f565b905080856004016000828254611dae91906137cc565b90915550611dc390508c858c84868d8d612ad8565b8b8a604051611dd2919061382b565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611e1591815260200190565b60405180910390a450505050509695505050505050565b609954609754610a1491600160a060020a0391821691168385611a41565b6040805180820190915260008082526020820152600160a060020a038616158015611e76575060008551115b80611e935750600160a060020a03861615801590611e9357508451155b611ee25760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161083d565b6000611ef08886888a612c93565b9050600060aa8981548110611f0757611f07613615565b906000526020600020906006020190506000826000015111611f6e5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161083d565b6000816004015411611fc55760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161083d565b60a08201511561201a5760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161083d565b61202389610d62565b50600082604001518260040154836003015485600001516120449190613788565b61204e91906137a7565b6120589190613771565b905080156121ba5760ae54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa1580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121239190613847565b915091508615612170576020860182905260a85460a754141561216157801561215c57609a5461215c90600160a060020a031682612e36565b6121b7565b801561215c5761215c81612ee5565b8115612180576121808b83612e36565b60a85460a75414156121a857801561215c57609a5461215c90600160a060020a031682612e36565b80156121b7576121b781612ee5565b50505b856125675760006121cb8a8a61294b565b9050600060aa8c815481106121e2576121e2613615565b906000526020600020906006020160050160009054906101000a9004600160a060020a031690506000819050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015612251573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612275919061373f565b87602001516122849190613788565b82600160a060020a031663677379e56040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156122c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e9919061386b565b6040517ff55850b4000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152919091169063f55850b490602401602060405180830381865afa15801561234a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236e919061373f565b885161237f9064e8d4a51000613788565b6123899190613788565b61239391906137a7565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af11580156123f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241a919061373f565b5050855160048601546124309350909150613771565b60048481019190915583546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa158015612499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bd919061373f565b855260008b815260ab60209081526040808320600160a060020a0385168452909152902080544291908a9081106124f6576124f6613615565b90600052602060002090600602016005018190555050898860405161251b919061382b565b6040805191829003822087518b8452602084015291600160a060020a038d16917fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d9910160405180910390a45b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526125bd9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a8e565b505050565b600080600060aa88815481106125da576125da613615565b60009182526020822060056006909202010154600160a060020a03169150612606898c8c8b8b8a611e4a565b905061264582826000015160aa8c8154811061262457612624613615565b6000918252602090912060069091020154600160a060020a031691906129f4565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156126af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d3919061373f565b935080602001519250505097509795505050505050565b600060aa88815481106126ff576126ff613615565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af115801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a2919061373f565b90506127bc828260aa8c8154811061262457612624613615565b6127ca898989848989611af8565b50505050505050505050565b60a85460a75414156127fd5760405160e560020a62461bcd02815260040161083d90613665565b8060a55461280b91906137cc565b60a55550565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006128b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612f209092919063ffffffff16565b8051909150156125bd57808060200190518101906128d69190613888565b6125bd5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161083d565b81600160a060020a038116610f795760008251116129d45760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161083d565b6129dd826138a5565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a82919061373f565b612a8c91906137cc565b604051600160a060020a038516602482015260448101829052909150611af29085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611a8e565b600060aa8881548110612aed57612aed613615565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612b76908a90613788565b612b8091906137a7565b815260208082018790526040808301879052600060609384018190528d815260ab8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612c88578760ac60008b815260200190815260200160002088604051612c2f919061382b565b908152602001604051809103902060006001612c4b8d8d610f55565b612c559190613771565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612ccc6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612d6b57600085815260ab60209081526040808320600160a060020a03861684529091529020805485908110612d0f57612d0f613615565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612e2e565b600085815260ac60205260408082209051612d8790869061382b565b908152604080516020928190038301902060008881529083528181205489825260ab8452828220600160a060020a0390911680835293522080549192509086908110612dd557612dd5613615565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ec0919061373f565b905080831115612ece578091505b609754611af290600160a060020a03168584612574565b60a85460a7541415612f0c5760405160e560020a62461bcd02815260040161083d90613665565b8060a654612f1a91906137cc565b60a65550565b6060612f2f8484600085612f39565b90505b9392505050565b60603031831115612fb55760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161083d565b600160a060020a0385163b61300f5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161083d565b60008086600160a060020a0316858760405161302b919061382b565b60006040518083038185875af1925050503d8060008114613068576040519150601f19603f3d011682016040523d82523d6000602084013e61306d565b606091505b509150915061307d828286613088565b979650505050505050565b60608315613097575081612f32565b8251156130a75782518084602001fd5b8160405160e560020a62461bcd02815260040161083d91906138e4565b6000806000606084860312156130d957600080fd5b505081359360208301359350604090920135919050565b600160a060020a038116811461193157600080fd5b6000806040838503121561311857600080fd5b8235613123816130f0565b91506020830135613133816130f0565b809150509250929050565b60006020828403121561315057600080fd5b5035919050565b6000806040838503121561316a57600080fd5b823591506020830135613133816130f0565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126131a657600080fd5b813567ffffffffffffffff808211156131c1576131c161317c565b604051601f8301601f19908116603f011681019082821181831017156131e9576131e961317c565b8160405283815286602085880101111561320257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561323757600080fd5b83359250602084013567ffffffffffffffff81111561325557600080fd5b61326186828701613195565b925050604084013590509250925092565b801515811461193157600080fd5b60008060006060848603121561329557600080fd5b833592506020840135915060408401356132ae81613272565b809150509250925092565b60008060008060008060c087890312156132d257600080fd5b86356132dd816130f0565b9550602087013567ffffffffffffffff8111156132f957600080fd5b61330589828a01613195565b9550506040870135935060608701359250608087013561332481613272565b8092505060a087013590509295509295509295565b6000806000806080858703121561334f57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561337d57600080fd5b8135612f32816130f0565b60008060006060848603121561339d57600080fd5b833592506020840135915060408401356132ae816130f0565b600080600080600060a086880312156133ce57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561340357600080fd5b8135612f3281613272565b6000806000806080858703121561342457600080fd5b8435935060208501359250604085013561343d81613272565b9396929550929360600135925050565b60008060006060848603121561346257600080fd5b833592506020840135613474816130f0565b929592945050506040919091013590565b6000806040838503121561349857600080fd5b50508035926020909101359150565b600080604083850312156134ba57600080fd5b82356134c5816130f0565b946020939093013593505050565b600080600080600080600060e0888a0312156134ee57600080fd5b873596506020880135613500816130f0565b9550604088013567ffffffffffffffff81111561351c57600080fd5b6135288a828b01613195565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561356957600080fd5b85359450602086013567ffffffffffffffff8082111561358857600080fd5b818801915088601f83011261359c57600080fd5b8135818111156135ab57600080fd5b89602080830285010111156135bf57600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b60006020828403121561375157600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561378357613783613758565b500390565b60008160001904831182151516156137a2576137a2613758565b500290565b6000826137c75760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156137df576137df613758565b500190565b60006000198214156137f8576137f8613758565b5060010190565b60005b8381101561381a578181015183820152602001613802565b83811115611af25750506000910152565b6000825161383d8184602087016137ff565b9190910192915050565b6000806040838503121561385a57600080fd5b505080516020909101519092909150565b60006020828403121561387d57600080fd5b8151612f32816130f0565b60006020828403121561389a57600080fd5b8151612f3281613272565b805160208201516bffffffffffffffffffffffff1980821692919060148310156138dc57808360140360080260020a820283161693505b505050919050565b60208152600082518060208401526139038160408501602087016137ff565b601f01601f1916919091016040019291505056fea26469706673582212208ccfb0e2381e117d16b4ff58d3107e8d5cc630d595346f646c67ba20ce810c4364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103865760003560e060020a9004806370d5ae05116101e2578063b4b4e9eb11610113578063cb9c2f68116100b1578063f2fde38b11610080578063f2fde38b146107cb578063f35e4a6e146107de578063f63cce37146107f1578063fc39a29e1461080457600080fd5b8063cb9c2f6814610793578063cff38dd41461079c578063ed43633f146107af578063ef126967146107c257600080fd5b8063c13260a5116100ed578063c13260a514610751578063c293614214610764578063c4e94f221461076d578063c6d758cb1461078057600080fd5b8063b4b4e9eb146106f5578063b61bb80a14610735578063b95cc6811461074857600080fd5b8063941d3fd0116101805780639cebd3711161015a5780639cebd371146106be578063a13346c6146106c7578063a1be201d146106cf578063a4d2b083146106e257600080fd5b8063941d3fd01461066d578063958e2d31146106a25780639a8a0592146106b557600080fd5b80637e37c769116101bc5780637e37c76914610623578063823c43d0146106365780638c157db2146106495780638da5cb5b1461065c57600080fd5b806370d5ae05146105f5578063715018a614610608578063745af0a81461061057600080fd5b806340abd8fc116102bc578063529668321161025a5780635c63fa87116102345780635c63fa87146105a9578063668ababb146105bc5780636b8eb2e5146105cf5780636c78d49c146105e257600080fd5b8063529668321461058457806353f73f871461058d5780635527a6f9146105a057600080fd5b80634b0e7216116102965780634b0e7216146105425780634cfea68a146105555780635051d3711461055e57806351eb05a61461057157600080fd5b806340abd8fc146104fe5780634780f9f51461052657806348cd4cb11461053957600080fd5b80632e31283d1161032957806339e80a881161030357806339e80a88146104c65780633b710688146104d95780633b9ce565146104e25780633bbc1ffc146104eb57600080fd5b80632e31283d1461043d578063332e5a7b146104a057806333cfcd3b146104b357600080fd5b80630aa0988e116103655780630aa0988e146103bf5780631526fe27146103d257806317caf6f1146104215780631b8fb6921461042a57600080fd5b8062aeef8a1461038b578063081e3eda146103a057806309b79b3c146103b7575b600080fd5b61039e6103993660046130c4565b610817565b005b60aa545b6040519081526020015b60405180910390f35b61039e6108b6565b61039e6103cd366004613105565b61091a565b6103e56103e036600461313e565b610975565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103ae565b6103a460a45481565b61039e610438366004613157565b6109c8565b61048861044b366004613222565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103ae565b60ae5461048890600160a060020a031681565b6103a46104c1366004613280565b610a9b565b60af5461048890600160a060020a031681565b6103a460a35481565b6103a460a15481565b61039e6104f936600461313e565b610b38565b61051161050c3660046132b9565b610b97565b604080519283526020830191909152016103ae565b61039e610534366004613339565b610c32565b6103a4609c5481565b61039e61055036600461336b565b610cc4565b6103a4609d5481565b61039e61056c36600461336b565b610d13565b6103a461057f36600461313e565b610d62565b6103a460a55481565b6103a461059b366004613157565b610f55565b6103a460a05481565b61039e6105b7366004613388565b610f7f565b60995461048890600160a060020a031681565b61039e6105dd3660046133b6565b610fd6565b61039e6105f03660046133f1565b6110a6565b609b5461048890600160a060020a031681565b61039e611113565b6103a461061e36600461340e565b61114c565b61039e610631366004613339565b6111c6565b60ad5461048890600160a060020a031681565b60975461048890600160a060020a031681565b603354600160a060020a0316610488565b60ae546106929074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103ae565b61039e6106b036600461313e565b61133c565b6103a460a75481565b6103a460a25481565b61039e611482565b61039e6106dd36600461336b565b611500565b609a5461048890600160a060020a031681565b61070861070336600461344d565b61154f565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103ae565b60985461048890600160a060020a031681565b6103a460a65481565b61039e61075f366004613485565b6115b0565b6103a4609e5481565b61039e61077b36600461336b565b611657565b61039e61078e3660046134a7565b6116a6565b6103a4609f5481565b61039e6107aa3660046134d3565b61176e565b61039e6107bd366004613551565b611803565b6103a460a85481565b61039e6107d936600461336b565b61187c565b61039e6107ec36600461313e565b611934565b61039e6107ff366004613105565b6119b9565b60a95461048890600160a060020a031681565b600260655414156108465760405160e560020a62461bcd02815260040161083d906135de565b60405180910390fd5b6002606581905550600060aa848154811061086357610863613615565b60009182526020909120600690910201805490915061088d90600160a060020a0316333086611a41565b6108aa843360405180602001604052806000815250868642611af8565b50506001606555505050565b60ad54600160a060020a031633600160a060020a0316146108ec5760405160e560020a62461bcd02815260040161083d9061362e565b60a85460a75414156109135760405160e560020a62461bcd02815260040161083d90613665565b600060a555565b603354600160a060020a031633146109475760405160e560020a62461bcd02815260040161083d9061369c565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa818154811061098557600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60af54600160a060020a031633600160a060020a0316146109fe5760405160e560020a62461bcd02815260040161083d906136d1565b60a85460a7541415610a1857610a148282611e2c565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050505050565b600060026065541415610ac35760405160e560020a62461bcd02815260040161083d906135de565b60026065819055506000610aeb85336040518060200160405280600081525087876000611e4a565b9050610b2a33826000015160aa8881548110610b0957610b09613615565b6000918252602090912060069091020154600160a060020a03169190612574565b516001606555949350505050565b603354600160a060020a03163314610b655760405160e560020a62461bcd02815260040161083d9061369c565b60a954600160a060020a03163014610b925760405160e560020a62461bcd02815260040161083d90613708565b609f55565b60af546000908190600160a060020a031633600160a060020a031614610bd25760405160e560020a62461bcd02815260040161083d906136d1565b610be288888888888860016125c2565b90925090508115610c0457609854610c0490600160a060020a03163384612574565b8015610c2757609b54609754610c2791600160a060020a03918216911683612574565b965096945050505050565b60026065541415610c585760405160e560020a62461bcd02815260040161083d906135de565b6002606581905550600060aa8581548110610c7557610c75613615565b6000918252602090912060056006909202010154609854600160a060020a039182169250610ca69116338387611a41565b6108aa853360405180602001604052806000815250878742886126ea565b603354600160a060020a03163314610cf15760405160e560020a62461bcd02815260040161083d9061369c565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610d405760405160e560020a62461bcd02815260040161083d9061369c565b60ad8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610d7857610d78613615565b9060005260206000209060060201905080600201544311610d9c5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e25919061373f565b905080610e3c575043600290910155506000919050565b6000826002015443610e4e9190613771565b9050600060a4548460010154609e5484610e689190613788565b610e729190613788565b610e7c91906137a7565b60a954909150600160a060020a0316301415610ea557610e9c8130611e2c565b60009450610f2e565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b50505050809450610f2e856127d6565b808460030154610f3e91906137cc565b600385015550504360029092019190915550919050565b600082815260ab60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610fac5760405160e560020a62461bcd02815260040161083d9061369c565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a03161461100c5760405160e560020a62461bcd02815260040161083d9061362e565b600061101a83612710613788565b848660a3546110299190613788565b6110339190613788565b61103d91906137a7565b905060a154811115611052575060a154611061565b60a054811015611061575060a0545b609d5461107087612710613788565b61107a9190613788565b60a2546110878385613788565b6110919190613788565b61109b91906137a7565b609e55505050505050565b603354600160a060020a031633146110d35760405160e560020a62461bcd02815260040161083d9061369c565b60ae8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a031633146111405760405160e560020a62461bcd02815260040161083d9061369c565b61114a6000612811565b565b6000600260655414156111745760405160e560020a62461bcd02815260040161083d906135de565b6002606581905550600061119d33604051806020016040528060008152508888888860006125c2565b506098549091506111b890600160a060020a03163383612574565b600160655595945050505050565b600260655414156111ec5760405160e560020a62461bcd02815260040161083d906135de565b6002606555600084815260ab60209081526040808320338452909152812080548590811061121c5761121c613615565b600091825260208083206003600690930201919091015487835260ab825260408084203385529092529082208054919350908690811061125e5761125e613615565b906000526020600020906006020160040154905060006112943360405180602001604052806000815250898960008960006125c2565b5090506112d760aa86815481106112ad576112ad613615565b6000918252602090912060056006909202010154609854600160a060020a03908116911683612574565b6112f58533604051806020016040528060008152508487878a6126ea565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b600260655414156113625760405160e560020a62461bcd02815260040161083d906135de565b600260655560006113738233610f55565b905060005b818110156113af5761139e83336040518060200160405280600081525084600080611e4a565b506113a8816137e4565b9050611378565b50600060aa83815481106113c5576113c5613615565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611434573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611458919061373f565b9050801561147857611478338260aa8681548110610b0957610b09613615565b5050600160655550565b60ad54600160a060020a031633600160a060020a0316146114b85760405160e560020a62461bcd02815260040161083d9061362e565b60a85460a75414156114df5760405160e560020a62461bcd02815260040161083d90613665565b609b5460a65460975461091392600160a060020a0391821692911690612574565b603354600160a060020a0316331461152d5760405160e560020a62461bcd02815260040161083d9061369c565b60ae8054600160a060020a031916600160a060020a0392909216919091179055565b60ab602052826000526040600020602052816000526040600020818154811061157757600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ad54600160a060020a031633600160a060020a0316146115e65760405160e560020a62461bcd02815260040161083d9061362e565b60a954600160a060020a031630146116135760405160e560020a62461bcd02815260040161083d90613708565b609b5461164090600160a060020a031661162d8385613771565b609754600160a060020a03169190612574565b609a54610a14908290600160a060020a0316611e2c565b603354600160a060020a031633146116845760405160e560020a62461bcd02815260040161083d9061369c565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116d35760405160e560020a62461bcd02815260040161083d9061369c565b609754600160a060020a038381169116141561175a5760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161083d565b610a14600160a060020a0383163383612574565b60af54600160a060020a031633600160a060020a0316146117a45760405160e560020a62461bcd02815260040161083d906136d1565b600060aa88815481106117b9576117b9613615565b6000918252602090912060056006909202010154609854600160a060020a0391821692506117ea9116338388611a41565b6117f9888888888888886126ea565b5050505050505050565b603354600160a060020a031633146118305760405160e560020a62461bcd02815260040161083d9061369c565b609d859055838360008161184657611846613615565b602002919091013560a055508383600181811061186557611865613615565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146118a95760405160e560020a62461bcd02815260040161083d9061369c565b600160a060020a0381166119285760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161083d565b61193181612811565b50565b603354600160a060020a031633146119615760405160e560020a62461bcd02815260040161083d9061369c565b609c54156119b45760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161083d565b609c55565b603354600160a060020a031633146119e65760405160e560020a62461bcd02815260040161083d9061369c565b60a954600160a060020a03163014611a135760405160e560020a62461bcd02815260040161083d90613708565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611af29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612863565b50505050565b60008060aa8881548110611b0e57611b0e613615565b9060005260206000209060060201905060008511611b715760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161083d565b611b7a88610d62565b91506000611b88888861294b565b60058301548354919250611ba991600160a060020a039081169116886129f4565b600060aa8a81548110611bbe57611bbe613615565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c57919061373f565b60ae546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d05919061373f565b60ae546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d98919061373f565b905080856004016000828254611dae91906137cc565b90915550611dc390508c858c84868d8d612ad8565b8b8a604051611dd2919061382b565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611e1591815260200190565b60405180910390a450505050509695505050505050565b609954609754610a1491600160a060020a0391821691168385611a41565b6040805180820190915260008082526020820152600160a060020a038616158015611e76575060008551115b80611e935750600160a060020a03861615801590611e9357508451155b611ee25760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161083d565b6000611ef08886888a612c93565b9050600060aa8981548110611f0757611f07613615565b906000526020600020906006020190506000826000015111611f6e5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161083d565b6000816004015411611fc55760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161083d565b60a08201511561201a5760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161083d565b61202389610d62565b50600082604001518260040154836003015485600001516120449190613788565b61204e91906137a7565b6120589190613771565b905080156121ba5760ae54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa1580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121239190613847565b915091508615612170576020860182905260a85460a754141561216157801561215c57609a5461215c90600160a060020a031682612e36565b6121b7565b801561215c5761215c81612ee5565b8115612180576121808b83612e36565b60a85460a75414156121a857801561215c57609a5461215c90600160a060020a031682612e36565b80156121b7576121b781612ee5565b50505b856125675760006121cb8a8a61294b565b9050600060aa8c815481106121e2576121e2613615565b906000526020600020906006020160050160009054906101000a9004600160a060020a031690506000819050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015612251573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612275919061373f565b87602001516122849190613788565b82600160a060020a031663677379e56040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156122c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e9919061386b565b6040517ff55850b4000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152919091169063f55850b490602401602060405180830381865afa15801561234a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236e919061373f565b885161237f9064e8d4a51000613788565b6123899190613788565b61239391906137a7565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af11580156123f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241a919061373f565b5050855160048601546124309350909150613771565b60048481019190915583546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa158015612499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bd919061373f565b855260008b815260ab60209081526040808320600160a060020a0385168452909152902080544291908a9081106124f6576124f6613615565b90600052602060002090600602016005018190555050898860405161251b919061382b565b6040805191829003822087518b8452602084015291600160a060020a038d16917fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d9910160405180910390a45b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526125bd9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a8e565b505050565b600080600060aa88815481106125da576125da613615565b60009182526020822060056006909202010154600160a060020a03169150612606898c8c8b8b8a611e4a565b905061264582826000015160aa8c8154811061262457612624613615565b6000918252602090912060069091020154600160a060020a031691906129f4565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156126af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d3919061373f565b935080602001519250505097509795505050505050565b600060aa88815481106126ff576126ff613615565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af115801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a2919061373f565b90506127bc828260aa8c8154811061262457612624613615565b6127ca898989848989611af8565b50505050505050505050565b60a85460a75414156127fd5760405160e560020a62461bcd02815260040161083d90613665565b8060a55461280b91906137cc565b60a55550565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006128b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612f209092919063ffffffff16565b8051909150156125bd57808060200190518101906128d69190613888565b6125bd5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161083d565b81600160a060020a038116610f795760008251116129d45760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161083d565b6129dd826138a5565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a82919061373f565b612a8c91906137cc565b604051600160a060020a038516602482015260448101829052909150611af29085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611a8e565b600060aa8881548110612aed57612aed613615565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612b76908a90613788565b612b8091906137a7565b815260208082018790526040808301879052600060609384018190528d815260ab8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612c88578760ac60008b815260200190815260200160002088604051612c2f919061382b565b908152602001604051809103902060006001612c4b8d8d610f55565b612c559190613771565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612ccc6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612d6b57600085815260ab60209081526040808320600160a060020a03861684529091529020805485908110612d0f57612d0f613615565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612e2e565b600085815260ac60205260408082209051612d8790869061382b565b908152604080516020928190038301902060008881529083528181205489825260ab8452828220600160a060020a0390911680835293522080549192509086908110612dd557612dd5613615565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ec0919061373f565b905080831115612ece578091505b609754611af290600160a060020a03168584612574565b60a85460a7541415612f0c5760405160e560020a62461bcd02815260040161083d90613665565b8060a654612f1a91906137cc565b60a65550565b6060612f2f8484600085612f39565b90505b9392505050565b60603031831115612fb55760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161083d565b600160a060020a0385163b61300f5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161083d565b60008086600160a060020a0316858760405161302b919061382b565b60006040518083038185875af1925050503d8060008114613068576040519150601f19603f3d011682016040523d82523d6000602084013e61306d565b606091505b509150915061307d828286613088565b979650505050505050565b60608315613097575081612f32565b8251156130a75782518084602001fd5b8160405160e560020a62461bcd02815260040161083d91906138e4565b6000806000606084860312156130d957600080fd5b505081359360208301359350604090920135919050565b600160a060020a038116811461193157600080fd5b6000806040838503121561311857600080fd5b8235613123816130f0565b91506020830135613133816130f0565b809150509250929050565b60006020828403121561315057600080fd5b5035919050565b6000806040838503121561316a57600080fd5b823591506020830135613133816130f0565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126131a657600080fd5b813567ffffffffffffffff808211156131c1576131c161317c565b604051601f8301601f19908116603f011681019082821181831017156131e9576131e961317c565b8160405283815286602085880101111561320257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561323757600080fd5b83359250602084013567ffffffffffffffff81111561325557600080fd5b61326186828701613195565b925050604084013590509250925092565b801515811461193157600080fd5b60008060006060848603121561329557600080fd5b833592506020840135915060408401356132ae81613272565b809150509250925092565b60008060008060008060c087890312156132d257600080fd5b86356132dd816130f0565b9550602087013567ffffffffffffffff8111156132f957600080fd5b61330589828a01613195565b9550506040870135935060608701359250608087013561332481613272565b8092505060a087013590509295509295509295565b6000806000806080858703121561334f57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561337d57600080fd5b8135612f32816130f0565b60008060006060848603121561339d57600080fd5b833592506020840135915060408401356132ae816130f0565b600080600080600060a086880312156133ce57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561340357600080fd5b8135612f3281613272565b6000806000806080858703121561342457600080fd5b8435935060208501359250604085013561343d81613272565b9396929550929360600135925050565b60008060006060848603121561346257600080fd5b833592506020840135613474816130f0565b929592945050506040919091013590565b6000806040838503121561349857600080fd5b50508035926020909101359150565b600080604083850312156134ba57600080fd5b82356134c5816130f0565b946020939093013593505050565b600080600080600080600060e0888a0312156134ee57600080fd5b873596506020880135613500816130f0565b9550604088013567ffffffffffffffff81111561351c57600080fd5b6135288a828b01613195565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561356957600080fd5b85359450602086013567ffffffffffffffff8082111561358857600080fd5b818801915088601f83011261359c57600080fd5b8135818111156135ab57600080fd5b89602080830285010111156135bf57600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b60006020828403121561375157600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561378357613783613758565b500390565b60008160001904831182151516156137a2576137a2613758565b500290565b6000826137c75760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156137df576137df613758565b500190565b60006000198214156137f8576137f8613758565b5060010190565b60005b8381101561381a578181015183820152602001613802565b83811115611af25750506000910152565b6000825161383d8184602087016137ff565b9190910192915050565b6000806040838503121561385a57600080fd5b505080516020909101519092909150565b60006020828403121561387d57600080fd5b8151612f32816130f0565b60006020828403121561389a57600080fd5b8151612f3281613272565b805160208201516bffffffffffffffffffffffff1980821692919060148310156138dc57808360140360080260020a820283161693505b505050919050565b60208152600082518060208401526139038160408501602087016137ff565b601f01601f1916919091016040019291505056fea26469706673582212208ccfb0e2381e117d16b4ff58d3107e8d5cc630d595346f646c67ba20ce810c4364736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22963:137",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:137",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:137",
                "type": ""
              }
            ],
            "src": "14:316:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:76:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "446:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "454:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "446:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "488:9:137"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "499:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:25:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "481:25:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "405:9:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "416:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "427:4:137",
                "type": ""
              }
            ],
            "src": "335:177:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "562:109:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "649:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "658:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "661:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "651:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "651:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "651:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "585:5:137"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "596:5:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "603:42:137",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "592:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "592:54:137"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "582:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:65:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:73:137"
                  },
                  "nodeType": "YulIf",
                  "src": "572:93:137"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "551:5:137",
                "type": ""
              }
            ],
            "src": "517:154:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:301:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "784:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "773:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "834:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "860:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "847:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "838:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "904:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "879:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "879:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "919:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "929:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "919:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "943:47:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "975:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "986:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "971:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "958:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:32:137"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "947:7:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1024:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:33:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "999:33:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1041:17:137",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1051:7:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1041:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "721:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "732:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "744:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "752:6:137",
                "type": ""
              }
            ],
            "src": "676:388:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1139:110:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1185:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1194:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1197:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1187:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1187:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1187:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1160:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1169:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1156:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1156:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "1149:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1210:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1220:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1105:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1116:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:137",
                "type": ""
              }
            ],
            "src": "1069:180:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1521:373:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1531:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1543:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1554:3:137",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1539:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1531:4:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1567:52:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1577:42:137",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1571:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1635:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1650:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1658:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1646:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:18:137"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1741:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1768:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1779:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1764:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:18:137"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1784:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1757:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1757:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1811:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1822:3:137",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1807:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1807:19:137"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1828:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:35:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1800:35:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1855:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1866:3:137",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:19:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1876:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1884:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1844:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:44:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1844:44:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1450:9:137",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1461:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1469:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1477:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1485:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1493:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1501:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1512:4:137",
                "type": ""
              }
            ],
            "src": "1254:640:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:228:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2032:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2041:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2044:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2034:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2034:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2034:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2007:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2016:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1999:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "1996:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2080:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2067:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2099:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2129:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2140:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2125:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2112:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2103:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2178:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2153:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2193:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2203:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2193:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1944:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1955:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1967:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1975:6:137",
                "type": ""
              }
            ],
            "src": "1899:315:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2251:152:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2268:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2271:77:137",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:88:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2261:88:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:1:137",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2368:4:137",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2358:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2358:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2358:15:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2392:4:137",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2382:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2382:15:137"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2219:184:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2460:666:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2509:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2518:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2521:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2511:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2511:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2511:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2488:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2496:4:137",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2484:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2484:17:137"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2503:3:137"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2480:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2480:27:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2473:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:35:137"
                  },
                  "nodeType": "YulIf",
                  "src": "2470:55:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2534:30:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2557:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2544:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:20:137"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2538:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2573:28:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2583:18:137",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2577:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2624:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2626:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2616:2:137"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2620:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2613:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:10:137"
                  },
                  "nodeType": "YulIf",
                  "src": "2610:36:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2655:17:137",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2669:2:137",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2665:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2665:7:137"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2659:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2681:23:137",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2701:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2695:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:9:137"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2685:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2713:71:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2735:6:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2759:2:137"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2763:4:137",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2755:3:137"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2755:13:137"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2770:2:137"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2751:3:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2751:22:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2775:2:137",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:31:137"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2780:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2743:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2743:40:137"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2731:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2731:53:137"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2717:10:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2843:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2845:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2845:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2845:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2802:10:137"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2814:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2799:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:18:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2822:10:137"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2834:6:137"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2819:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2819:22:137"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2796:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2796:46:137"
                  },
                  "nodeType": "YulIf",
                  "src": "2793:72:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2881:2:137",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2885:10:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2874:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:22:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2874:22:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2912:6:137"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2920:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:18:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2905:18:137"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2971:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2980:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2983:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2973:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2973:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2973:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2946:6:137"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2954:2:137"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2942:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2942:15:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2959:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2938:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:26:137"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2966:3:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2935:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:35:137"
                  },
                  "nodeType": "YulIf",
                  "src": "2932:55:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3013:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3021:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3009:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3009:17:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3032:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3040:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3028:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3028:17:137"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3047:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2996:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2996:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2996:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3074:6:137"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3082:2:137"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3070:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3070:15:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3087:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3066:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3066:26:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:1:137",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3059:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:37:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3059:37:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3105:15:137",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3114:6:137"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3105:5:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2434:6:137",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2442:3:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2450:5:137",
                "type": ""
              }
            ],
            "src": "2408:718:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3244:343:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3290:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3299:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3302:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3292:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3292:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3292:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3265:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3274:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3286:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3257:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3257:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "3254:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3315:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3338:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3325:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3315:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3357:46:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3371:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:32:137"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3361:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3446:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3455:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3458:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3448:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3448:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3448:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3418:6:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3426:18:137",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3415:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3415:30:137"
                  },
                  "nodeType": "YulIf",
                  "src": "3412:50:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3471:59:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3502:9:137"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3513:6:137"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3498:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3498:22:137"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3522:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3481:16:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3481:49:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3539:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3566:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3577:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3562:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3562:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3549:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3539:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3194:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3205:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3217:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3225:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3233:6:137",
                "type": ""
              }
            ],
            "src": "3131:456:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3693:125:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3703:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3715:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3726:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3711:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3703:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3745:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3760:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3768:42:137",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3756:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3756:55:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:74:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:74:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3662:9:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3673:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3684:4:137",
                "type": ""
              }
            ],
            "src": "3592:226:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3865:76:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3919:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3928:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3931:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3921:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3921:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3921:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3888:5:137"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3909:5:137"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3902:6:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3902:13:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3895:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3895:21:137"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3885:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:32:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3878:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:40:137"
                  },
                  "nodeType": "YulIf",
                  "src": "3875:60:137"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3854:5:137",
                "type": ""
              }
            ],
            "src": "3823:118:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4047:276:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4093:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4102:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4105:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4095:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4095:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4095:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4068:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4077:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4064:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4064:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4089:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4060:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4060:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "4057:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4118:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4141:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4128:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4118:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4160:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4187:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4198:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4170:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4160:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4211:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4241:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4252:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4237:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4224:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4215:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4287:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4265:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:28:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4265:28:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4302:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4312:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4302:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3997:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4008:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4020:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4028:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4036:6:137",
                "type": ""
              }
            ],
            "src": "3946:377:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4489:636:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4536:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4545:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4548:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4538:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4538:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4538:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4510:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4519:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4506:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4506:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:3:137",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4502:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4502:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "4499:53:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4561:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4587:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4574:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4574:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4565:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4631:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4606:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4606:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4606:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4646:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4656:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4646:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4670:46:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4701:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4712:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4697:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4697:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4684:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:32:137"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4674:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4759:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4768:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4771:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4761:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4761:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4761:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4731:6:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4739:18:137",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4728:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4728:30:137"
                  },
                  "nodeType": "YulIf",
                  "src": "4725:50:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4784:59:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4815:9:137"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4826:6:137"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4811:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4811:22:137"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4835:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4794:16:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4794:49:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4784:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4852:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4875:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4875:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4862:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4862:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4852:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4903:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4930:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4941:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4926:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4926:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4913:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4903:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4954:48:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4997:3:137",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4982:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4969:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:33:137"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4958:7:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5033:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5011:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5011:30:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5050:17:137",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "5060:7:137"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5050:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5076:43:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5103:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5114:3:137",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5099:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5099:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5086:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5086:33:137"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5076:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4415:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4426:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4438:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4446:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4454:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4462:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4470:6:137",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4478:6:137",
                "type": ""
              }
            ],
            "src": "4328:797:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5259:119:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5269:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5281:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5292:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5277:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5269:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5311:9:137"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5322:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5304:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5304:25:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5304:25:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5349:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5360:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5345:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5345:18:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5365:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5338:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:34:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5220:9:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5231:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5239:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5250:4:137",
                "type": ""
              }
            ],
            "src": "5130:248:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5504:264:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5551:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5560:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5563:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5553:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5553:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5553:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5525:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5534:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5521:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5521:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5546:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5517:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5517:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "5514:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5576:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5599:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5586:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5576:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5618:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5645:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5656:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5641:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5641:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5628:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5628:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5618:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5669:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5696:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5707:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5692:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5692:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5679:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5669:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5720:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5747:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5758:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5743:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5743:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5730:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5730:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5720:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5446:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5457:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5469:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5477:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5485:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5493:6:137",
                "type": ""
              }
            ],
            "src": "5383:385:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5843:177:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5889:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5898:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5901:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5891:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5891:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5891:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5864:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5873:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5860:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5860:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5885:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5856:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "5853:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5914:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5940:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5927:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5927:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5918:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5984:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5959:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5959:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5959:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5999:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6009:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5999:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5809:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5820:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5832:6:137",
                "type": ""
              }
            ],
            "src": "5773:247:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6129:279:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6175:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6184:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6187:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6177:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6177:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6177:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6150:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6159:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6146:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6146:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6171:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6142:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "6139:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6200:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6223:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6210:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6210:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6200:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6242:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6269:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6280:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6265:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6265:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6252:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6252:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6242:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6293:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6323:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6334:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6319:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6319:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6306:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6306:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6297:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6372:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6347:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6387:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6397:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6387:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6079:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6090:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6102:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6110:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6118:6:137",
                "type": ""
              }
            ],
            "src": "6025:383:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:316:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6598:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6607:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6610:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6600:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6600:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6600:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6572:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6581:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6568:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6568:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:3:137",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6564:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6564:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "6561:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6623:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6646:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6633:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6623:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6665:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6692:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6703:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6688:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6688:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6675:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6675:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6665:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6716:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6743:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6754:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6739:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6739:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6726:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6726:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6716:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6767:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6794:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6805:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6790:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6790:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6777:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6767:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6818:43:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6845:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6856:3:137",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6841:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6841:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6828:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6828:33:137"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6818:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6485:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6496:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6508:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6516:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6524:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6532:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6540:6:137",
                "type": ""
              }
            ],
            "src": "6413:454:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6939:174:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6985:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6994:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6997:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6987:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6987:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6987:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6960:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6969:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6956:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6956:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6981:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6952:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "6949:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7010:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7036:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7023:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7023:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7014:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7077:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7055:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7055:28:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7055:28:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7092:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7102:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7092:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6905:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6916:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6928:6:137",
                "type": ""
              }
            ],
            "src": "6872:241:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7236:328:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7283:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7292:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7295:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7285:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7285:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7285:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7257:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7266:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7253:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7253:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7278:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7249:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7249:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "7246:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7308:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7331:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7318:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7308:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7350:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7377:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7388:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7373:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7373:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7360:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7360:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7350:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7401:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7431:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7442:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7427:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7427:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7414:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7414:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7405:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7477:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7455:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7455:28:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7455:28:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7492:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7502:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7492:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7516:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7543:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7554:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7539:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7526:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7526:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7516:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7178:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7189:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7201:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7209:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7217:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7225:6:137",
                "type": ""
              }
            ],
            "src": "7118:446:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7664:92:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7674:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7686:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7682:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7674:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7716:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7741:6:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7734:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7734:14:137"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7727:6:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:22:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:41:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:41:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7633:9:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7644:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7655:4:137",
                "type": ""
              }
            ],
            "src": "7569:187:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7865:279:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7911:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7920:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7923:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7913:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7913:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7913:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7886:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7895:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7882:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7882:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7907:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7878:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "7875:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7936:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7959:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7946:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7936:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7978:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8008:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8019:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8004:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8004:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7991:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7982:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8057:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8032:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8032:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8072:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8082:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8072:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8096:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8123:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8134:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8119:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8119:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8106:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8106:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7815:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7826:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7838:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7846:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7854:6:137",
                "type": ""
              }
            ],
            "src": "7761:383:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:294:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8400:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:3:137",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8400:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8443:9:137"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8454:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8436:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:25:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8436:25:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8481:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8492:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8477:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8477:18:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8497:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8470:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8470:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8470:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8524:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8535:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8520:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8520:18:137"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8540:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8513:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8513:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8513:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8567:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8578:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8563:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8563:18:137"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8583:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8556:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8610:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8621:3:137",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8606:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8606:19:137"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8627:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8599:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:35:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8599:35:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8654:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8665:3:137",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8650:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8650:19:137"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8671:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8643:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8643:35:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8643:35:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8319:9:137",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8330:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8338:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8346:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8354:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8362:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8370:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8381:4:137",
                "type": ""
              }
            ],
            "src": "8149:535:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8776:161:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8822:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8831:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8834:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8824:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8824:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8824:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8797:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8806:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8793:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8793:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8818:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8789:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8789:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "8786:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8847:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8870:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8857:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8847:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8889:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8916:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8927:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8912:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8912:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8899:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8889:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8734:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8745:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8757:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8765:6:137",
                "type": ""
              }
            ],
            "src": "8689:248:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9029:228:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9075:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9084:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9087:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9077:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9077:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9077:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9050:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9059:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9046:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9046:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9071:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9042:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "9039:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9100:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9126:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9113:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9104:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9170:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9145:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9145:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9145:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9185:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9195:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9185:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9209:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9236:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9247:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9219:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9219:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9209:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8987:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8998:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9010:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9018:6:137",
                "type": ""
              }
            ],
            "src": "8942:315:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9443:618:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9490:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9499:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9502:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9492:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9492:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9492:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9464:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9485:3:137",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9456:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9456:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "9453:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9515:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9538:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9525:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9515:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9557:45:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9587:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9598:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9583:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9583:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9570:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9570:32:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9561:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9636:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9611:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9611:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9611:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9651:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9661:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9651:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9675:46:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9706:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9717:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9702:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9702:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9689:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9689:32:137"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9679:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9764:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9773:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9776:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9766:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9766:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9766:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9736:6:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9744:18:137",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9733:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9733:30:137"
                  },
                  "nodeType": "YulIf",
                  "src": "9730:50:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9789:59:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9820:9:137"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9831:6:137"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9816:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9816:22:137"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9840:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9799:16:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:49:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9789:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9857:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9884:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9895:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9880:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9880:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9867:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9867:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9857:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9908:43:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9935:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9946:3:137",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9931:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9931:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9918:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:33:137"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9908:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9960:43:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9987:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9998:3:137",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9970:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:33:137"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9960:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:43:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10039:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10050:3:137",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10035:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10035:19:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10022:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:33:137"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9361:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9372:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9384:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9392:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9400:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9408:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9416:6:137",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9424:6:137",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9432:6:137",
                "type": ""
              }
            ],
            "src": "9262:799:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10222:665:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10269:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10278:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10281:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10271:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10271:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10271:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10243:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10252:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10239:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10239:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10264:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10235:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10235:33:137"
                  },
                  "nodeType": "YulIf",
                  "src": "10232:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10294:33:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10317:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10304:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10304:23:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10294:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10336:46:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10367:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10378:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10363:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10363:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10350:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10350:32:137"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "10340:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10391:28:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10401:18:137",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10395:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10446:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10455:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10458:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10448:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10448:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10448:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10434:6:137"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10442:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10431:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10431:14:137"
                  },
                  "nodeType": "YulIf",
                  "src": "10428:34:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10471:32:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10485:9:137"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10496:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10481:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10481:22:137"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "10475:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10551:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10560:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10563:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10553:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10553:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10553:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10530:2:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10534:4:137",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10526:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10526:13:137"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10541:7:137"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10522:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10522:27:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10515:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10515:35:137"
                  },
                  "nodeType": "YulIf",
                  "src": "10512:55:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10576:30:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10603:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10590:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10590:16:137"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10580:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10633:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10642:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10645:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10635:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10635:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10635:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10621:6:137"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10629:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10618:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:14:137"
                  },
                  "nodeType": "YulIf",
                  "src": "10615:34:137"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10708:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10717:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10720:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10710:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10710:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10710:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10672:2:137"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10680:6:137"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10688:2:137",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10676:3:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10676:15:137"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10668:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10668:24:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10694:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10664:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10664:33:137"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10699:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10661:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10661:46:137"
                  },
                  "nodeType": "YulIf",
                  "src": "10658:66:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10733:21:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10747:2:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10751:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10743:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10743:11:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10763:16:137",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10773:6:137"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10788:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10815:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10826:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10811:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10811:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10798:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10798:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10788:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10839:42:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10866:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10877:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10862:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10862:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10849:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10849:32:137"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10839:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10156:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10167:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10179:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10187:6:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10195:6:137",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10203:6:137",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10211:6:137",
                "type": ""
              }
            ],
            "src": "10066:821:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:181:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11083:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11094:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11076:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11076:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11076:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11117:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11128:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11113:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11113:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:2:137",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11156:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11167:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11152:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11152:18:137"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11172:33:137",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11145:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11145:61:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11145:61:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11215:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11227:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11238:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11223:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11223:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11215:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11043:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11057:4:137",
                "type": ""
              }
            ],
            "src": "10892:355:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11284:152:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11301:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11304:77:137",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11294:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11294:88:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11294:88:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11398:1:137",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11401:4:137",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11391:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11391:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11391:15:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11422:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11425:4:137",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11415:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11415:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11415:15:137"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11252:184:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11615:167:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11632:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11643:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11625:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11625:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11625:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11666:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11677:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11662:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11662:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11682:2:137",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11655:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11655:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11655:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11705:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11716:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11701:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11701:18:137"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11721:19:137",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11694:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11694:47:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11694:47:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11750:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11762:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11773:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11758:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11758:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11750:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11592:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11606:4:137",
                "type": ""
              }
            ],
            "src": "11441:341:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11961:173:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11978:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11989:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11971:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11971:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11971:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12012:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12023:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12008:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12008:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12028:2:137",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12001:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12001:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12001:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12051:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12062:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12047:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12047:18:137"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12067:25:137",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12040:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:53:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12040:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12102:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12114:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12125:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12110:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12110:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12102:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11938:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11952:4:137",
                "type": ""
              }
            ],
            "src": "11787:347:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12313:182:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12330:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12341:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12323:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12323:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12323:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12364:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12375:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12360:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12360:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12380:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12353:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12353:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12353:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12403:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12414:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12399:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12399:18:137"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12419:34:137",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12392:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12392:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12392:62:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12463:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12475:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12486:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12471:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12471:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12463:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12290:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12304:4:137",
                "type": ""
              }
            ],
            "src": "12139:356:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12674:161:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12691:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12702:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12684:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12684:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12684:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12725:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12736:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12721:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12721:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12741:2:137",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12714:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12714:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12714:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12764:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12775:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12760:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12760:18:137"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12780:13:137",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12753:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12753:41:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12753:41:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12803:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12815:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12826:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12811:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12811:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12803:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12651:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12665:4:137",
                "type": ""
              }
            ],
            "src": "12500:335:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12969:168:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12979:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12991:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13002:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12987:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12979:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13021:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13036:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13044:42:137",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13032:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13032:55:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13014:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13014:74:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13014:74:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13108:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13119:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13104:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13104:18:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13124:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13097:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13097:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13097:34:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12930:9:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12941:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12949:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12960:4:137",
                "type": ""
              }
            ],
            "src": "12840:297:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13316:165:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13333:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13344:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13326:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13326:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13367:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13378:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13363:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13363:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13383:2:137",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13356:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13356:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13406:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13417:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13402:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13402:18:137"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13422:17:137",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13395:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13395:45:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13395:45:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13449:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13461:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13472:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13457:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13457:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13449:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13293:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13307:4:137",
                "type": ""
              }
            ],
            "src": "13142:339:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13567:103:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13613:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13622:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13625:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13615:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13615:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13615:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13588:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13597:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13584:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13584:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13609:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13580:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13580:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "13577:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13638:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13654:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13648:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13648:16:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13638:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13533:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13544:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13556:6:137",
                "type": ""
              }
            ],
            "src": "13486:184:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13707:152:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13724:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13727:77:137",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:88:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:88:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13821:1:137",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13824:4:137",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13814:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13814:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13814:15:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13845:1:137",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13848:4:137",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13838:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13838:15:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13838:15:137"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13675:184:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13913:76:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13935:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13937:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13937:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13937:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13929:1:137"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13932:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13926:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13926:8:137"
                  },
                  "nodeType": "YulIf",
                  "src": "13923:34:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13966:17:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13978:1:137"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13981:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13974:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13974:9:137"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13966:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13895:1:137",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13898:1:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13904:4:137",
                "type": ""
              }
            ],
            "src": "13864:125:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14046:116:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14105:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14107:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14107:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14107:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14077:1:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14070:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14070:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14063:6:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14063:17:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14085:1:137"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14096:1:137",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14092:3:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14092:6:137"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14100:1:137"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14088:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14088:14:137"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14082:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14082:21:137"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14059:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14059:45:137"
                  },
                  "nodeType": "YulIf",
                  "src": "14056:71:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14136:20:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14151:1:137"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14154:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14147:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14147:9:137"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14136:7:137"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14025:1:137",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14028:1:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14034:7:137",
                "type": ""
              }
            ],
            "src": "13994:168:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14213:228:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14244:168:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14265:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14268:77:137",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14258:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14258:88:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14258:88:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14366:1:137",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14369:4:137",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14359:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14359:15:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14359:15:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14394:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14397:4:137",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14387:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14387:15:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14387:15:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14233:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14226:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14226:9:137"
                  },
                  "nodeType": "YulIf",
                  "src": "14223:189:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14421:14:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14430:1:137"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14433:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14426:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14426:9:137"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14421:1:137"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14198:1:137",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14201:1:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14207:1:137",
                "type": ""
              }
            ],
            "src": "14167:274:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14494:80:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14521:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14523:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14523:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14523:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14510:1:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14517:1:137"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14513:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14513:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14507:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14507:13:137"
                  },
                  "nodeType": "YulIf",
                  "src": "14504:39:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14552:16:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14563:1:137"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14566:1:137"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14559:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14559:9:137"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14552:3:137"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14477:1:137",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14480:1:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14486:3:137",
                "type": ""
              }
            ],
            "src": "14446:128:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14626:88:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14657:22:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14659:16:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14659:18:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14659:18:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14642:5:137"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:1:137",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14649:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14649:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14639:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14639:17:137"
                  },
                  "nodeType": "YulIf",
                  "src": "14636:43:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14688:20:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14699:5:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14706:1:137",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14695:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:13:137"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14688:3:137"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14608:5:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14618:3:137",
                "type": ""
              }
            ],
            "src": "14579:135:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14893:243:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14910:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14921:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14903:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14903:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14903:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14944:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14955:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14940:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14940:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14960:2:137",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14933:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14933:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14933:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14983:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14994:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14979:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14979:18:137"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14999:34:137",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14972:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14972:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14972:62:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15054:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15065:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15050:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15050:18:137"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15070:23:137",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15043:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15043:51:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15043:51:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15103:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15115:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15126:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15111:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15111:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15103:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14870:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14884:4:137",
                "type": ""
              }
            ],
            "src": "14719:417:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15315:228:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15332:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15343:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15325:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15325:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15325:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15366:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15377:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15362:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15362:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15382:2:137",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15355:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15355:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15355:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15405:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15416:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15401:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15401:18:137"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15421:34:137",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15394:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15394:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15394:62:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15476:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15487:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15472:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15472:18:137"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15492:8:137",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15465:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15465:36:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15465:36:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15510:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15522:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15533:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15518:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15518:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15510:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15292:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15306:4:137",
                "type": ""
              }
            ],
            "src": "15141:402:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15722:171:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15739:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15750:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15732:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15732:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15732:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15773:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15784:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15769:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15769:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15789:2:137",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15762:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15762:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15762:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15812:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15823:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15808:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15808:18:137"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15828:23:137",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15801:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15801:51:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15801:51:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15861:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15873:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15884:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15869:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15869:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15861:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15699:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15713:4:137",
                "type": ""
              }
            ],
            "src": "15548:345:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16055:241:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16065:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16077:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16088:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16073:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16073:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16065:4:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16100:52:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16110:42:137",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16104:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16168:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16183:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16191:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16179:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16179:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16161:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16161:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16161:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16215:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16226:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16211:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16211:18:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16235:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16243:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16231:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16231:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16204:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16204:43:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16204:43:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16267:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16278:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16263:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16263:18:137"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16283:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16256:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16256:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16256:34:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16008:9:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16019:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16027:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16035:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16046:4:137",
                "type": ""
              }
            ],
            "src": "15898:398:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16475:171:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16492:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16503:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16485:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16485:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16485:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16526:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16537:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16522:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16522:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16542:2:137",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16515:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16515:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16515:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16565:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16576:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16561:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16561:18:137"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16581:23:137",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16554:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16554:51:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16554:51:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16614:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16626:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16637:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16622:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16622:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16614:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16452:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16466:4:137",
                "type": ""
              }
            ],
            "src": "16301:345:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16774:135:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16784:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16796:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16807:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16792:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16792:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16784:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16826:9:137"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16837:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16819:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:25:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16819:25:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16864:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16860:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16860:18:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16894:6:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16887:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16887:14:137"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16880:6:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16880:22:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16853:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16853:50:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16853:50:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16735:9:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16746:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16754:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16765:4:137",
                "type": ""
              }
            ],
            "src": "16651:258:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16967:205:137",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16977:10:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16986:1:137",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16981:1:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17046:63:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17071:3:137"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17076:1:137"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17067:3:137"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17067:11:137"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "17090:3:137"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17095:1:137"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17086:3:137"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17086:11:137"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17080:5:137"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17080:18:137"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17060:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17060:39:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17060:39:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17007:1:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17010:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17004:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17004:13:137"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17018:19:137",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17020:15:137",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17029:1:137"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17032:2:137",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17025:3:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17025:10:137"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17020:1:137"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17000:3:137",
                    "statements": []
                  },
                  "src": "16996:113:137"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17135:31:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17148:3:137"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17153:6:137"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17144:3:137"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17144:16:137"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17162:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17137:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17137:27:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17137:27:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17124:1:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17127:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17121:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:13:137"
                  },
                  "nodeType": "YulIf",
                  "src": "17118:48:137"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16945:3:137",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16950:3:137",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16955:6:137",
                "type": ""
              }
            ],
            "src": "16914:258:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17314:137:137",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17324:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17344:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17338:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17338:13:137"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17328:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17386:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17394:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17382:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17382:17:137"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17401:3:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17406:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "17360:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17360:53:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17360:53:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17422:23:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17433:3:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17438:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17429:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17429:16:137"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17422:3:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17290:3:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17295:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17306:3:137",
                "type": ""
              }
            ],
            "src": "17177:274:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17630:179:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17647:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17658:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17640:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17640:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17640:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17681:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17692:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17677:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17677:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17697:2:137",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17670:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17670:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17670:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17720:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17731:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17716:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17716:18:137"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17736:31:137",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17709:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17709:59:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17709:59:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17777:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17789:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17800:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17785:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17785:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17777:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17607:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17621:4:137",
                "type": ""
              }
            ],
            "src": "17456:353:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17988:175:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18005:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18016:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17998:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17998:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17998:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18039:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18050:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18035:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18035:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18055:2:137",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18028:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18028:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18028:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18078:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18089:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18074:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18074:18:137"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18094:27:137",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18067:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18067:55:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18067:55:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18131:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18143:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18154:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18139:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18139:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18131:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17965:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17979:4:137",
                "type": ""
              }
            ],
            "src": "17814:349:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18342:180:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18359:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18370:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18352:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18352:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18352:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18393:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18404:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18389:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18389:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18409:2:137",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18382:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18382:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18382:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18432:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18443:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18428:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18428:18:137"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18448:32:137",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18421:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18421:60:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18421:60:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18490:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18502:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18513:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18498:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18498:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18490:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18319:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18333:4:137",
                "type": ""
              }
            ],
            "src": "18168:354:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18701:170:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18718:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18729:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18711:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18711:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18711:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18752:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18763:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18748:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18748:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18768:2:137",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18741:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18741:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18741:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18791:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18802:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18787:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18787:18:137"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18807:22:137",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18780:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18780:50:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18780:50:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18839:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18851:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18862:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18847:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18847:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18839:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18678:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18692:4:137",
                "type": ""
              }
            ],
            "src": "18527:344:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19065:443:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19075:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19087:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19098:3:137",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19083:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19083:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19075:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19118:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19135:6:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19129:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19129:13:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19111:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:32:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19111:32:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19163:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19174:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19159:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19159:20:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19191:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19199:4:137",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19187:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19187:17:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19181:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19181:24:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19152:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19152:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19152:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19226:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19237:4:137",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19222:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19222:20:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19254:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19262:4:137",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19250:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19250:17:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19244:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19244:24:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19215:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19215:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19215:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19289:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19300:4:137",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19285:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19285:20:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19317:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19325:4:137",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19313:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19313:17:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19307:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19307:24:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19278:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19278:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19278:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19352:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19363:4:137",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19348:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19348:20:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19380:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19388:4:137",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19376:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19376:17:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19370:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19370:24:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19341:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19341:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19341:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19415:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19426:4:137",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19411:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19411:20:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19443:6:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19451:4:137",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19439:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19439:17:137"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19433:5:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19433:24:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19404:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19404:54:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19404:54:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19478:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19489:3:137",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19474:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19474:19:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19495:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19467:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19467:35:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19467:35:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$13553_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13553_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19026:9:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19037:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19045:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19056:4:137",
                "type": ""
              }
            ],
            "src": "18876:632:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19611:147:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19657:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19666:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19669:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19659:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19659:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19659:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19632:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19641:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19628:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19628:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19653:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19624:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19624:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "19621:52:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19682:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19698:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19692:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19692:16:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19682:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19717:35:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19737:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19748:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19733:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19733:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19727:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19727:25:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19717:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19569:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19580:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19592:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19600:6:137",
                "type": ""
              }
            ],
            "src": "19513:245:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19844:170:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19890:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19899:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19902:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19892:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19892:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19892:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19865:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19874:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19861:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19861:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19886:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19857:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19857:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "19854:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19915:29:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19934:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19928:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19928:16:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19919:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19978:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "19953:24:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19953:31:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19953:31:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19993:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20003:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19993:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19810:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19821:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19833:6:137",
                "type": ""
              }
            ],
            "src": "19763:251:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20097:167:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20143:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20152:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20155:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20145:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20145:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20145:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20118:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20127:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20114:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20114:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20139:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20110:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20110:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "20107:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20168:29:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20187:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20181:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20181:16:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "20172:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20228:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "20206:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20206:28:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20206:28:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20243:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20253:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "20243:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20063:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20074:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20086:6:137",
                "type": ""
              }
            ],
            "src": "20019:245:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20443:232:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20460:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20471:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20453:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20453:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20453:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20494:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20505:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20490:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20490:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20510:2:137",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20483:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20483:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20483:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20533:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20544:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20529:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20529:18:137"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20549:34:137",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20522:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20522:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20522:62:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20604:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20615:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20600:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20600:18:137"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20620:12:137",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20593:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20593:40:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20593:40:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20642:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20654:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20665:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20650:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20650:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20642:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20420:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20434:4:137",
                "type": ""
              }
            ],
            "src": "20269:406:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20854:234:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20871:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20882:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20864:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20864:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20864:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20905:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20916:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20901:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20901:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20921:2:137",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20894:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20894:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20894:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20944:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20955:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20940:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20940:18:137"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20960:34:137",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20933:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20933:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20933:62:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21015:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21026:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21011:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21011:18:137"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21031:14:137",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21004:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21004:42:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21004:42:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21055:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21067:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21078:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21063:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21063:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21055:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20831:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20845:4:137",
                "type": ""
              }
            ],
            "src": "20680:408:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21187:289:137",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21197:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "21217:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21211:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21211:12:137"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21201:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21232:33:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "21252:5:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21259:4:137",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21248:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21248:16:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21242:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21242:23:137"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21236:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21274:41:137",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21288:26:137",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "21284:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21284:31:137"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21278:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21324:20:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "21337:2:137"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21341:2:137"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21333:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21333:11:137"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21324:5:137"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21379:91:137",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21393:67:137",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "21410:2:137"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "21418:2:137"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21426:1:137",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21433:1:137",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "21440:2:137",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21444:6:137"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "21436:3:137"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "21436:15:137"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "21429:3:137"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21429:23:137"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "21422:3:137"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21422:31:137"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "21414:3:137"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21414:40:137"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "21406:3:137"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21406:49:137"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "21457:2:137"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21402:3:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21402:58:137"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21393:5:137"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21359:6:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21367:2:137",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21356:2:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21356:14:137"
                  },
                  "nodeType": "YulIf",
                  "src": "21353:117:137"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "21167:5:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21177:5:137",
                "type": ""
              }
            ],
            "src": "21093:383:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21610:198:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21620:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21632:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21643:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21628:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21628:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21620:4:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21655:52:137",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21665:42:137",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21659:2:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21723:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21738:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21746:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21734:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21734:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21716:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21716:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21716:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21770:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21781:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21766:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21766:18:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21790:6:137"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21798:2:137"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21786:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21786:15:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21759:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21759:43:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21759:43:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21571:9:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21582:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21590:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21601:4:137",
                "type": ""
              }
            ],
            "src": "21481:327:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21987:228:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22004:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22015:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21997:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21997:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21997:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22038:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22049:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22034:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22034:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22054:2:137",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22027:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22027:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22027:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22077:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22088:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22073:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22073:18:137"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22093:34:137",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22066:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22066:62:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22066:62:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22148:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22159:2:137",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22144:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22144:18:137"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22164:8:137",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22137:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22137:36:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22137:36:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22182:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22194:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22205:3:137",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22190:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22190:19:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22182:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21964:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21978:4:137",
                "type": ""
              }
            ],
            "src": "21813:402:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22394:179:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22411:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22422:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22404:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22404:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22404:21:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22445:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22456:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22441:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22441:18:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22461:2:137",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22434:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22434:30:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22434:30:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22484:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22495:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22480:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22480:18:137"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22500:31:137",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22473:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22473:59:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22473:59:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22541:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22553:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22564:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22549:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22549:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22541:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22371:9:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22385:4:137",
                "type": ""
              }
            ],
            "src": "22220:353:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:262:137",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22716:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22727:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22709:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22709:21:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22709:21:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22739:27:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22759:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22753:5:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22753:13:137"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "22743:6:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22786:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22797:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22782:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22782:18:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22802:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22775:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22775:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22775:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22844:6:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22852:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22840:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22840:15:137"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22861:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22872:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22857:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22857:18:137"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22877:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22818:21:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22818:66:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22818:66:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22893:62:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22909:9:137"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22928:6:137"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22936:2:137",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22924:3:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22924:15:137"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22945:2:137",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22941:3:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22941:7:137"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22920:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22920:29:137"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22905:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22905:45:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22952:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22901:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22901:54:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22893:4:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22668:9:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22679:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22690:4:137",
                "type": ""
              }
            ],
            "src": "22578:383:137"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$13553_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13553_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 137,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "472:29520:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;7787:91:34;7856:8;:15;7787:91;;;481:25:137;;;469:2;454:18;7787:91:34;;;;;;;;14229:166;;;:::i;3957:187::-;;;;;;:::i;:::-;;:::i;3153:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1646:15:137;;;1628:34;;1693:2;1678:18;;1671:34;;;;1721:18;;1714:34;;;;1779:2;1764:18;;1757:34;;;;1822:3;1807:19;;1800:35;1872:15;;;1866:3;1851:19;;1844:44;1554:3;1539:19;3153:26:34;1254:640:137;2459:30:34;;;;;;28543:501:35;;;;;;:::i;:::-;;:::i;3571:99:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3571:99:34;;;;;;-1:-1:-1;;;;;3756:55:137;;;3738:74;;3726:2;3711:18;3571:99:34;3592:226:137;3746:32:34;;;;;-1:-1:-1;;;;;3746:32:34;;;12357:567:35;;;;;;:::i;:::-;;:::i;781:34::-;;;;;-1:-1:-1;;;;;781:34:35;;;2413:40:34;;;;;;2231:57;;;;;;6598:200;;;;;;:::i;:::-;;:::i;22783:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;5304:25:137;;;5360:2;5345:18;;5338:34;;;;5277:18;22783:1145:35;5130:248:137;8179:696:35;;;;;;:::i;:::-;;:::i;1871:25:34:-;;;;;;4246:108;;;;;;:::i;:::-;;:::i;1902:27::-;;;;;;7501:168;;;;;;:::i;:::-;;:::i;10820:2004::-;;;;;;:::i;:::-;;:::i;2595:36::-;;;;;;8075:165;;;;;;:::i;:::-;;:::i;2135:57::-;;;;;;7058:282;;;;;;:::i;:::-;;:::i;1642:25::-;;;;;-1:-1:-1;;;;;1642:25:34;;;8928:1669;;;;;;:::i;:::-;;:::i;1226:121:35:-;;;;;;:::i;:::-;;:::i;1791:26:34:-;;;;;-1:-1:-1;;;;;1791:26:34;;;1908:101:3;;;:::i;21403:639:35:-;;;;;;:::i;:::-;;:::i;26279:1209::-;;;;;;:::i;:::-;;:::i;3691:36:34:-;;;;;-1:-1:-1;;;;;3691:36:34;;;1533:20;;;;;-1:-1:-1;;;;;1533:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;680:34:35;;;;;;;;;;;;;;;7734:14:137;;7727:22;7709:41;;7697:2;7682:18;680:34:35;7569:187:137;27599:668:35;;;;;;:::i;:::-;;:::i;2816:22:34:-;;;;;;2328:30;;;;;;13356:334;;;:::i;5128:132::-;;;;;;:::i;:::-;;:::i;1705:32::-;;;;;-1:-1:-1;;;;;1705:32:34;;;3316:72;;;;;;:::i;:::-;;:::i;:::-;;;;8436:25:137;;;8492:2;8477:18;;8470:34;;;;8520:18;;;8513:34;;;;8578:2;8563:18;;8556:34;8621:3;8606:19;;8599:35;8665:3;8650:19;;8643:35;8423:3;8408:19;3316:72:34;8149:535:137;1559:32:34;;;;;-1:-1:-1;;;;;1559:32:34;;;2695:37;;;;;;29429:561:35;;;;;;:::i;:::-;;:::i;1967:28:34:-;;;;;;1452:118:35;;;;;;:::i;:::-;;:::i;15665:301:34:-;;;;;;:::i;:::-;;:::i;2039:42::-;;;;;;9556:826:35;;;;;;:::i;:::-;;:::i;5781:613:34:-;;;;;;:::i;:::-;;:::i;2898:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4830:228:34:-;;;;;;:::i;:::-;;:::i;4550:226::-;;;;;;:::i;:::-;;:::i;2964:39::-;;;;;-1:-1:-1;;;;;2964:39:34;;;1828:618:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;1987:21:35::1;2011:8;2020:4;2011:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;2124:9:::0;;2011:14;;-1:-1:-1;2106:128:35::1;::::0;-1:-1:-1;;;;;2124:9:35::1;2165:10;2197:4;2216:8:::0;2106:45:::1;:128::i;:::-;2283:156;2305:4;2323:10;2283:156;;;;;;;;;;;::::0;2363:8:::1;2385:15;2414;2283:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;1828:618:35:o;14229:166:34:-;971:21;;-1:-1:-1;;;;;971:21:34;929:10:14;-1:-1:-1;;;;;955:37:34;;947:67;;;;-1:-1:-1;;;;;947:67:34;;;;;;;:::i;:::-;1425:11:::1;;1414:7;;:22;;1406:58;;;;-1:-1:-1::0;;;;;1406:58:34::1;;;;;;;:::i;:::-;14387:1:::2;14363:21;:25:::0;14229:166::o;3957:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4075:5:34::1;:14:::0;;-1:-1:-1;;;;;4075:14:34;;::::1;-1:-1:-1::0;;;;;;4075:14:34;;::::1;;::::0;;;4099:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;3957:187::o;3153:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3153:26:34;;;;-1:-1:-1;3153:26:34;;;;;;;;:::o;28543:501:35:-;1015:19;;-1:-1:-1;;;;;1015:19:35;929:10:14;-1:-1:-1;;;;;999:35:35;;991:59;;;;-1:-1:-1;;;;;991:59:35;;;;;;;:::i;:::-;28724:11:::1;;28713:7;;:22;28709:329;;;28831:52;28857:11;28870:12;28831:25;:52::i;:::-;28543:501:::0;;:::o;28709:329::-:1;28989:5;::::0;28982:45:::1;::::0;;;;-1:-1:-1;;;;;13032:55:137;;;28982:45:35::1;::::0;::::1;13014:74:137::0;13104:18;;;13097:34;;;28989:5:35;;::::1;::::0;28982:18:::1;::::0;12987::137;;28982:45:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;28543:501:::0;;:::o;12357:567::-;12487:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;12537:28:35::1;12568:146;12591:4;12609:10;12568:146;;;;;;;;;;;::::0;12649:10:::1;12673:12;12699:5;12568:9;:146::i;:::-;12537:177;;12776:111;12841:10;12865:4;:12;;;12794:8;12803:4;12794:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;-1:-1:-1;;;;;12794:19:35::1;::::0;12776:111;:51:::1;:111::i;:::-;12905:12:::0;1772:1:8;2872:7;:22;12905:12:35;12357:567;-1:-1:-1;;;;12357:567:35:o;6598:200:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1199:24:34::1;::::0;-1:-1:-1;;;;;1199:24:34::1;1190:4;1182:41;1174:69;;;;-1:-1:-1::0;;;;;1174:69:34::1;;;;;;;:::i;:::-;6733:27:::2;:58:::0;6598:200::o;22783:1145:35:-;1015:19;;23063:18;;;;-1:-1:-1;;;;;1015:19:35;929:10:14;-1:-1:-1;;;;;999:35:35;;991:59;;;;-1:-1:-1;;;;;991:59:35;;;;;;;:::i;:::-;23203:201:::1;23239:8;23261:15;23290:4;23308:10;23332:12;23358:18;23390:4;23203:22;:201::i;:::-;23169:235:::0;;-1:-1:-1;23169:235:35;-1:-1:-1;23470:14:35;;23466:164:::1;;23518:17;::::0;23500:119:::1;::::0;-1:-1:-1;;;;;23518:17:35::1;23567:10;23595::::0;23500:49:::1;:119::i;:::-;23759:21:::0;;23755:167:::1;;23851:11;::::0;23814:5:::1;::::0;23796:115:::1;::::0;-1:-1:-1;;;;;23814:5:35;;::::1;::::0;23851:11:::1;23880:17:::0;23796:37:::1;:115::i;:::-;22783:1145:::0;;;;;;;;;:::o;8179:696::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;8397:17:35::1;8417:8;8426:4;8417:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;8509:17:::1;::::0;-1:-1:-1;;;;;8417:20:35;;::::1;::::0;-1:-1:-1;8491:133:35::1;::::0;8509:17:::1;8558:10;8417:20:::0;8605:9;8491:53:::1;:133::i;:::-;8668:200;8701:4;8719:10;8668:200;;;;;;;;;;;::::0;8759:9:::1;8782:15;8811;8840:18;8668:19;:200::i;4246:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4321:11:34::1;:26:::0;;-1:-1:-1;;;;;;4321:26:34::1;-1:-1:-1::0;;;;;4321:26:34;;;::::1;::::0;;;::::1;::::0;;4246:108::o;7501:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7616:21:34::1;:46:::0;;-1:-1:-1;;;;;;7616:46:34::1;-1:-1:-1::0;;;;;7616:46:34;;;::::1;::::0;;;::::1;::::0;;7501:168::o;10820:2004::-;10870:17;10948:21;10972:8;10981:4;10972:14;;;;;;;;:::i;:::-;;;;;;;;;;;10948:38;;11075:4;:20;;;11059:12;:36;11055:75;;-1:-1:-1;11118:1:34;;10820:2004;-1:-1:-1;;10820:2004:34:o;11055:75::-;11224:10;;;;11217:32;;;;;;;;11195:19;;-1:-1:-1;;;;;11224:10:34;;11217:30;;:32;;;;;;;;;;;;;;11224:10;11217:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11195:54;-1:-1:-1;11263:16:34;11259:104;;-1:-1:-1;11318:12:34;11295:20;;;;:35;-1:-1:-1;11351:1:34;;10820:2004;-1:-1:-1;10820:2004:34:o;11259:104::-;11475:21;11514:4;:20;;;11499:12;:35;;;;:::i;:::-;11475:59;;11643:19;11741:15;;11722:4;:15;;;11694:13;;11666;:41;;;;:::i;:::-;:71;;;;:::i;:::-;11665:91;;;;:::i;:::-;11864:24;;11643:113;;-1:-1:-1;;;;;;11864:24:34;11855:4;11847:41;11843:706;;;12048:53;12074:11;12095:4;12048:25;:53::i;:::-;12190:1;12178:13;;11843:706;;;12345:5;;12338:46;;;;;12365:4;12338:46;;;13014:74:137;13104:18;;;13097:34;;;-1:-1:-1;;;;;12345:5:34;;;;12338:18;;12987::137;;12338:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12444:11;12432:23;;12507:31;12528:9;12507:20;:31::i;:::-;12693:11;12670:4;:20;;;:34;;;;:::i;:::-;12647:20;;;:57;-1:-1:-1;;12805:12:34;12782:20;;;;:35;;;;-1:-1:-1;10820:2004:34;;-1:-1:-1;10820:2004:34:o;8075:165::-;8172:7;8202:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8202:24:34;;;;;;;;;:31;8075:165;;;;;:::o;7058:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7217:7:34::1;:18:::0;;;;7245:11:::1;:26:::0;7281:24:::1;:52:::0;;-1:-1:-1;;;;;;7281:52:34::1;-1:-1:-1::0;;;;;7281:52:34;;::::1;::::0;;;::::1;::::0;;7058:282::o;8928:1669::-;971:21;;-1:-1:-1;;;;;971:21:34;929:10:14;-1:-1:-1;;;;;955:37:34;;947:67;;;;-1:-1:-1;;;;;947:67:34;;;;;;;:::i;:::-;9351:47:::1;9532:30;9540:22:::0;9532:5:::1;:30;:::i;:::-;9483:28;9446:18;9402:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9401:162;;;;:::i;:::-;9351:212;;9696:42;;9642:39;:96;9625:472;;;-1:-1:-1::0;9805:42:34::1;::::0;9625:472:::1;;;9935:42;;9881:39;:96;9864:233;;;-1:-1:-1::0;10044:42:34::1;::::0;9864:233:::1;10577:12;::::0;10544:30:::1;10552:22:::0;10544:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10512:15;::::0;10414:79:::1;10454:39:::0;10414:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10413:177;;;;:::i;:::-;10385:13;:205:::0;-1:-1:-1;;;;;;8928:1669:34:o;1226:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1306:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;1306:34:35;;::::1;::::0;;;::::1;::::0;;1226:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;21403:639:35:-;21582:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;21633::35::1;21657:191;21693:10;21657:191;;;;;;;;;;;::::0;21733:4:::1;21751:10;21775:12;21801:18;21833:5;21657:22;:191::i;:::-;-1:-1:-1::0;21918:17:35::1;::::0;21632:216;;-1:-1:-1;21900:107:35::1;::::0;-1:-1:-1;;;;;21918:17:35::1;21963:10;21632:216:::0;21900:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;22025:10:35;21403:639;-1:-1:-1;;;;;21403:639:35:o;26279:1209::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;26507:22:35::1;26532:21:::0;;;:11:::1;:21;::::0;;;;;;;26554:10:::1;26532:33:::0;;;;;;;:71;;26579:14;;26532:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;26663:21;;;:11:::1;:21:::0;;;;;;26685:10:::1;26663:33:::0;;;;;;;;:71;;26532:96;;-1:-1:-1;26663:33:35;26710:14;;26663:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;26638:111;;26781:20;26807:192;26843:10;26807:192;;;;;;;;;;;::::0;26883:8:::1;26905:14;26933:5;26952:18;26984:5;26807:22;:192::i;:::-;26780:219;;;27045:121;27108:8;27117:6;27108:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;27063:17:::1;::::0;-1:-1:-1;;;;;27063:17:35;;::::1;::::0;27108:22:::1;27144:12:::0;27045:49:::1;:121::i;:::-;27198:203;27231:6;27251:10;27198:203;;;;;;;;;;;::::0;27291:12:::1;27317:14;27345;27373:18;27198:19;:203::i;:::-;27417:64;::::0;27436:10:::1;3738:74:137::0;;27474:6:35;;27458:14;;27448:8;;27417:64:::1;::::0;3726:2:137;3711:18;27417:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;26279:1209:35:o;27599:668::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;27747:19:35::1;27769:31;27783:4:::0;27789:10:::1;27769:13;:31::i;:::-;27747:53;;27815:11;27810:123;27838:11;27832:3;:17;27810:123;;;27872:50;27882:4;27888:10;27872:50;;;;;;;;;;;::::0;27904:3:::1;27909:5;27916::::0;27872:9:::1;:50::i;:::-;-1:-1:-1::0;27851:5:35::1;::::0;::::1;:::i;:::-;;;27810:123;;;;27985:16;28022:8;28031:4;28022:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;28004:85:::1;::::0;;;;28074:4:::1;28004:85;::::0;::::1;3738:74:137::0;-1:-1:-1;;;;;28022:19:35;;::::1;::::0;28004:48:::1;::::0;3711:18:137;;28004:85:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27985:104:::0;-1:-1:-1;28103:12:35;;28099:162:::1;;28131:119;28200:10;28228:8;28149;28158:4;28149:14;;;;;;;;:::i;28131:119::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;27599:668:35:o;13356:334:34:-;971:21;;-1:-1:-1;;;;;971:21:34;929:10:14;-1:-1:-1;;;;;955:37:34;;947:67;;;;-1:-1:-1;;;;;947:67:34;;;;;;;:::i;:::-;1425:11:::1;;1414:7;;:22;;1406:58;;;;-1:-1:-1::0;;;;;1406:58:34::1;;;;;;;:::i;:::-;13573:11:::2;::::0;13598:22:::2;::::0;13540:5:::2;::::0;13522:108:::2;::::0;-1:-1:-1;;;;;13540:5:34;;::::2;::::0;13573:11;::::2;::::0;13522:37:::2;:108::i;5128:132::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5215:17:34::1;:38:::0;;-1:-1:-1;;;;;;5215:38:34::1;-1:-1:-1::0;;;;;5215:38:34;;;::::1;::::0;;;::::1;::::0;;5128:132::o;3316:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3316:72:34;;-1:-1:-1;3316:72:34;-1:-1:-1;3316:72:34;;;:::o;29429:561:35:-;971:21:34;;-1:-1:-1;;;;;971:21:34;929:10:14;-1:-1:-1;;;;;955:37:34;;947:67;;;;-1:-1:-1;;;;;947:67:34;;;;;;;:::i;:::-;1199:24:::1;::::0;-1:-1:-1;;;;;1199:24:34::1;1190:4;1182:41;1174:69;;;;-1:-1:-1::0;;;;;1174:69:34::1;;;;;;;:::i;:::-;29776:11:35::2;::::0;29725:114:::2;::::0;-1:-1:-1;;;;;29776:11:35::2;29801:28;29816:13:::0;29801:12;:28:::2;:::i;:::-;29743:5;::::0;-1:-1:-1;;;;;29743:5:35::2;::::0;29725:114;:37:::2;:114::i;:::-;29965:17;::::0;29924:59:::2;::::0;29950:13;;-1:-1:-1;;;;;29965:17:35::2;29924:25;:59::i;1452:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1532:19:35::1;:31:::0;;-1:-1:-1;;;;;;1532:31:35::1;-1:-1:-1::0;;;;;1532:31:35;;;::::1;::::0;;;::::1;::::0;;1452:118::o;15665:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;15806:5:34::1;::::0;-1:-1:-1;;;;;15796:15:34;;::::1;15806:5:::0;::::1;15796:15;;15775:115;;;::::0;-1:-1:-1;;;;;15775:115:34;;14921:2:137;15775:115:34::1;::::0;::::1;14903:21:137::0;14960:2;14940:18;;;14933:30;14999:34;14979:18;;;14972:62;15070:23;15050:18;;;15043:51;15111:19;;15775:115:34::1;14719:417:137::0;15775:115:34::1;15900:59;-1:-1:-1::0;;;;;15900:38:34;::::1;15939:10;15951:7:::0;15900:38:::1;:59::i;9556:826:35:-:0;1015:19;;-1:-1:-1;;;;;1015:19:35;929:10:14;-1:-1:-1;;;;;999:35:35;;991:59;;;;-1:-1:-1;;;;;991:59:35;;;;;;;:::i;:::-;9884:17:::1;9904:8;9913:4;9904:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;9996:17:::1;::::0;-1:-1:-1;;;;;9904:20:35;;::::1;::::0;-1:-1:-1;9978:133:35::1;::::0;9996:17:::1;10045:10;9904:20:::0;10092:9;9978:53:::1;:133::i;:::-;10164:211;10197:4;10215:8;10237:15;10266:9;10289:15;10318;10347:18;10164:19;:211::i;:::-;9838:544;9556:826:::0;;;;;;;:::o;5781:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;6049:12:34::1;:28:::0;;;6155:17;;6173:1:::1;6155:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;6110:42;:65:::0;-1:-1:-1;6230:17:34;;6248:1:::1;6230:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6185:42;:65:::0;-1:-1:-1;6260:25:34::1;:54:::0;6353:15:::1;:34:::0;-1:-1:-1;;;5781:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;15343:2:137;2238:73:3::1;::::0;::::1;15325:21:137::0;15382:2;15362:18;;;15355:30;15421:34;15401:18;;;15394:62;15492:8;15472:18;;;15465:36;15518:19;;2238:73:3::1;15141:402:137::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4830:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4976:10:34::1;::::0;:15;4968:49:::1;;;::::0;-1:-1:-1;;;;;4968:49:34;;15750:2:137;4968:49:34::1;::::0;::::1;15732:21:137::0;15789:2;15769:18;;;15762:30;15828:23;15808:18;;;15801:51;15869:18;;4968:49:34::1;15548:345:137::0;4968:49:34::1;5027:10;:24:::0;4830:228::o;4550:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1199:24:34::1;::::0;-1:-1:-1;;;;;1199:24:34::1;1190:4;1182:41;1174:69;;;;-1:-1:-1::0;;;;;1174:69:34::1;;;;;;;:::i;:::-;4697:10:::2;:24:::0;;-1:-1:-1;;;;;4697:24:34;;::::2;-1:-1:-1::0;;;;;;4697:24:34;;::::2;;::::0;;;4731:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4550:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;16179:15:137;;;1143:68:12;;;16161:34:137;16231:15;;16211:18;;;16204:43;16263:18;;;16256:34;;;1116:96:12;;1136:5;;1166:27;;16073:18:137;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;3227:2019:35:-;3447:25;3509:21;3533:8;3542:4;3533:14;;;;;;;;:::i;:::-;;;;;;;;;;;3509:38;;3605:1;3594:8;:12;3586:46;;;;-1:-1:-1;;;;;3586:46:35;;16503:2:137;3586:46:35;;;16485:21:137;16542:2;16522:18;;;16515:30;16581:23;16561:18;;;16554:51;16622:18;;3586:46:35;16301:345:137;3586:46:35;3758:16;3769:4;3758:10;:16::i;:::-;3738:36;;3835:21;3859:43;3876:8;3886:15;3859:16;:43::i;:::-;3998:10;;;;3952:9;;3835:67;;-1:-1:-1;3934:106:35;;-1:-1:-1;;;;;3952:9:35;;;;3998:10;4022:8;3934:50;:106::i;:::-;4167:19;4196:8;4205:4;4196:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;4189:77;;;;;;;;481:25:137;;;-1:-1:-1;;;;;4196:20:35;;;;4189:45;;454:18:137;;4189:77:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4371:17;;4347:114;;;;;;;;16819:25:137;;;4438:22:35;;;;;16887:14:137;16880:22;16860:18;;;16853:50;4167:99:35;;-1:-1:-1;4321:23:35;;-1:-1:-1;;;;;4371:17:35;;;;4347:73;;16792:18:137;;4347:114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4644:17;;4620:105;;;;;;;;5304:25:137;;;5345:18;;;5338:34;;;4321:140:35;;-1:-1:-1;4591:26:35;;-1:-1:-1;;;;;4644:17:35;;;;4620:75;;5277:18:137;;4620:105:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4591:134;;4866:18;4832:4;:30;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;4921:217:35;;-1:-1:-1;4949:4:35;4967:13;4994:15;5023:18;5055:15;5084;5113;4921:14;:217::i;:::-;5224:4;5207:15;5184:55;;;;;;:::i;:::-;;;;;;;;5192:13;-1:-1:-1;;;;;5184:55:35;;5230:8;5184:55;;;;481:25:137;;469:2;454:18;;335:177;5184:55:35;;;;;;;;3474:1772;;;;;3227:2019;;;;;;;;:::o;14624:250:34:-;14800:10;;14763:5;;14745:122;;-1:-1:-1;;;;;14763:5:34;;;;14800:10;14824:12;14850:7;14745:41;:122::i;13625:6199:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;13983:27:35;;;:57;;;;;14039:1;14014:15;:22;:26;13983:57;13982:139;;;-1:-1:-1;;;;;;14062:27:35;;;;;;:58;;-1:-1:-1;14093:22:35;;:27;14062:58;13961:215;;;;-1:-1:-1;;;;;13961:215:35;;17658:2:137;13961:215:35;;;17640:21:137;17697:2;17677:18;;;17670:30;17736:31;17716:18;;;17709:59;17785:18;;13961:215:35;17456:353:137;13961:215:35;14242:27;14272:119;14297:4;14315:10;14339:15;14368:13;14272:11;:119::i;:::-;14242:149;;14447:22;14472:8;14481:4;14472:14;;;;;;;;:::i;:::-;;;;;;;;;;;14447:39;;14578:1;14554:8;:21;;;:25;14546:63;;;;-1:-1:-1;;;;;14546:63:35;;18016:2:137;14546:63:35;;;17998:21:137;18055:2;18035:18;;;18028:30;18094:27;18074:18;;;18067:55;18139:18;;14546:63:35;17814:349:137;14546:63:35;14731:1;14697:5;:31;;;:35;14676:112;;;;-1:-1:-1;;;;;14676:112:35;;18370:2:137;14676:112:35;;;18352:21:137;18409:2;18389:18;;;18382:30;18448:32;18428:18;;;18421:60;18498:18;;14676:112:35;18168:354:137;14676:112:35;14862:22;;;;:27;14854:60;;;;-1:-1:-1;;;;;14854:60:35;;18729:2:137;14854:60:35;;;18711:21:137;18768:2;18748:18;;;18741:30;18807:22;18787:18;;;18780:50;18847:18;;14854:60:35;18527:344:137;14854:60:35;15020:16;15031:4;15020:10;:16::i;:::-;;15078:23;15224:8;:19;;;15178:5;:31;;;15141:5;:21;;;15105:8;:21;;;:57;;;;:::i;:::-;15104:105;;;;:::i;:::-;:139;;;;:::i;:::-;15078:165;-1:-1:-1;15319:19:35;;15315:2322;;15529:17;;15505:146;;;;;;19129:13:137;;15505:146:35;;;19111:32:137;19199:4;19187:17;;19181:24;19159:20;;;19152:54;19250:17;;;19244:24;19222:20;;;19215:54;19325:4;19313:17;;19307:24;19285:20;;;19278:54;19388:4;19376:17;;19370:24;19348:20;;;19341:54;19451:4;19439:17;;19433:24;19411:20;;;19404:54;19474:19;;;19467:35;;;15428:19:35;;;;-1:-1:-1;;;;;15529:17:35;;;;15505:61;;19083:19:137;;15505:146:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15410:241;;;;15670:19;15666:1961;;;15752:21;;;:35;;;15821:11;;15810:7;;:22;15806:777;;;16015:19;;16011:213;;16166:17;;16147:54;;-1:-1:-1;;;;;16166:17:35;16185:15;16147:18;:54::i;:::-;15666:1961;;15806:777;16457:19;;16453:112;;16504:38;16526:15;16504:21;:38::i;15666:1961::-;16707:15;;16703:108;;16746:46;16765:13;16780:11;16746:18;:46::i;:::-;16844:11;;16833:7;;:22;16829:784;;;17042:19;;17038:213;;17193:17;;17174:54;;-1:-1:-1;;;;;17193:17:35;17212:15;17174:18;:54::i;16829:784::-;17487:19;;17483:112;;17534:38;17556:15;17534:21;:38::i;:::-;15340:2297;;15315:2322;17724:12;17719:2099;;17997:26;18026:106;18064:13;18099:15;18026:16;:106::i;:::-;17997:135;;18235:18;18256:8;18265:4;18256:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;;;;;;;-1:-1:-1;;;;;18256:20:35;18235:41;;18298:13;18321:10;18298:34;;18586:22;18842:6;-1:-1:-1;;;;;18842:18:35;;:20;;;;;-1:-1:-1;;;18842:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18816:8;:23;;;:46;;;;:::i;:::-;18705:6;-1:-1:-1;;;;;18705:19:35;;:21;;;;;-1:-1:-1;;;18705:21:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18691:120;;;;;-1:-1:-1;;;;;3756:55:137;;;18691:120:35;;;3738:74:137;18691:54:35;;;;;;;3711:18:137;;18691:120:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18612:21;;:52;;18660:4;18612:52;:::i;:::-;:199;;;;:::i;:::-;18611:252;;;;:::i;:::-;18950:40;;;;;;;;481:25:137;;;18586:277:35;;-1:-1:-1;;;;;;18950:24:35;;;;;454:18:137;;18950:40:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;19175:21:35;;19121:31;;;;:75;;-1:-1:-1;19175:21:35;;-1:-1:-1;19121:75:35;:::i;:::-;19067:31;;;;:129;;;;19296:10;;19278:92;;;;;19347:4;19278:92;;;3738:74:137;;;;-1:-1:-1;;;;;19296:10:35;;19278:39;;3711:18:137;;19278:92:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19263:107;;:12;19431:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;19431:37:35;;;;;;;;;:49;;19518:15;;19431:37;19469:10;;19431:49;;;;;;:::i;:::-;;;;;;;;;;;:84;;:102;;;;17931:1617;19731:4;19698:15;19641:166;;;;;;:::i;:::-;;;;;;;;;;19781:12;;5304:25:137;;;5360:2;5345:18;;5338:34;19641:166:35;-1:-1:-1;;;;;19641:166:35;;;;;5277:18:137;19641:166:35;;;;;;;17719:2099;13878:5946;;;13625:6199;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;13032:55:137;;895:58:12;;;13014:74:137;13104:18;;;13097:34;;;868:86:12;;888:5;;918:23;;12987:18:137;;895:58:12;12840:297:137;868:86:12;745:216;;;:::o;24763:1107:35:-;25030:18;25050:25;25117:18;25138:8;25147:4;25138:14;;;;;;;;:::i;:::-;;;;;;;;:20;:14;;;;;:20;;-1:-1:-1;;;;;25138:20:35;;-1:-1:-1;25275:171:35;25298:4;25316:8;25338:15;25367:10;25391:12;25417:19;25275:9;:171::i;:::-;25244:202;;25524:120;25598:10;25622:4;:12;;;25542:8;25551:4;25542:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;25542:19:35;;25524:120;:60;:120::i;:::-;25757:12;;25701:110;;;;;;;;5304:25:137;;;;5345:18;;;5338:34;;;-1:-1:-1;;;;;25701:42:35;;;;;5277:18:137;;25701:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25688:123;;25842:4;:21;;;25822:41;;25077:793;;24763:1107;;;;;;;;;;:::o;11087:982::-;11392:17;11412:8;11421:4;11412:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;11523:106;;;;;;;;5304:25:137;;;5345:18;;;5338:34;;;-1:-1:-1;;;;;11412:20:35;;;;-1:-1:-1;11412:20:35;;11523:41;;5277:18:137;;11523:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11504:125;;11707:115;11781:9;11804:8;11725;11734:4;11725:14;;;;;;;;:::i;11707:115::-;11895:167;11917:4;11935:8;11957:15;11986:8;12008:15;12037;11895:8;:167::i;:::-;;11346:723;;11087:982;;;;;;;:::o;12994:209:34:-;1425:11;;1414:7;;:22;;1406:58;;;;-1:-1:-1;;;;;1406:58:34;;;;;;;:::i;:::-;13182:14:::1;13158:21;;:38;;;;:::i;:::-;13134:21;:62:::0;-1:-1:-1;12994:209:34:o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;20471:2:137;3921:85:12;;;20453:21:137;20510:2;20490:18;;;20483:30;20549:34;20529:18;;;20522:62;20620:12;20600:18;;;20593:40;20650:19;;3921:85:12;20269:406:137;5252:686:35;5476:8;-1:-1:-1;;;;;5556:22:35;;5552:380;;5692:1;5667:15;:22;:26;5642:129;;;;-1:-1:-1;;;;;5642:129:35;;20882:2:137;5642:129:35;;;20864:21:137;20921:2;20901:18;;;20894:30;20960:34;20940:18;;;20933:62;21031:14;21011:18;;;21004:42;21063:19;;5642:129:35;20680:408:137;5642:129:35;5896:24;5904:15;5896:24;:::i;:::-;5888:33;;;;5252:686;-1:-1:-1;;;5252:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;21716:34:137;-1:-1:-1;;;;;21786:15:137;;;21766:18;;;21759:43;2236:20:12;;2301:5;;2259:15;;;;;21628:18:137;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;13032:55:137;;2343:69:12;;;13014:74:137;13104:18;;;13097:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;12987:18:137;;2343:69:12;12840:297:137;6376:1321:35;6681:20;6704:8;6713:4;6704:14;;;;;;;;:::i;:::-;;;;;;;;;6681:37;;;;;;;;;6704:14;;;;;;;6681:37;;-1:-1:-1;;;;;6681:37:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6794:486;;;;;;;;;;;;;;;;7027:30;6966:20;;6681:37;;-1:-1:-1;6794:486:35;;;7027:30;6966:41;;6834:18;;6966:41;:::i;:::-;6965:92;;;;:::i;:::-;6794:486;;;;;;;;;;;;;;;;-1:-1:-1;6794:486:35;;;;;;;7344:17;;;:11;:17;;;;;-1:-1:-1;;;;;7344:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7511:22;;6760:520;;-1:-1:-1;7511:26:35;7507:184;;7667:13;7553:18;:24;7572:4;7553:24;;;;;;;;;;;7578:15;7553:41;;;;;;:::i;:::-;;;;;;;;;;;;;:111;7649:1;7612:34;7626:4;7632:13;7612;:34::i;:::-;:38;;;;:::i;:::-;7553:111;;;;;;;;;;;;:127;;;;;-1:-1:-1;;;;;7553:127:35;;;;;-1:-1:-1;;;;;7553:127:35;;;;;;7507:184;6651:1046;;6376:1321;;;;;;;:::o;20317:605::-;20486:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20486:27:35;-1:-1:-1;;;;;20529:27:35;;;20525:391;;20618:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;20618:32:35;;;;;;;;;:44;;20651:10;;20618:44;;;;;;:::i;:::-;;;;;;;;;;;20607:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20525:391;;;20731:20;20754:24;;;:18;:24;;;;;;:41;;;;20779:15;;20754:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;20862:17;;;:11;:17;;;;;-1:-1:-1;;;;;20754:83:35;;;20862:31;;;;;;:43;;20754:83;;-1:-1:-1;20862:31:35;20754:83;;20862:43;;;;;;:::i;:::-;;;;;;;;;;;20851:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20679:237;20525:391;20317:605;;;;;;:::o;15115:333:34:-;15269:5;;15251:49;;;;;15294:4;15251:49;;;3738:74:137;15213:9:34;;15194:16;;-1:-1:-1;;;;;15269:5:34;;;;15251:34;;3711:18:137;;15251:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15232:68;;15326:8;15314:9;:20;15310:70;;;15361:8;15350:19;;15310:70;15407:5;;15389:52;;-1:-1:-1;;;;;15407:5:34;15427:3;15432:8;15389:37;:52::i;13862:214::-;1425:11;;1414:7;;:22;;1406:58;;;;-1:-1:-1;;;;;1406:58:34;;;;;;;:::i;:::-;14054:15:::1;14029:22;;:40;;;;:::i;:::-;14004:22;:65:::0;-1:-1:-1;13862:214:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;22015:2:137;5148:81:13;;;21997:21:137;22054:2;22034:18;;;22027:30;22093:34;22073:18;;;22066:62;22164:8;22144:18;;;22137:36;22190:19;;5148:81:13;21813:402:137;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;22422:2:137;5239:60:13;;;22404:21:137;22461:2;22441:18;;;22434:30;22500:31;22480:18;;;22473:59;22549:18;;5239:60:13;22220:353:137;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:316:137:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:137;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:137;305:18;;;292:32;;14:316;-1:-1:-1;14:316:137:o;517:154::-;-1:-1:-1;;;;;596:5:137;592:54;585:5;582:65;572:93;;661:1;658;651:12;676:388;744:6;752;805:2;793:9;784:7;780:23;776:32;773:52;;;821:1;818;811:12;773:52;860:9;847:23;879:31;904:5;879:31;:::i;:::-;929:5;-1:-1:-1;986:2:137;971:18;;958:32;999:33;958:32;999:33;:::i;:::-;1051:7;1041:17;;;676:388;;;;;:::o;1069:180::-;1128:6;1181:2;1169:9;1160:7;1156:23;1152:32;1149:52;;;1197:1;1194;1187:12;1149:52;-1:-1:-1;1220:23:137;;1069:180;-1:-1:-1;1069:180:137:o;1899:315::-;1967:6;1975;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2080:9;2067:23;2057:33;;2140:2;2129:9;2125:18;2112:32;2153:31;2178:5;2153:31;:::i;2219:184::-;-1:-1:-1;;;;;2268:1:137;2261:88;2368:4;2365:1;2358:15;2392:4;2389:1;2382:15;2408:718;2450:5;2503:3;2496:4;2488:6;2484:17;2480:27;2470:55;;2521:1;2518;2511:12;2470:55;2557:6;2544:20;2583:18;2620:2;2616;2613:10;2610:36;;;2626:18;;:::i;:::-;2701:2;2695:9;2669:2;2755:13;;-1:-1:-1;;2751:22:137;;;2775:2;2747:31;2743:40;2731:53;;;2799:18;;;2819:22;;;2796:46;2793:72;;;2845:18;;:::i;:::-;2885:10;2881:2;2874:22;2920:2;2912:6;2905:18;2966:3;2959:4;2954:2;2946:6;2942:15;2938:26;2935:35;2932:55;;;2983:1;2980;2973:12;2932:55;3047:2;3040:4;3032:6;3028:17;3021:4;3013:6;3009:17;2996:54;3094:1;3087:4;3082:2;3074:6;3070:15;3066:26;3059:37;3114:6;3105:15;;;;;;2408:718;;;;:::o;3131:456::-;3217:6;3225;3233;3286:2;3274:9;3265:7;3261:23;3257:32;3254:52;;;3302:1;3299;3292:12;3254:52;3338:9;3325:23;3315:33;;3399:2;3388:9;3384:18;3371:32;3426:18;3418:6;3415:30;3412:50;;;3458:1;3455;3448:12;3412:50;3481:49;3522:7;3513:6;3502:9;3498:22;3481:49;:::i;:::-;3471:59;;;3577:2;3566:9;3562:18;3549:32;3539:42;;3131:456;;;;;:::o;3823:118::-;3909:5;3902:13;3895:21;3888:5;3885:32;3875:60;;3931:1;3928;3921:12;3946:377;4020:6;4028;4036;4089:2;4077:9;4068:7;4064:23;4060:32;4057:52;;;4105:1;4102;4095:12;4057:52;4141:9;4128:23;4118:33;;4198:2;4187:9;4183:18;4170:32;4160:42;;4252:2;4241:9;4237:18;4224:32;4265:28;4287:5;4265:28;:::i;:::-;4312:5;4302:15;;;3946:377;;;;;:::o;4328:797::-;4438:6;4446;4454;4462;4470;4478;4531:3;4519:9;4510:7;4506:23;4502:33;4499:53;;;4548:1;4545;4538:12;4499:53;4587:9;4574:23;4606:31;4631:5;4606:31;:::i;:::-;4656:5;-1:-1:-1;4712:2:137;4697:18;;4684:32;4739:18;4728:30;;4725:50;;;4771:1;4768;4761:12;4725:50;4794:49;4835:7;4826:6;4815:9;4811:22;4794:49;:::i;:::-;4784:59;;;4890:2;4879:9;4875:18;4862:32;4852:42;;4941:2;4930:9;4926:18;4913:32;4903:42;;4997:3;4986:9;4982:19;4969:33;5011:30;5033:7;5011:30;:::i;:::-;5060:7;5050:17;;;5114:3;5103:9;5099:19;5086:33;5076:43;;4328:797;;;;;;;;:::o;5383:385::-;5469:6;5477;5485;5493;5546:3;5534:9;5525:7;5521:23;5517:33;5514:53;;;5563:1;5560;5553:12;5514:53;-1:-1:-1;;5586:23:137;;;5656:2;5641:18;;5628:32;;-1:-1:-1;5707:2:137;5692:18;;5679:32;;5758:2;5743:18;5730:32;;-1:-1:-1;5383:385:137;-1:-1:-1;5383:385:137:o;5773:247::-;5832:6;5885:2;5873:9;5864:7;5860:23;5856:32;5853:52;;;5901:1;5898;5891:12;5853:52;5940:9;5927:23;5959:31;5984:5;5959:31;:::i;6025:383::-;6102:6;6110;6118;6171:2;6159:9;6150:7;6146:23;6142:32;6139:52;;;6187:1;6184;6177:12;6139:52;6223:9;6210:23;6200:33;;6280:2;6269:9;6265:18;6252:32;6242:42;;6334:2;6323:9;6319:18;6306:32;6347:31;6372:5;6347:31;:::i;6413:454::-;6508:6;6516;6524;6532;6540;6593:3;6581:9;6572:7;6568:23;6564:33;6561:53;;;6610:1;6607;6600:12;6561:53;-1:-1:-1;;6633:23:137;;;6703:2;6688:18;;6675:32;;-1:-1:-1;6754:2:137;6739:18;;6726:32;;6805:2;6790:18;;6777:32;;-1:-1:-1;6856:3:137;6841:19;6828:33;;-1:-1:-1;6413:454:137;-1:-1:-1;6413:454:137:o;6872:241::-;6928:6;6981:2;6969:9;6960:7;6956:23;6952:32;6949:52;;;6997:1;6994;6987:12;6949:52;7036:9;7023:23;7055:28;7077:5;7055:28;:::i;7118:446::-;7201:6;7209;7217;7225;7278:3;7266:9;7257:7;7253:23;7249:33;7246:53;;;7295:1;7292;7285:12;7246:53;7331:9;7318:23;7308:33;;7388:2;7377:9;7373:18;7360:32;7350:42;;7442:2;7431:9;7427:18;7414:32;7455:28;7477:5;7455:28;:::i;:::-;7118:446;;;;-1:-1:-1;7502:5:137;;7554:2;7539:18;7526:32;;-1:-1:-1;;7118:446:137:o;7761:383::-;7838:6;7846;7854;7907:2;7895:9;7886:7;7882:23;7878:32;7875:52;;;7923:1;7920;7913:12;7875:52;7959:9;7946:23;7936:33;;8019:2;8008:9;8004:18;7991:32;8032:31;8057:5;8032:31;:::i;:::-;7761:383;;8082:5;;-1:-1:-1;;;8134:2:137;8119:18;;;;8106:32;;7761:383::o;8689:248::-;8757:6;8765;8818:2;8806:9;8797:7;8793:23;8789:32;8786:52;;;8834:1;8831;8824:12;8786:52;-1:-1:-1;;8857:23:137;;;8927:2;8912:18;;;8899:32;;-1:-1:-1;8689:248:137:o;8942:315::-;9010:6;9018;9071:2;9059:9;9050:7;9046:23;9042:32;9039:52;;;9087:1;9084;9077:12;9039:52;9126:9;9113:23;9145:31;9170:5;9145:31;:::i;:::-;9195:5;9247:2;9232:18;;;;9219:32;;-1:-1:-1;;;8942:315:137:o;9262:799::-;9384:6;9392;9400;9408;9416;9424;9432;9485:3;9473:9;9464:7;9460:23;9456:33;9453:53;;;9502:1;9499;9492:12;9453:53;9538:9;9525:23;9515:33;;9598:2;9587:9;9583:18;9570:32;9611:31;9636:5;9611:31;:::i;:::-;9661:5;-1:-1:-1;9717:2:137;9702:18;;9689:32;9744:18;9733:30;;9730:50;;;9776:1;9773;9766:12;9730:50;9799:49;9840:7;9831:6;9820:9;9816:22;9799:49;:::i;:::-;9262:799;;;;-1:-1:-1;9789:59:137;;9895:2;9880:18;;9867:32;;-1:-1:-1;9946:3:137;9931:19;;9918:33;;9998:3;9983:19;;9970:33;;-1:-1:-1;10050:3:137;10035:19;;;10022:33;;-1:-1:-1;9262:799:137;-1:-1:-1;;;9262:799:137:o;10066:821::-;10179:6;10187;10195;10203;10211;10264:3;10252:9;10243:7;10239:23;10235:33;10232:53;;;10281:1;10278;10271:12;10232:53;10317:9;10304:23;10294:33;;10378:2;10367:9;10363:18;10350:32;10401:18;10442:2;10434:6;10431:14;10428:34;;;10458:1;10455;10448:12;10428:34;10496:6;10485:9;10481:22;10471:32;;10541:7;10534:4;10530:2;10526:13;10522:27;10512:55;;10563:1;10560;10553:12;10512:55;10603:2;10590:16;10629:2;10621:6;10618:14;10615:34;;;10645:1;10642;10635:12;10615:34;10699:7;10694:2;10688;10680:6;10676:15;10672:2;10668:24;10664:33;10661:46;10658:66;;;10720:1;10717;10710:12;10658:66;10066:821;;10751:2;10743:11;;;;;-1:-1:-1;10773:6:137;;10826:2;10811:18;;10798:32;;-1:-1:-1;10877:2:137;10862:18;10849:32;;-1:-1:-1;10066:821:137;-1:-1:-1;;;10066:821:137:o;10892:355::-;11094:2;11076:21;;;11133:2;11113:18;;;11106:30;11172:33;11167:2;11152:18;;11145:61;11238:2;11223:18;;10892:355::o;11252:184::-;-1:-1:-1;;;;;11301:1:137;11294:88;11401:4;11398:1;11391:15;11425:4;11422:1;11415:15;11441:341;11643:2;11625:21;;;11682:2;11662:18;;;11655:30;11721:19;11716:2;11701:18;;11694:47;11773:2;11758:18;;11441:341::o;11787:347::-;11989:2;11971:21;;;12028:2;12008:18;;;12001:30;12067:25;12062:2;12047:18;;12040:53;12125:2;12110:18;;11787:347::o;12139:356::-;12341:2;12323:21;;;12360:18;;;12353:30;12419:34;12414:2;12399:18;;12392:62;12486:2;12471:18;;12139:356::o;12500:335::-;12702:2;12684:21;;;12741:2;12721:18;;;12714:30;12780:13;12775:2;12760:18;;12753:41;12826:2;12811:18;;12500:335::o;13142:339::-;13344:2;13326:21;;;13383:2;13363:18;;;13356:30;13422:17;13417:2;13402:18;;13395:45;13472:2;13457:18;;13142:339::o;13486:184::-;13556:6;13609:2;13597:9;13588:7;13584:23;13580:32;13577:52;;;13625:1;13622;13615:12;13577:52;-1:-1:-1;13648:16:137;;13486:184;-1:-1:-1;13486:184:137:o;13675:::-;-1:-1:-1;;;;;13724:1:137;13717:88;13824:4;13821:1;13814:15;13848:4;13845:1;13838:15;13864:125;13904:4;13932:1;13929;13926:8;13923:34;;;13937:18;;:::i;:::-;-1:-1:-1;13974:9:137;;13864:125::o;13994:168::-;14034:7;14100:1;14096;14092:6;14088:14;14085:1;14082:21;14077:1;14070:9;14063:17;14059:45;14056:71;;;14107:18;;:::i;:::-;-1:-1:-1;14147:9:137;;13994:168::o;14167:274::-;14207:1;14233;14223:189;;-1:-1:-1;;;;;14265:1:137;14258:88;14369:4;14366:1;14359:15;14397:4;14394:1;14387:15;14223:189;-1:-1:-1;14426:9:137;;14167:274::o;14446:128::-;14486:3;14517:1;14513:6;14510:1;14507:13;14504:39;;;14523:18;;:::i;:::-;-1:-1:-1;14559:9:137;;14446:128::o;14579:135::-;14618:3;-1:-1:-1;;14639:17:137;;14636:43;;;14659:18;;:::i;:::-;-1:-1:-1;14706:1:137;14695:13;;14579:135::o;16914:258::-;16986:1;16996:113;17010:6;17007:1;17004:13;16996:113;;;17086:11;;;17080:18;17067:11;;;17060:39;17032:2;17025:10;16996:113;;;17127:6;17124:1;17121:13;17118:48;;;-1:-1:-1;;17162:1:137;17144:16;;17137:27;16914:258::o;17177:274::-;17306:3;17344:6;17338:13;17360:53;17406:6;17401:3;17394:4;17386:6;17382:17;17360:53;:::i;:::-;17429:16;;;;;17177:274;-1:-1:-1;;17177:274:137:o;19513:245::-;19592:6;19600;19653:2;19641:9;19632:7;19628:23;19624:32;19621:52;;;19669:1;19666;19659:12;19621:52;-1:-1:-1;;19692:16:137;;19748:2;19733:18;;;19727:25;19692:16;;19727:25;;-1:-1:-1;19513:245:137:o;19763:251::-;19833:6;19886:2;19874:9;19865:7;19861:23;19857:32;19854:52;;;19902:1;19899;19892:12;19854:52;19934:9;19928:16;19953:31;19978:5;19953:31;:::i;20019:245::-;20086:6;20139:2;20127:9;20118:7;20114:23;20110:32;20107:52;;;20155:1;20152;20145:12;20107:52;20187:9;20181:16;20206:28;20228:5;20206:28;:::i;21093:383::-;21211:12;;21259:4;21248:16;;21242:23;-1:-1:-1;;21333:11:137;;;;21211:12;21242:23;21367:2;21356:14;;21353:117;;;21457:2;21444:6;21440:2;21436:15;21433:1;21429:23;21426:1;21422:31;21418:2;21414:40;21410:2;21406:49;21402:58;21393:67;;21353:117;;;;21093:383;;;:::o;22578:::-;22727:2;22716:9;22709:21;22690:4;22759:6;22753:13;22802:6;22797:2;22786:9;22782:18;22775:34;22818:66;22877:6;22872:2;22861:9;22857:18;22852:2;22844:6;22840:15;22818:66;:::i;:::-;22945:2;22924:15;-1:-1:-1;;22920:29:137;22905:45;;;;22952:2;22901:54;;22578:383;-1:-1:-1;;22578:383:137:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/Zorro/Vaults/IVault.sol\";\n\nimport \"../interfaces/Zorro/Vaults/Actions/IVaultActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\";\n\nimport \"../interfaces/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _pid index of pool\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _pid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(pool.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _pid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _pid index of pool\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updatePool(_pid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(pool.want).safeIncreaseAllowance(\n            pool.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(poolInfo[_pid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = IZorroControllerActions(controllerActions)\n            .getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = IZorroControllerActions(controllerActions)\n            .getUserContribution(sharesAdded, _timeMultiplier);\n\n        // Update pool info: Increment the pool's total contributions by the contribution added\n        pool.totalTrancheContributions += _contributionAdded;\n\n        // Create tranche\n        _createTranche(\n            _pid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _pid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _pid Index of pool\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get pool\n        PoolInfo memory pool = poolInfo[_pid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: (pool.accZORRORewards * _contributionAdded) /\n                pool.totalTrancheContributions, // Pro-rata share of accumulated pool rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_pid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_pid][_foreignAccount][\n                trancheLength(_pid, _localAccount) - 1\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _pid index of pool to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _pid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _pid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _pid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _pid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _pid index of pool\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _pid index of pool\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _pid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get pool and current tranche info\n        PoolInfo storage _pool = poolInfo[_pid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _pool.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        updatePool(_pid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (_tranche.contribution *\n            _pool.accZORRORewards) /\n            _pool.totalTrancheContributions -\n            _tranche.rewardDebt;\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = IZorroControllerActions(controllerActions).getAdjustedRewards(\n                    _tranche,\n                    _pendingRewards\n                );\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Separate block to make stack shallow\n            {\n                // Get local (on-chain) account\n                address _resolvedLocalAcct = _getLocalAccount(\n                    _localAccount,\n                    _foreignAccount\n                );\n\n                // Sub block\n                {\n                    // Get vault\n                    address _vaultAddr = poolInfo[_pid].vault;\n                    IVault _vault = IVault(_vaultAddr);\n\n                    // Get staked want tokens\n                    // TODO: Need to call updateSupply() first, or else the currentWantEquity could be out of date\n                    // OR: Do it based on number of shares. Why not? \n                    uint256 _stakedWantAmt = (_tranche.contribution *\n                        1e12 *\n                        IVaultActions(_vault.vaultActions()).currentWantEquity(\n                            _vaultAddr\n                        )) / (_tranche.timeMultiplier * _vault.sharesTotal());\n\n                    // Withdraw the want token for this account\n                    _vault.withdrawWantToken(_stakedWantAmt);\n                }\n\n                // Update shares safely\n                _pool.totalTrancheContributions =\n                    _pool.totalTrancheContributions -\n                    _tranche.contribution;\n\n                // Calculate Want token balance\n                _res.wantAmt = IERC20Upgradeable(_pool.want).balanceOf(\n                    address(this)\n                );\n\n                // Mark tranche as exited\n                trancheInfo[_pid][_resolvedLocalAcct][_trancheId]\n                    .exitedVaultAt = block.timestamp;\n            }\n            \n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _pid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _pid Pool ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _pid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_pid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_pid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_pid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a pool and converts the Want token into USD\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a pool and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = poolInfo[_pid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromPid index of pool FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toPid index of pool TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromPid,\n        uint256 _fromTrancheId,\n        uint256 _toPid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromPid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            poolInfo[_toPid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toPid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromPid, _fromTrancheId, _toPid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a pool\n    /// @param _pid index of pool\n    function withdrawAll(uint256 _pid) public nonReentrant {\n        // Iterate through all tranches for the current user and pool and withdraw\n        uint256 numTranches = trancheLength(_pid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_pid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(poolInfo[_pid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted - _totalSlashed\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        16141
      ],
      "IAMMRouter01": [
        13106
      ],
      "IAMMRouter02": [
        13194
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        15944
      ],
      "IVaultActions": [
        15486
      ],
      "IZorro": [
        13536
      ],
      "IZorroController": [
        13873
      ],
      "IZorroControllerActions": [
        15071
      ],
      "IZorroControllerAnalytics": [
        13672
      ],
      "IZorroControllerBase": [
        13646
      ],
      "IZorroControllerInvestment": [
        13833
      ],
      "IZorroControllerPoolMgmt": [
        13863
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapUni": [
        16392
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10110
      ],
      "ZorroControllerBase": [
        7029
      ],
      "ZorroControllerInvestment": [
        8294
      ]
    },
    "id": 8295,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7031,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7032,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 2885,
        "src": "58:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7033,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 7030,
        "src": "148:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/IVault.sol",
        "file": "../interfaces/Zorro/Vaults/IVault.sol",
        "id": 7034,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 15945,
        "src": "186:47:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "file": "../interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "id": 7035,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 15487,
        "src": "235:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "file": "../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "id": 7036,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 15072,
        "src": "299:77:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorroController.sol",
        "file": "../interfaces/IZorroController.sol",
        "id": 7037,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 13874,
        "src": "378:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7038,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8295,
        "sourceUnit": 10111,
        "src": "424:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7039,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13833,
              "src": "514:26:35"
            },
            "id": 7040,
            "nodeType": "InheritanceSpecifier",
            "src": "514:26:35"
          },
          {
            "baseName": {
              "id": 7041,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7029,
              "src": "546:19:35"
            },
            "id": 7042,
            "nodeType": "InheritanceSpecifier",
            "src": "546:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8294,
        "linearizedBaseContracts": [
          8294,
          7029,
          1944,
          571,
          3169,
          1774,
          13833,
          13646
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "481:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7046,
            "libraryName": {
              "id": 7043,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "599:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "593:49:35",
            "typeName": {
              "id": 7045,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7044,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "624:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "624:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7048,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "692:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8294,
            "src": "680:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7047,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "680:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7050,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "796:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8294,
            "src": "781:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7049,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "781:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7062,
              "nodeType": "Block",
              "src": "981:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7054,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "999:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "999:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7056,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7050,
                          "src": "1015:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "999:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1036:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "991:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7060,
                  "nodeType": "ExpressionStatement",
                  "src": "991:59:35"
                },
                {
                  "id": 7061,
                  "nodeType": "PlaceholderStatement",
                  "src": "1060:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7051,
              "nodeType": "StructuredDocumentation",
              "src": "878:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7063,
            "name": "onlyZorroXChain",
            "nameLocation": "963:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:35"
            },
            "src": "954:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13717
            ],
            "body": {
              "id": 7075,
              "nodeType": "Block",
              "src": "1296:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7071,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7048,
                      "src": "1306:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7072,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7066,
                      "src": "1331:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1306:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7074,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7064,
              "nodeType": "StructuredDocumentation",
              "src": "1093:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7076,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7068,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1286:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "1235:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7066,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "1266:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7076,
                  "src": "1261:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1260:16:35"
            },
            "returnParameters": {
              "id": 7070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:0:35"
            },
            "scope": 8294,
            "src": "1226:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13722
            ],
            "body": {
              "id": 7088,
              "nodeType": "Block",
              "src": "1522:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7084,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7050,
                      "src": "1532:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7085,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7079,
                      "src": "1554:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1532:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7087,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7077,
              "nodeType": "StructuredDocumentation",
              "src": "1353:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7089,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7081,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1512:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1512:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "1461:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7079,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1492:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7089,
                  "src": "1484:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:19:35"
            },
            "returnParameters": {
              "id": 7083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1522:0:35"
            },
            "scope": 8294,
            "src": "1452:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13731
            ],
            "body": {
              "id": 7133,
              "nodeType": "Block",
              "src": "1952:494:35",
              "statements": [
                {
                  "assignments": [
                    7103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7103,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2004:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7133,
                      "src": "1987:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7101,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13567,
                          "src": "1987:8:35"
                        },
                        "referencedDeclaration": 13567,
                        "src": "1987:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7107,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7104,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6461,
                      "src": "2011:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7106,
                    "indexExpression": {
                      "id": 7105,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "2020:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2011:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1987:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2165:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2165:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7117,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2197:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2189:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2189:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7119,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7094,
                        "src": "2216:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7109,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7103,
                              "src": "2124:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "2124:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7108,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2106:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2106:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "2106:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:128:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7121,
                  "nodeType": "ExpressionStatement",
                  "src": "2106:128:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7123,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7092,
                        "src": "2305:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2323:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2323:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2347:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7127,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7094,
                        "src": "2363:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7128,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7096,
                        "src": "2385:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7129,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2414:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2414:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7122,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7245,
                      "src": "2283:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2283:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7132,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7090,
              "nodeType": "StructuredDocumentation",
              "src": "1597:226:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _pid index of pool\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7134,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7099,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7098,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "1939:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1939:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "1837:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7092,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1862:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1854:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7094,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "1884:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1876:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7096,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "1910:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1902:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1844:87:35"
            },
            "returnParameters": {
              "id": 7100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1952:0:35"
            },
            "scope": 8294,
            "src": "1828:618:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7244,
              "nodeType": "Block",
              "src": "3474:1772:35",
              "statements": [
                {
                  "assignments": [
                    7154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7154,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3526:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7244,
                      "src": "3509:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7152,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13567,
                          "src": "3509:8:35"
                        },
                        "referencedDeclaration": 13567,
                        "src": "3509:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7158,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7155,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6461,
                      "src": "3533:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7157,
                    "indexExpression": {
                      "id": 7156,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7137,
                      "src": "3542:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3533:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3509:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7160,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7143,
                          "src": "3594:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3605:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3594:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3608:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3586:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3586:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7165,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:46:35"
                },
                {
                  "expression": {
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7166,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7150,
                      "src": "3738:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7168,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7137,
                          "src": "3769:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7167,
                        "name": "updatePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6877,
                        "src": "3758:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3758:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3738:36:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7171,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:36:35"
                },
                {
                  "assignments": [
                    7173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7173,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "3843:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7244,
                      "src": "3835:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3835:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7178,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7175,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7139,
                        "src": "3876:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7176,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "3886:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7174,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7285,
                      "src": "3859:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3859:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3835:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7184,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7154,
                          "src": "3998:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13566,
                        "src": "3998:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7186,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7143,
                        "src": "4022:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7180,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7154,
                              "src": "3952:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "3952:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7179,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3934:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3934:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "3934:50:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3934:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7188,
                  "nodeType": "ExpressionStatement",
                  "src": "3934:106:35"
                },
                {
                  "assignments": [
                    7190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7190,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "4175:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7244,
                      "src": "4167:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4167:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7198,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7143,
                        "src": "4248:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7192,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6461,
                                "src": "4196:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7194,
                              "indexExpression": {
                                "id": 7193,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7137,
                                "src": "4205:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4196:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13566,
                            "src": "4196:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7191,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15944,
                          "src": "4189:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$15944_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4189:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$15944",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15904,
                      "src": "4189:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4189:77:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4167:99:35"
                },
                {
                  "assignments": [
                    7202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7202,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "4329:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7244,
                      "src": "4321:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4321:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7210,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7207,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7145,
                        "src": "4421:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7208,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7048,
                        "src": "4438:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7204,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6481,
                            "src": "4371:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7203,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15071,
                          "src": "4347:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$15071_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4347:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$15071",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15061,
                      "src": "4347:73:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4321:140:35"
                },
                {
                  "assignments": [
                    7212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7212,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "4599:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7244,
                      "src": "4591:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4591:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7220,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7217,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7190,
                        "src": "4696:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7218,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7202,
                        "src": "4709:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7214,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6481,
                            "src": "4644:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7213,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15071,
                          "src": "4620:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$15071_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4620:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$15071",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15070,
                      "src": "4620:75:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4620:105:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:134:35"
                },
                {
                  "expression": {
                    "id": 7225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7221,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "4832:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 7223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13564,
                      "src": "4832:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 7224,
                      "name": "_contributionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7212,
                      "src": "4866:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4832:52:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7226,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:52:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7228,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7137,
                        "src": "4949:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7229,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7173,
                        "src": "4967:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7230,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "4994:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7231,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7212,
                        "src": "5023:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7232,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7202,
                        "src": "5055:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7233,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7145,
                        "src": "5084:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7234,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7147,
                        "src": "5113:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7227,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7360,
                      "src": "4921:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4921:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7236,
                  "nodeType": "ExpressionStatement",
                  "src": "4921:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7238,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7173,
                        "src": "5192:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7239,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "5207:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7137,
                        "src": "5224:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7143,
                        "src": "5230:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7237,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13690,
                      "src": "5184:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5184:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7243,
                  "nodeType": "EmitStatement",
                  "src": "5179:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7135,
              "nodeType": "StructuredDocumentation",
              "src": "2452:770:35",
              "text": "@notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _pid index of pool\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3236:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7137,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3262:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3254:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7139,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3284:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3276:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3276:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "3315:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3302:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7143,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3348:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3340:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7145,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "3374:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3366:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3366:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7147,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "3407:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3399:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3399:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:184:35"
            },
            "returnParameters": {
              "id": 7151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "3455:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3447:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:27:35"
            },
            "scope": 8294,
            "src": "3227:2019:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7284,
              "nodeType": "Block",
              "src": "5398:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7254,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7252,
                      "src": "5461:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7255,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7247,
                      "src": "5476:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5461:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7257,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7258,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7247,
                      "src": "5556:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5576:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5568:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5568:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5568:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5556:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7283,
                  "nodeType": "IfStatement",
                  "src": "5552:380:35",
                  "trueBody": {
                    "id": 7282,
                    "nodeType": "Block",
                    "src": "5580:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7265,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7249,
                                  "src": "5667:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5667:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5692:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5667:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5711:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7264,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5642:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5642:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7271,
                        "nodeType": "ExpressionStatement",
                        "src": "5642:129:35"
                      },
                      {
                        "expression": {
                          "id": 7280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7272,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7252,
                            "src": "5873:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7277,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7249,
                                    "src": "5904:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5896:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7275,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5896:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5896:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5888:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7273,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5888:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5888:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5873:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7281,
                        "nodeType": "ExpressionStatement",
                        "src": "5873:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "5261:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7247,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5286:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7285,
                  "src": "5278:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5278:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7249,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "5309:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7285,
                  "src": "5296:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7248,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5277:48:35"
            },
            "returnParameters": {
              "id": 7253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7252,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "5380:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7285,
                  "src": "5372:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5372:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5371:22:35"
            },
            "scope": 8294,
            "src": "5252:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7359,
              "nodeType": "Block",
              "src": "6651:1046:35",
              "statements": [
                {
                  "assignments": [
                    7305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7305,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6697:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7359,
                      "src": "6681:20:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_memory_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7303,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13567,
                          "src": "6681:8:35"
                        },
                        "referencedDeclaration": 13567,
                        "src": "6681:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7309,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7306,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6461,
                      "src": "6704:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7308,
                    "indexExpression": {
                      "id": 7307,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7288,
                      "src": "6713:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6704:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6681:37:35"
                },
                {
                  "assignments": [
                    7312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7312,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "6779:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7359,
                      "src": "6760:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7311,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7310,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13553,
                          "src": "6760:11:35"
                        },
                        "referencedDeclaration": 13553,
                        "src": "6760:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7328,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7314,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7294,
                        "src": "6834:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7315,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7296,
                        "src": "6924:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7316,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7305,
                                  "src": "6966:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13567_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo memory"
                                  }
                                },
                                "id": 7317,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13562,
                                "src": "6966:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 7318,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7294,
                                "src": "6989:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6966:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 7320,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6965:43:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 7321,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7305,
                            "src": "7027:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13567_memory_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo memory"
                            }
                          },
                          "id": 7322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13564,
                          "src": "7027:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6965:92:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7324,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7298,
                        "src": "7169:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7325,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7300,
                        "src": "7224:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7268:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7313,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13553,
                      "src": "6794:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$13553_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6794:486:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6760:520:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7335,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7312,
                        "src": "7382:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7329,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6469,
                            "src": "7344:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7332,
                          "indexExpression": {
                            "id": 7330,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7288,
                            "src": "7356:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7344:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7333,
                        "indexExpression": {
                          "id": 7331,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7290,
                          "src": "7362:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7344:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7344:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$13553_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7344:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7337,
                  "nodeType": "ExpressionStatement",
                  "src": "7344:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7338,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7292,
                        "src": "7511:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7511:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7536:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7511:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7358,
                  "nodeType": "IfStatement",
                  "src": "7507:184:35",
                  "trueBody": {
                    "id": 7357,
                    "nodeType": "Block",
                    "src": "7539:152:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7342,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6477,
                                  "src": "7553:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7351,
                                "indexExpression": {
                                  "id": 7343,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7288,
                                  "src": "7572:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7553:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7352,
                              "indexExpression": {
                                "id": 7344,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7292,
                                "src": "7578:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7553:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7353,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7346,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7288,
                                    "src": "7626:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 7347,
                                    "name": "_localAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7290,
                                    "src": "7632:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7345,
                                  "name": "trancheLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6688,
                                  "src": "7612:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address) view returns (uint256)"
                                  }
                                },
                                "id": 7348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7612:34:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7649:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7612:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7553:111:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7354,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7290,
                            "src": "7667:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7553:127:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7356,
                        "nodeType": "ExpressionStatement",
                        "src": "7553:127:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7286,
              "nodeType": "StructuredDocumentation",
              "src": "5944:427:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _pid Index of pool\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "6385:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7288,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "6417:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6409:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6409:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7290,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "6439:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6431:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6431:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7292,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6475:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6462:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7291,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6462:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7294,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "6508:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6500:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7296,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "6544:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6536:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6536:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7298,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "6577:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6569:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6569:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7300,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6620:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7360,
                  "src": "6612:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6612:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6399:242:35"
            },
            "returnParameters": {
              "id": 7302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6651:0:35"
            },
            "scope": 8294,
            "src": "6376:1321:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13742
            ],
            "body": {
              "id": 7403,
              "nodeType": "Block",
              "src": "8351:524:35",
              "statements": [
                {
                  "assignments": [
                    7375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7375,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "8405:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7403,
                      "src": "8397:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8397:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7380,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7376,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6461,
                        "src": "8417:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7378,
                      "indexExpression": {
                        "id": 7377,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7363,
                        "src": "8426:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8417:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13566,
                    "src": "8417:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8397:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8558:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8558:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7387,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7375,
                        "src": "8582:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7388,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7365,
                        "src": "8605:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7382,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6423,
                            "src": "8509:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7381,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "8491:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8491:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "8491:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8491:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7390,
                  "nodeType": "ExpressionStatement",
                  "src": "8491:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7392,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7363,
                        "src": "8701:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8719:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8719:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8743:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7396,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7365,
                        "src": "8759:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7397,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7367,
                        "src": "8782:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7398,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8811:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8811:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7400,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7369,
                        "src": "8840:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7391,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "8668:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8668:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7402,
                  "nodeType": "ExpressionStatement",
                  "src": "8668:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7361,
              "nodeType": "StructuredDocumentation",
              "src": "7703:471:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _pid index of pool to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7371,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8338:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8338:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "8188:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7363,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8224:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7404,
                  "src": "8216:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8216:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7365,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "8246:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7404,
                  "src": "8238:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8238:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7367,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "8273:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7404,
                  "src": "8265:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8265:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7369,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "8306:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7404,
                  "src": "8298:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8206:124:35"
            },
            "returnParameters": {
              "id": 7373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8351:0:35"
            },
            "scope": 8294,
            "src": "8179:696:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13759
            ],
            "body": {
              "id": 7451,
              "nodeType": "Block",
              "src": "9838:544:35",
              "statements": [
                {
                  "assignments": [
                    7425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7425,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "9892:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7451,
                      "src": "9884:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7424,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9884:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7430,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7426,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6461,
                        "src": "9904:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7428,
                      "indexExpression": {
                        "id": 7427,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "9913:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9904:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7429,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13566,
                    "src": "9904:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9884:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10045:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10045:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7437,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7425,
                        "src": "10069:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7438,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "10092:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7432,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6423,
                            "src": "9996:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7431,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "9978:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9978:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "9978:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9978:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7440,
                  "nodeType": "ExpressionStatement",
                  "src": "9978:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7442,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "10197:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7443,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7409,
                        "src": "10215:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7444,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7411,
                        "src": "10237:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7445,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "10266:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7446,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7415,
                        "src": "10289:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7447,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "10318:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7448,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7419,
                        "src": "10347:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7441,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "10164:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10164:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7450,
                  "nodeType": "ExpressionStatement",
                  "src": "10164:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7405,
              "nodeType": "StructuredDocumentation",
              "src": "8881:670:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7421,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7063,
                  "src": "9822:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "9822:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "9565:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7407,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9611:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9603:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9603:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7409,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9633:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9625:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9625:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7411,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9664:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9651:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7410,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9651:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7413,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "9697:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9689:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9689:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7415,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "9724:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9716:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9716:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7417,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "9757:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9749:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9749:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7419,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "9790:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "9782:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9782:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9593:221:35"
            },
            "returnParameters": {
              "id": 7423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9838:0:35"
            },
            "scope": 8294,
            "src": "9556:826:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7507,
              "nodeType": "Block",
              "src": "11346:723:35",
              "statements": [
                {
                  "assignments": [
                    7471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7471,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11400:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7507,
                      "src": "11392:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7470,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11392:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7476,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7472,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6461,
                        "src": "11412:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7474,
                      "indexExpression": {
                        "id": 7473,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "11421:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11412:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7475,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13566,
                    "src": "11412:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11392:40:35"
                },
                {
                  "assignments": [
                    7478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7478,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "11512:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7507,
                      "src": "11504:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11504:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7486,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7483,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7461,
                        "src": "11578:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7484,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7467,
                        "src": "11601:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7480,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7471,
                            "src": "11530:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7479,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15944,
                          "src": "11523:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$15944_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11523:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$15944",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15897,
                      "src": "11523:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11523:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11504:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7494,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7471,
                        "src": "11781:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7495,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7478,
                        "src": "11804:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7488,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6461,
                                "src": "11725:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7490,
                              "indexExpression": {
                                "id": 7489,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7455,
                                "src": "11734:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11725:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7491,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "11725:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7487,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11707:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11707:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11707:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11707:115:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7497,
                  "nodeType": "ExpressionStatement",
                  "src": "11707:115:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7499,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "11917:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7500,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7457,
                        "src": "11935:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7501,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7459,
                        "src": "11957:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7502,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7478,
                        "src": "11986:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7503,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7463,
                        "src": "12008:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7504,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7465,
                        "src": "12037:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7498,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7245,
                      "src": "11895:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11895:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7506,
                  "nodeType": "ExpressionStatement",
                  "src": "11895:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7453,
              "nodeType": "StructuredDocumentation",
              "src": "10388:694:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "11096:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7455,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "11133:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11125:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11125:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7457,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "11155:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11147:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11147:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7459,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "11186:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11173:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7458,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11173:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7461,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11219:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11211:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11211:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11246:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11238:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11238:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7465,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "11279:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11271:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11271:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7467,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11312:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7508,
                  "src": "11304:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11304:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11115:221:35"
            },
            "returnParameters": {
              "id": 7469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11346:0:35"
            },
            "scope": 8294,
            "src": "11087:982:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13770
            ],
            "body": {
              "id": 7551,
              "nodeType": "Block",
              "src": "12496:428:35",
              "statements": [
                {
                  "assignments": [
                    7524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7524,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "12561:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7551,
                      "src": "12537:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7522,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13680,
                          "src": "12537:16:35"
                        },
                        "referencedDeclaration": 13680,
                        "src": "12537:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13680_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7534,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7526,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "12591:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7527,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12609:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12609:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12633:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7530,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7513,
                        "src": "12649:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7531,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "12673:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12699:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7525,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7852,
                      "src": "12568:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13680_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12568:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12537:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7542,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12841:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12841:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7544,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7524,
                          "src": "12865:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13677,
                        "src": "12865:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7536,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6461,
                                "src": "12794:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7538,
                              "indexExpression": {
                                "id": 7537,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7511,
                                "src": "12803:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12794:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7539,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "12794:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7535,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "12776:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12776:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "12776:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12776:111:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7547,
                  "nodeType": "ExpressionStatement",
                  "src": "12776:111:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7548,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "12905:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7549,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13677,
                    "src": "12905:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7521,
                  "id": 7550,
                  "nodeType": "Return",
                  "src": "12898:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7509,
              "nodeType": "StructuredDocumentation",
              "src": "12075:277:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _pid index of pool\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7518,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7517,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "12465:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "12465:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12366:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7511,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "12392:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7552,
                  "src": "12384:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12384:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7513,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "12414:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7552,
                  "src": "12406:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12406:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7515,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "12439:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7552,
                  "src": "12434:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7514,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12434:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12374:83:35"
            },
            "returnParameters": {
              "id": 7521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7552,
                  "src": "12487:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12487:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12486:9:35"
            },
            "scope": 8294,
            "src": "12357:567:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7851,
              "nodeType": "Block",
              "src": "13878:5946:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7572,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7557,
                                  "src": "13983:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14008:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7574,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14000:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7573,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14000:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14000:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13983:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7578,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7559,
                                    "src": "14014:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14014:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14039:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14014:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13983:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7583,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13982:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7584,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7557,
                                  "src": "14062:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7587,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14087:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14079:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7585,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14079:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14079:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14062:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7590,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7559,
                                    "src": "14093:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14093:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14119:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14093:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14062:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7595,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14061:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13982:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14135:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13961:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13961:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "13961:215:35"
                },
                {
                  "assignments": [
                    7602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7602,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "14261:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7851,
                      "src": "14242:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7600,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13553,
                          "src": "14242:11:35"
                        },
                        "referencedDeclaration": 13553,
                        "src": "14242:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7609,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7604,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7555,
                        "src": "14297:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7605,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7561,
                        "src": "14315:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7606,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7559,
                        "src": "14339:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7607,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7557,
                        "src": "14368:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7603,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7907,
                      "src": "14272:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$13553_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14272:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14242:149:35"
                },
                {
                  "assignments": [
                    7612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7612,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nameLocation": "14464:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7851,
                      "src": "14447:22:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7610,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13567,
                          "src": "14447:8:35"
                        },
                        "referencedDeclaration": 13567,
                        "src": "14447:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7616,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7613,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6461,
                      "src": "14472:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7615,
                    "indexExpression": {
                      "id": 7614,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7555,
                      "src": "14481:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14472:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14447:39:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7618,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7602,
                            "src": "14554:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13542,
                          "src": "14554:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14578:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14554:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14581:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14546:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14546:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7624,
                  "nodeType": "ExpressionStatement",
                  "src": "14546:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7626,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7612,
                            "src": "14697:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                            }
                          },
                          "id": 7627,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13564,
                          "src": "14697:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14731:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14697:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14746:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14676:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14676:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7632,
                  "nodeType": "ExpressionStatement",
                  "src": "14676:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7634,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7602,
                            "src": "14862:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7635,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13552,
                          "src": "14862:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14888:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14862:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14891:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14854:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14854:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7640,
                  "nodeType": "ExpressionStatement",
                  "src": "14854:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7642,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7555,
                        "src": "15031:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7641,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6877,
                      "src": "15020:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15020:16:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7644,
                  "nodeType": "ExpressionStatement",
                  "src": "15020:16:35"
                },
                {
                  "assignments": [
                    7646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7646,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "15086:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7851,
                      "src": "15078:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15078:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7659,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7647,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7602,
                                "src": "15105:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7648,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13542,
                              "src": "15105:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 7649,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7612,
                                "src": "15141:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                }
                              },
                              "id": 7650,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accZORRORewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13562,
                              "src": "15141:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15105:57:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7652,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15104:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 7653,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7612,
                          "src": "15178:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7654,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13564,
                        "src": "15178:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15104:105:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 7656,
                        "name": "_tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7602,
                        "src": "15224:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      },
                      "id": 7657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13546,
                      "src": "15224:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15104:139:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15078:165:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7660,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7646,
                      "src": "15319:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15337:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15319:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7746,
                  "nodeType": "IfStatement",
                  "src": "15315:2322:35",
                  "trueBody": {
                    "id": 7745,
                    "nodeType": "Block",
                    "src": "15340:2297:35",
                    "statements": [
                      {
                        "assignments": [
                          7664,
                          7666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7664,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "15436:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7745,
                            "src": "15428:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7663,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15428:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7666,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "15473:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7745,
                            "src": "15465:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7665,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15465:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7674,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7671,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7602,
                              "src": "15588:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7672,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7646,
                              "src": "15618:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7668,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6481,
                                  "src": "15529:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7667,
                                "name": "IZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15071,
                                "src": "15505:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$15071_$",
                                  "typeString": "type(contract IZorroControllerActions)"
                                }
                              },
                              "id": 7669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15505:42:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorroControllerActions_$15071",
                                "typeString": "contract IZorroControllerActions"
                              }
                            },
                            "id": 7670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15052,
                            "src": "15505:61:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$13553_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15505:146:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15410:241:35"
                      },
                      {
                        "condition": {
                          "id": 7675,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7565,
                          "src": "15670:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7743,
                          "nodeType": "Block",
                          "src": "16603:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7708,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7664,
                                  "src": "16707:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16721:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16707:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7717,
                              "nodeType": "IfStatement",
                              "src": "16703:108:35",
                              "trueBody": {
                                "id": 7716,
                                "nodeType": "Block",
                                "src": "16724:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7712,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7557,
                                          "src": "16765:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7713,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7664,
                                          "src": "16780:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7711,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7001,
                                        "src": "16746:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16746:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7715,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16746:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7718,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6453,
                                  "src": "16833:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7719,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6455,
                                  "src": "16844:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16833:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7741,
                                "nodeType": "Block",
                                "src": "17275:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7732,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7666,
                                        "src": "17487:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17505:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17487:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7740,
                                    "nodeType": "IfStatement",
                                    "src": "17483:112:35",
                                    "trueBody": {
                                      "id": 7739,
                                      "nodeType": "Block",
                                      "src": "17508:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7736,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7666,
                                                "src": "17556:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7735,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6928,
                                              "src": "17534:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7737,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17534:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7738,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17534:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7742,
                              "nodeType": "IfStatement",
                              "src": "16829:784:35",
                              "trueBody": {
                                "id": 7731,
                                "nodeType": "Block",
                                "src": "16857:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7721,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7666,
                                        "src": "17042:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17060:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17042:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7730,
                                    "nodeType": "IfStatement",
                                    "src": "17038:213:35",
                                    "trueBody": {
                                      "id": 7729,
                                      "nodeType": "Block",
                                      "src": "17063:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7725,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6427,
                                                "src": "17193:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7726,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7666,
                                                "src": "17212:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7724,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7001,
                                              "src": "17174:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7727,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17174:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7728,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17174:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 7744,
                        "nodeType": "IfStatement",
                        "src": "15666:1961:35",
                        "trueBody": {
                          "id": 7707,
                          "nodeType": "Block",
                          "src": "15691:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7676,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7569,
                                    "src": "15752:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7678,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13679,
                                  "src": "15752:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7679,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7664,
                                  "src": "15776:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15752:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7681,
                              "nodeType": "ExpressionStatement",
                              "src": "15752:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7682,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6453,
                                  "src": "15810:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7683,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6455,
                                  "src": "15821:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15810:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7705,
                                "nodeType": "Block",
                                "src": "16248:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7698,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7696,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7666,
                                        "src": "16457:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7697,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16475:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16457:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7704,
                                    "nodeType": "IfStatement",
                                    "src": "16453:112:35",
                                    "trueBody": {
                                      "id": 7703,
                                      "nodeType": "Block",
                                      "src": "16478:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7700,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7666,
                                                "src": "16526:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7699,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6928,
                                              "src": "16504:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7701,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16504:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7702,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16504:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7706,
                              "nodeType": "IfStatement",
                              "src": "15806:777:35",
                              "trueBody": {
                                "id": 7695,
                                "nodeType": "Block",
                                "src": "15834:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7687,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7685,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7666,
                                        "src": "16015:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16033:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16015:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7694,
                                    "nodeType": "IfStatement",
                                    "src": "16011:213:35",
                                    "trueBody": {
                                      "id": 7693,
                                      "nodeType": "Block",
                                      "src": "16036:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7689,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6427,
                                                "src": "16166:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7690,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7666,
                                                "src": "16185:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7688,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7001,
                                              "src": "16147:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7691,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16147:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7692,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16147:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17723:13:35",
                    "subExpression": {
                      "id": 7747,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7563,
                      "src": "17724:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7850,
                  "nodeType": "IfStatement",
                  "src": "17719:2099:35",
                  "trueBody": {
                    "id": 7849,
                    "nodeType": "Block",
                    "src": "17738:2080:35",
                    "statements": [
                      {
                        "id": 7839,
                        "nodeType": "Block",
                        "src": "17931:1617:35",
                        "statements": [
                          {
                            "assignments": [
                              7750
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 7750,
                                "mutability": "mutable",
                                "name": "_resolvedLocalAcct",
                                "nameLocation": "18005:18:35",
                                "nodeType": "VariableDeclaration",
                                "scope": 7839,
                                "src": "17997:26:35",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 7749,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17997:7:35",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 7755,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 7752,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7557,
                                  "src": "18064:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7753,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7559,
                                  "src": "18099:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 7751,
                                "name": "_getLocalAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7285,
                                "src": "18026:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) pure returns (address)"
                                }
                              },
                              "id": 7754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18026:106:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "17997:135:35"
                          },
                          {
                            "id": 7801,
                            "nodeType": "Block",
                            "src": "18180:829:35",
                            "statements": [
                              {
                                "assignments": [
                                  7757
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7757,
                                    "mutability": "mutable",
                                    "name": "_vaultAddr",
                                    "nameLocation": "18243:10:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7801,
                                    "src": "18235:18:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "typeName": {
                                      "id": 7756,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18235:7:35",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7762,
                                "initialValue": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7758,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6461,
                                      "src": "18256:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 7760,
                                    "indexExpression": {
                                      "id": 7759,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7555,
                                      "src": "18265:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18256:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 7761,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "vault",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13566,
                                  "src": "18256:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18235:41:35"
                              },
                              {
                                "assignments": [
                                  7765
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7765,
                                    "mutability": "mutable",
                                    "name": "_vault",
                                    "nameLocation": "18305:6:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7801,
                                    "src": "18298:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVault_$15944",
                                      "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                      "id": 7764,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 7763,
                                        "name": "IVault",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 15944,
                                        "src": "18298:6:35"
                                      },
                                      "referencedDeclaration": 15944,
                                      "src": "18298:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$15944",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7769,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 7767,
                                      "name": "_vaultAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7757,
                                      "src": "18321:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7766,
                                    "name": "IVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15944,
                                    "src": "18314:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVault_$15944_$",
                                      "typeString": "type(contract IVault)"
                                    }
                                  },
                                  "id": 7768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18314:18:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVault_$15944",
                                    "typeString": "contract IVault"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18298:34:35"
                              },
                              {
                                "assignments": [
                                  7771
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7771,
                                    "mutability": "mutable",
                                    "name": "_stakedWantAmt",
                                    "nameLocation": "18594:14:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7801,
                                    "src": "18586:22:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 7770,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18586:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7794,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 7793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7784,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 7772,
                                              "name": "_tranche",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7602,
                                              "src": "18612:8:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                              }
                                            },
                                            "id": 7773,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "contribution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13542,
                                            "src": "18612:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "31653132",
                                            "id": 7774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18660:4:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000_by_1",
                                              "typeString": "int_const 1000000000000"
                                            },
                                            "value": "1e12"
                                          },
                                          "src": "18612:52:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 7782,
                                              "name": "_vaultAddr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7757,
                                              "src": "18775:10:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "arguments": [],
                                                  "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                      "id": 7777,
                                                      "name": "_vault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 7765,
                                                      "src": "18705:6:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVault_$15944",
                                                        "typeString": "contract IVault"
                                                      }
                                                    },
                                                    "id": 7778,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "vaultActions",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15873,
                                                    "src": "18705:19:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                      "typeString": "function () view external returns (address)"
                                                    }
                                                  },
                                                  "id": 7779,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18705:21:35",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 7776,
                                                "name": "IVaultActions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15486,
                                                "src": "18691:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultActions_$15486_$",
                                                  "typeString": "type(contract IVaultActions)"
                                                }
                                              },
                                              "id": 7780,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18691:36:35",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVaultActions_$15486",
                                                "typeString": "contract IVaultActions"
                                              }
                                            },
                                            "id": 7781,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentWantEquity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15476,
                                            "src": "18691:54:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                              "typeString": "function (address) view external returns (uint256)"
                                            }
                                          },
                                          "id": 7783,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18691:120:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18612:199:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7785,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18611:201:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 7786,
                                            "name": "_tranche",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7602,
                                            "src": "18816:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                            }
                                          },
                                          "id": 7787,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timeMultiplier",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13544,
                                          "src": "18816:23:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "id": 7788,
                                              "name": "_vault",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7765,
                                              "src": "18842:6:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVault_$15944",
                                                "typeString": "contract IVault"
                                              }
                                            },
                                            "id": 7789,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sharesTotal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15878,
                                            "src": "18842:18:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view external returns (uint256)"
                                            }
                                          },
                                          "id": 7790,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18842:20:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18816:46:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7792,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18815:48:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18611:252:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18586:277:35"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 7798,
                                      "name": "_stakedWantAmt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7771,
                                      "src": "18975:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 7795,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7765,
                                      "src": "18950:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$15944",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawWantToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15911,
                                    "src": "18950:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) external returns (uint256)"
                                    }
                                  },
                                  "id": 7799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18950:40:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7800,
                                "nodeType": "ExpressionStatement",
                                "src": "18950:40:35"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "id": 7810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7802,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7612,
                                  "src": "19067:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                  }
                                },
                                "id": 7804,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13564,
                                "src": "19067:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7805,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7612,
                                    "src": "19121:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 7806,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalTrancheContributions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13564,
                                  "src": "19121:31:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 7807,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7602,
                                    "src": "19175:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 7808,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13542,
                                  "src": "19175:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19121:75:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19067:129:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7811,
                            "nodeType": "ExpressionStatement",
                            "src": "19067:129:35"
                          },
                          {
                            "expression": {
                              "id": 7825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7812,
                                  "name": "_res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7569,
                                  "src": "19263:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                  }
                                },
                                "id": 7814,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "wantAmt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13677,
                                "src": "19263:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7822,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "19347:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      ],
                                      "id": 7821,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19339:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7820,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19339:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19339:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 7816,
                                          "name": "_pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7612,
                                          "src": "19296:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolInfo_$13567_storage_ptr",
                                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                          }
                                        },
                                        "id": 7817,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "want",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13556,
                                        "src": "19296:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      ],
                                      "id": 7815,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2635,
                                      "src": "19278:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 7818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19278:29:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 7819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2574,
                                  "src": "19278:39:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 7824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19278:92:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19263:107:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7826,
                            "nodeType": "ExpressionStatement",
                            "src": "19263:107:35"
                          },
                          {
                            "expression": {
                              "id": 7837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 7827,
                                        "name": "trancheInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6469,
                                        "src": "19431:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                        }
                                      },
                                      "id": 7831,
                                      "indexExpression": {
                                        "id": 7828,
                                        "name": "_pid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7555,
                                        "src": "19443:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19431:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 7832,
                                    "indexExpression": {
                                      "id": 7829,
                                      "name": "_resolvedLocalAcct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7750,
                                      "src": "19449:18:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19431:37:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 7833,
                                  "indexExpression": {
                                    "id": 7830,
                                    "name": "_trancheId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7561,
                                    "src": "19469:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19431:49:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                  }
                                },
                                "id": 7834,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "exitedVaultAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13552,
                                "src": "19431:84:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 7835,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "19518:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 7836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19518:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19431:102:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7838,
                            "nodeType": "ExpressionStatement",
                            "src": "19431:102:35"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7841,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7557,
                              "src": "19667:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7842,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7559,
                              "src": "19698:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7843,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7555,
                              "src": "19731:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7844,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7561,
                              "src": "19753:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 7845,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7569,
                                "src": "19781:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                                  "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 7846,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13677,
                              "src": "19781:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7840,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13702,
                            "src": "19641:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 7847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19641:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7848,
                        "nodeType": "EmitStatement",
                        "src": "19636:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7553,
              "nodeType": "StructuredDocumentation",
              "src": "12930:690:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _pid index of pool\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 7852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "13634:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7555,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13661:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13653:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13653:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7557,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "13683:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13675:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13675:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "13719:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13706:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7558,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13706:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7561,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "13752:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13744:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13744:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7563,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "13777:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13772:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13772:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7565,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "13804:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13799:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7564,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13799:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13643:186:35"
            },
            "returnParameters": {
              "id": 7570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7569,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "13872:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7852,
                  "src": "13848:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7568,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7567,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13680,
                      "src": "13848:16:35"
                    },
                    "referencedDeclaration": 13680,
                    "src": "13848:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13680_storage_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13847:30:35"
            },
            "scope": 8294,
            "src": "13625:6199:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7906,
              "nodeType": "Block",
              "src": "20515:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7867,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7861,
                      "src": "20529:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20554:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20546:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20546:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20546:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20529:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7904,
                    "nodeType": "Block",
                    "src": "20679:237:35",
                    "statements": [
                      {
                        "assignments": [
                          7885
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7885,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "20739:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7904,
                            "src": "20731:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7884,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20731:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7893,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7886,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6477,
                                "src": "20754:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 7888,
                              "indexExpression": {
                                "id": 7887,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7855,
                                "src": "20773:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20754:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 7890,
                            "indexExpression": {
                              "id": 7889,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7859,
                              "src": "20779:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20754:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 7892,
                          "indexExpression": {
                            "id": 7891,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7857,
                            "src": "20813:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20754:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20731:106:35"
                      },
                      {
                        "expression": {
                          "id": 7902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7894,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7865,
                            "src": "20851:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7895,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6469,
                                  "src": "20862:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7897,
                                "indexExpression": {
                                  "id": 7896,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7855,
                                  "src": "20874:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20862:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7899,
                              "indexExpression": {
                                "id": 7898,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7885,
                                "src": "20880:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20862:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7901,
                            "indexExpression": {
                              "id": 7900,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7857,
                              "src": "20894:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20862:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20851:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7903,
                        "nodeType": "ExpressionStatement",
                        "src": "20851:54:35"
                      }
                    ]
                  },
                  "id": 7905,
                  "nodeType": "IfStatement",
                  "src": "20525:391:35",
                  "trueBody": {
                    "id": 7883,
                    "nodeType": "Block",
                    "src": "20558:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7873,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7865,
                            "src": "20607:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7874,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6469,
                                  "src": "20618:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7876,
                                "indexExpression": {
                                  "id": 7875,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7855,
                                  "src": "20630:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20618:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7878,
                              "indexExpression": {
                                "id": 7877,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7861,
                                "src": "20636:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20618:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7880,
                            "indexExpression": {
                              "id": 7879,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7857,
                              "src": "20651:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20618:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20607:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7882,
                        "nodeType": "ExpressionStatement",
                        "src": "20607:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7853,
              "nodeType": "StructuredDocumentation",
              "src": "19830:482:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _pid Pool ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 7907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "20326:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7855,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "20355:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "20347:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20347:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7857,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "20377:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "20369:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20369:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7859,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "20410:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "20397:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20397:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7861,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "20443:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "20435:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20435:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20337:125:35"
            },
            "returnParameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7865,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "20505:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "20486:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$13553_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 7864,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7863,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13553,
                      "src": "20486:11:35"
                    },
                    "referencedDeclaration": 13553,
                    "src": "20486:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20485:29:35"
            },
            "scope": 8294,
            "src": "20317:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13783
            ],
            "body": {
              "id": 7947,
              "nodeType": "Block",
              "src": "21591:451:35",
              "statements": [
                {
                  "assignments": [
                    7924,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7924,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "21641:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7947,
                      "src": "21633:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7923,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21633:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7935,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7926,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21693:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21693:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21717:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7929,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7910,
                        "src": "21733:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7930,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "21751:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7931,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7914,
                        "src": "21775:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 7932,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7916,
                        "src": "21801:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21833:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7925,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8082,
                      "src": "21657:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21657:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21632:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7940,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21963:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21963:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7942,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7924,
                        "src": "21987:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7937,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6423,
                            "src": "21918:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7936,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "21900:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21900:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "21900:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21900:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7944,
                  "nodeType": "ExpressionStatement",
                  "src": "21900:107:35"
                },
                {
                  "expression": {
                    "id": 7945,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7924,
                    "src": "22025:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7922,
                  "id": 7946,
                  "nodeType": "Return",
                  "src": "22018:17:35"
                }
              ]
            },
            "documentation": {
              "id": 7908,
              "nodeType": "StructuredDocumentation",
              "src": "20928:470:35",
              "text": "@notice Withdraws funds from a pool and converts the Want token into USD\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 7948,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7919,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7918,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "21560:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "21560:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "21412:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7910,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "21451:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "21443:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21443:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7912,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "21473:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "21465:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21465:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7914,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "21498:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "21493:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21493:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7916,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "21528:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "21520:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21520:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21433:119:35"
            },
            "returnParameters": {
              "id": 7922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "21582:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21582:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21581:9:35"
            },
            "scope": 8294,
            "src": "21403:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13802
            ],
            "body": {
              "id": 8011,
              "nodeType": "Block",
              "src": "23114:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7970,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7966,
                          "src": "23170:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7971,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7968,
                          "src": "23182:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7972,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23169:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7974,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7951,
                          "src": "23239:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7975,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7953,
                          "src": "23261:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7976,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7955,
                          "src": "23290:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7977,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7957,
                          "src": "23308:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7978,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7959,
                          "src": "23332:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 7979,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7961,
                          "src": "23358:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23390:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7973,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8082,
                        "src": "23203:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 7981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23203:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23169:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7983,
                  "nodeType": "ExpressionStatement",
                  "src": "23169:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7984,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7966,
                      "src": "23470:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23483:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23470:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7997,
                  "nodeType": "IfStatement",
                  "src": "23466:164:35",
                  "trueBody": {
                    "id": 7996,
                    "nodeType": "Block",
                    "src": "23486:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7991,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "23567:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23567:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7993,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7966,
                              "src": "23595:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7988,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6423,
                                  "src": "23518:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7987,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23500:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 7989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23500:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 7990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23500:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 7994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23500:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7995,
                        "nodeType": "ExpressionStatement",
                        "src": "23500:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7998,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7968,
                      "src": "23759:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23779:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23759:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8010,
                  "nodeType": "IfStatement",
                  "src": "23755:167:35",
                  "trueBody": {
                    "id": 8009,
                    "nodeType": "Block",
                    "src": "23782:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8005,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6429,
                              "src": "23851:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8006,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7968,
                              "src": "23880:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8002,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6421,
                                  "src": "23814:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8001,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23796:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23796:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23796:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23796:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8008,
                        "nodeType": "ExpressionStatement",
                        "src": "23796:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7949,
              "nodeType": "StructuredDocumentation",
              "src": "22048:730:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8012,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7963,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7063,
                  "src": "23030:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "23030:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "22792:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7951,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "22841:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22833:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22833:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7953,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "22872:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22859:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7952,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22859:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7955,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "22905:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22897:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22897:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7957,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "22927:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22919:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22919:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7959,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "22952:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22947:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22947:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7961,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "22982:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "22974:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22974:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22823:183:35"
            },
            "returnParameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7966,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "23071:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "23063:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23063:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7968,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "23091:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8012,
                  "src": "23083:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23083:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23062:47:35"
            },
            "scope": 8294,
            "src": "22783:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8081,
              "nodeType": "Block",
              "src": "25077:793:35",
              "statements": [
                {
                  "assignments": [
                    8035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8035,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "25125:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8081,
                      "src": "25117:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8034,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25117:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8040,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8036,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6461,
                        "src": "25138:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8038,
                      "indexExpression": {
                        "id": 8037,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8019,
                        "src": "25147:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25138:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 8039,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13566,
                    "src": "25138:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25117:41:35"
                },
                {
                  "assignments": [
                    8043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8043,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "25268:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8081,
                      "src": "25244:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8042,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8041,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13680,
                          "src": "25244:16:35"
                        },
                        "referencedDeclaration": 13680,
                        "src": "25244:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13680_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8045,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8019,
                        "src": "25298:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8046,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8015,
                        "src": "25316:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8047,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8017,
                        "src": "25338:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8048,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "25367:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8049,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8023,
                        "src": "25391:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8050,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8027,
                        "src": "25417:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8044,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7852,
                      "src": "25275:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13680_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25275:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25244:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8060,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8035,
                        "src": "25598:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8061,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8043,
                          "src": "25622:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13677,
                        "src": "25622:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8054,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6461,
                                "src": "25542:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8056,
                              "indexExpression": {
                                "id": 8055,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8019,
                                "src": "25551:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25542:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "25542:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8053,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "25524:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25524:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "25524:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25524:120:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8064,
                  "nodeType": "ExpressionStatement",
                  "src": "25524:120:35"
                },
                {
                  "expression": {
                    "id": 8074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8065,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8030,
                      "src": "25688:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8070,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8043,
                            "src": "25757:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                              "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13677,
                          "src": "25757:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8072,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8025,
                          "src": "25783:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8067,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8035,
                              "src": "25708:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8066,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15944,
                            "src": "25701:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$15944_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25701:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$15944",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15920,
                        "src": "25701:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25701:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25688:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8075,
                  "nodeType": "ExpressionStatement",
                  "src": "25688:123:35"
                },
                {
                  "expression": {
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8076,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8032,
                      "src": "25822:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8077,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8043,
                        "src": "25842:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8078,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13679,
                      "src": "25842:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25822:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "25822:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8013,
              "nodeType": "StructuredDocumentation",
              "src": "23934:824:35",
              "text": "@notice Private function for withdrawing funds from a pool and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "24772:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8015,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "24812:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24804:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24804:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8017,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "24843:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24830:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8016,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24830:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8019,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "24876:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24868:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24868:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8021,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "24898:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24890:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24890:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8023,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "24923:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24918:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8022,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24918:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8025,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "24953:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24945:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24945:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8027,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "24986:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "24981:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8026,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24981:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24794:217:35"
            },
            "returnParameters": {
              "id": 8033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8030,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "25038:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "25030:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25030:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8032,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "25058:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8082,
                  "src": "25050:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25050:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25029:47:35"
            },
            "scope": 8294,
            "src": "24763:1107:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13813
            ],
            "body": {
              "id": 8163,
              "nodeType": "Block",
              "src": "26451:1037:35",
              "statements": [
                {
                  "assignments": [
                    8097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8097,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "26515:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8163,
                      "src": "26507:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8096,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26507:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8107,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8098,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6469,
                            "src": "26532:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8100,
                          "indexExpression": {
                            "id": 8099,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8085,
                            "src": "26544:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26532:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8103,
                        "indexExpression": {
                          "expression": {
                            "id": 8101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26554:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26554:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26532:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8105,
                      "indexExpression": {
                        "id": 8104,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8087,
                        "src": "26579:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26532:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8106,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13548,
                    "src": "26532:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26507:121:35"
                },
                {
                  "assignments": [
                    8109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8109,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "26646:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8163,
                      "src": "26638:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26638:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8119,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8110,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6469,
                            "src": "26663:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8112,
                          "indexExpression": {
                            "id": 8111,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8085,
                            "src": "26675:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26663:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8115,
                        "indexExpression": {
                          "expression": {
                            "id": 8113,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26685:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26685:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26663:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13553_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8117,
                      "indexExpression": {
                        "id": 8116,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8087,
                        "src": "26710:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26663:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13553_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8118,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13550,
                    "src": "26663:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26638:111:35"
                },
                {
                  "assignments": [
                    8121,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8121,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "26789:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8163,
                      "src": "26781:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26781:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8132,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26843:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26843:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26867:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8126,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8085,
                        "src": "26883:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8127,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8087,
                        "src": "26905:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26933:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8129,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8091,
                        "src": "26952:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26984:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8122,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8082,
                      "src": "26807:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26807:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26780:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8137,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6461,
                            "src": "27108:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8139,
                          "indexExpression": {
                            "id": 8138,
                            "name": "_toPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8089,
                            "src": "27117:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27108:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                          }
                        },
                        "id": 8140,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13566,
                        "src": "27108:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8141,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "27144:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8134,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6423,
                            "src": "27063:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8133,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "27045:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27045:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "27045:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27045:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8143,
                  "nodeType": "ExpressionStatement",
                  "src": "27045:121:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8145,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8089,
                        "src": "27231:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27251:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27251:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27275:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8149,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "27291:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8150,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8097,
                        "src": "27317:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8151,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8109,
                        "src": "27345:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8152,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8091,
                        "src": "27373:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8144,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7508,
                      "src": "27198:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27198:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8154,
                  "nodeType": "ExpressionStatement",
                  "src": "27198:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27436:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27436:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8158,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8085,
                        "src": "27448:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8159,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8087,
                        "src": "27458:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8160,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8089,
                        "src": "27474:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8155,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13712,
                      "src": "27417:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27417:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8162,
                  "nodeType": "EmitStatement",
                  "src": "27412:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8083,
              "nodeType": "StructuredDocumentation",
              "src": "25876:398:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromPid index of pool FROM\n @param _fromTrancheId index of tranche FROM\n @param _toPid index of pool TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8093,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "26438:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "26438:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "26288:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8085,
                  "mutability": "mutable",
                  "name": "_fromPid",
                  "nameLocation": "26324:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8164,
                  "src": "26316:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26316:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8087,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "26350:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8164,
                  "src": "26342:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26342:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8089,
                  "mutability": "mutable",
                  "name": "_toPid",
                  "nameLocation": "26382:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8164,
                  "src": "26374:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26374:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8091,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "26406:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8164,
                  "src": "26398:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26398:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26306:124:35"
            },
            "returnParameters": {
              "id": 8095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26451:0:35"
            },
            "scope": 8294,
            "src": "26279:1209:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13818
            ],
            "body": {
              "id": 8234,
              "nodeType": "Block",
              "src": "27654:613:35",
              "statements": [
                {
                  "assignments": [
                    8173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8173,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "27755:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8234,
                      "src": "27747:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27747:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8175,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8167,
                        "src": "27783:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27789:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27789:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8174,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6688,
                      "src": "27769:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27769:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27747:53:35"
                },
                {
                  "body": {
                    "id": 8200,
                    "nodeType": "Block",
                    "src": "27858:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8191,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8167,
                              "src": "27882:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "27888:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27888:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27900:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8195,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8181,
                              "src": "27904:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27909:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27916:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8190,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7852,
                            "src": "27872:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13680_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27872:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13680_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8199,
                        "nodeType": "ExpressionStatement",
                        "src": "27872:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8184,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8181,
                      "src": "27832:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8185,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8173,
                      "src": "27838:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27832:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8201,
                  "initializationExpression": {
                    "assignments": [
                      8181
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8181,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "27823:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8201,
                        "src": "27815:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27815:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8183,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27829:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27815:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "27851:5:35",
                      "subExpression": {
                        "id": 8187,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8181,
                        "src": "27853:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8189,
                    "nodeType": "ExpressionStatement",
                    "src": "27851:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "27810:123:35"
                },
                {
                  "assignments": [
                    8203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8203,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "27993:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8234,
                      "src": "27985:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27985:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8216,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8213,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "28074:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8294",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28066:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28066:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28066:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8205,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6461,
                                "src": "28022:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8207,
                              "indexExpression": {
                                "id": 8206,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8167,
                                "src": "28031:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28022:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13556,
                            "src": "28022:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8204,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "28004:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28004:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "28004:48:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28004:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27985:104:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8217,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8203,
                      "src": "28103:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28114:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "28103:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8233,
                  "nodeType": "IfStatement",
                  "src": "28099:162:35",
                  "trueBody": {
                    "id": 8232,
                    "nodeType": "Block",
                    "src": "28117:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8227,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "28200:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "28200:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8229,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8203,
                              "src": "28228:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8221,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6461,
                                      "src": "28149:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13567_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8223,
                                    "indexExpression": {
                                      "id": 8222,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8167,
                                      "src": "28158:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28149:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13567_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 8224,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13556,
                                  "src": "28149:19:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8220,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "28131:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28131:38:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "28131:51:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28131:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8231,
                        "nodeType": "ExpressionStatement",
                        "src": "28131:119:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8165,
              "nodeType": "StructuredDocumentation",
              "src": "27494:100:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a pool\n @param _pid index of pool"
            },
            "functionSelector": "958e2d31",
            "id": 8235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8169,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "27641:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "27641:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "27608:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8167,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "27628:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8235,
                  "src": "27620:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27620:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27619:14:35"
            },
            "returnParameters": {
              "id": 8171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27654:0:35"
            },
            "scope": 8294,
            "src": "27599:668:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13825
            ],
            "body": {
              "id": 8264,
              "nodeType": "Block",
              "src": "28656:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8245,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6453,
                      "src": "28713:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8246,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6455,
                      "src": "28724:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28713:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8262,
                    "nodeType": "Block",
                    "src": "28900:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8258,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8240,
                              "src": "29001:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8259,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8238,
                              "src": "29015:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8255,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6421,
                                  "src": "28989:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8254,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13536,
                                "src": "28982:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$13536_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28982:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$13536",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13535,
                            "src": "28982:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28982:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8261,
                        "nodeType": "ExpressionStatement",
                        "src": "28982:45:35"
                      }
                    ]
                  },
                  "id": 8263,
                  "nodeType": "IfStatement",
                  "src": "28709:329:35",
                  "trueBody": {
                    "id": 8253,
                    "nodeType": "Block",
                    "src": "28737:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8249,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8238,
                              "src": "28857:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8250,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8240,
                              "src": "28870:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8248,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6959,
                            "src": "28831:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28831:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8252,
                        "nodeType": "ExpressionStatement",
                        "src": "28831:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8236,
              "nodeType": "StructuredDocumentation",
              "src": "28311:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8242,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7063,
                  "src": "28636:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28636:15:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "28552:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8238,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "28578:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8265,
                  "src": "28570:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28570:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8240,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "28599:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8265,
                  "src": "28591:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28591:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28569:43:35"
            },
            "returnParameters": {
              "id": 8244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28656:0:35"
            },
            "scope": 8294,
            "src": "28543:501:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13832
            ],
            "body": {
              "id": 8292,
              "nodeType": "Block",
              "src": "29586:404:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8281,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6429,
                        "src": "29776:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8282,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8268,
                          "src": "29801:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8283,
                          "name": "_totalSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8270,
                          "src": "29816:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29801:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8278,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6421,
                            "src": "29743:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8277,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "29725:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29725:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "29725:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29725:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8286,
                  "nodeType": "ExpressionStatement",
                  "src": "29725:114:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8288,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8270,
                        "src": "29950:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8289,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6427,
                        "src": "29965:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8287,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6959,
                      "src": "29924:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29924:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8291,
                  "nodeType": "ExpressionStatement",
                  "src": "29924:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8266,
              "nodeType": "StructuredDocumentation",
              "src": "29050:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8273,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8272,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6392,
                  "src": "29529:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29529:30:35"
              },
              {
                "id": 8275,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8274,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6407,
                  "src": "29568:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29568:13:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "29438:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8268,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "29469:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8293,
                  "src": "29461:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29461:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8270,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "29491:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8293,
                  "src": "29483:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29483:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29460:45:35"
            },
            "returnParameters": {
              "id": 8276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29586:0:35"
            },
            "scope": 8294,
            "src": "29429:561:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8295,
        "src": "472:29520:35",
        "usedErrors": []
      }
    ],
    "src": "33:29960:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-12T21:56:16.221Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_pid": "index of pool",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromPid": "index of pool FROM",
          "_fromTrancheId": "index of tranche FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toPid": "index of pool TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_pid": "index of pool",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_pid": "index of pool"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setControllerActions(address)": {
        "notice": "Setter: Set controller actions contract address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a pool"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a pool and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}