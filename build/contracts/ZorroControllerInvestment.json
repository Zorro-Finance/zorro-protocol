{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromVid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toVid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerActions",
          "type": "address"
        }
      ],
      "name": "setControllerActions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        }
      ],
      "name": "updateVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromVid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toVid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromVid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toVid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerActions\",\"type\":\"address\"}],\"name\":\"setControllerActions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromVid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toVid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"}],\"name\":\"updateVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultMapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_vid\":\"index of vault\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vid\":\"index of vault to deposit into\",\"_weeksCommitted\":\"how many weeks to commit to the vault (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_vid\":\"index of vault to deposit into\",\"_weeksCommitted\":\"how many weeks to commit to the vault (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_user\":\"wallet address of user\",\"_vid\":\"Index of vault in vaultInfo array\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromTrancheId\":\"index of tranche FROM\",\"_fromVid\":\"index of vault FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toVid\":\"index of vault TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateVault(uint256)\":{\"params\":{\"_vid\":\"index of vault in vaultInfo array\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"vaultLength()\":{\"returns\":{\"vaultCount\":\"number of vaults\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_vid\":\"index of vault\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault to deposit into\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault to deposit into\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setControllerActions(address)\":{\"notice\":\"Setter: Set controller actions contract address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given vault\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updateVault(uint256)\":{\"notice\":\"Update reward variables of the given vault to be up-to-date.\"},\"vaultLength()\":{\"notice\":\"Number of vaults in the Zorro protocol\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a vault\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a vault and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0x88483aacba01b7554cf18803998928222a114efb4b0872781d52bcd3210255d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69928dd8ee18db2d8f0e6969f41347a16897a1287eff8effe4ea2f79caefda68\",\"dweb:/ipfs/QmcEeSK7zpFT3JSMojAyU57Hdd4857RndNQNnykF1uFSdW\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0xe939687f8651df3734458dfae1dd19bcf82a91568f4f5da2748f94b7c8369521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d106cc7b09db575aa06c07631a8d99ee71c0a6f48a7efa698dec4c3e4c236d12\",\"dweb:/ipfs/QmViayoKBY8bvLHu5oXQdV3Utsd8ypeteVf1FUmyAz6m3F\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x6657020ec1e3526ef6838d4f65a27bb76d72d39e66dde1a3b51bb36c5494d6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ff6caa48d110a395e6f704837b54ea2085774c4492ed147dc6a7ec1f7dd9b3\",\"dweb:/ipfs/Qmbup1JMn8dcCarheQao9JncZr3FhsKbscc2Xmw82mxeEg\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\":{\"keccak256\":\"0x95bda45ac60370f6cf11608ab4c4c5c2801093b7af93593e19d7d5fc2979f042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72c3dec17debfdbcea5806d63ca290dcf99b7b53bff2e1c930fdc6e572d43f04\",\"dweb:/ipfs/QmVffK55p7VuCLB2j7QzEGkmbYU9Q2o1t8ikAGm7hR2Gmc\"]},\"project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol\":{\"keccak256\":\"0xa0516cd798548ad39bfbb96a6cbe792f9fd00a125b13d3851f21cc485f716762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://775a52cfad896349e44dde94cd9646dc8198d96092d63890dcd3bae211045e6d\",\"dweb:/ipfs/QmR2s3zkjQADN4ir3NN22dUuaA9pc9NxJkS1eh1waQmPCE\"]},\"project:/contracts/interfaces/Zorro/IZorro.sol\":{\"keccak256\":\"0x284b2d31511ea30be2fad6dd9d82ee9fe9b2f83781771085f1efbbe61f35f90e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adf06657f42401bb5e1c2fbb01df2c1eb214f4c0701f6aebf2d2dbb8388c31bb\",\"dweb:/ipfs/QmQ7Y8tbTD7phUfDmr97fv4D8NUkf8QXAyVwuMVoSzAVio\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol\":{\"keccak256\":\"0xab55d48af4640e61d209cb0eb3a8442599b846497f92ea3b3c12f239ae6b3759\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3341df25c0b3d76788501ed529eac637c99e4c304b58bea5b397f341ac545da3\",\"dweb:/ipfs/QmYUvtYXZBWBVmmu14tzm7hxcaCLGWBKjz9fGEKj3BRggA\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0x3887d6cae468fb194fa98a78db9f38c45a794661b399ea8ac938157070932a38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154843e23e63725123b90e43bd6e61b107592c70e7c5f30154c6b66723e5b6f\",\"dweb:/ipfs/QmcWbttA3q5PxH11hgHuYQ5yf6rx3AB8LfedGMZxfqxsNY\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x12474ac6678158bda55a1ce0fb982a920253ab3b72084bb8b3219f1bbdf66a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a157fa3130e187f4354a5398eb8271ba2733642b3e7e49bfd51d24de874d6c25\",\"dweb:/ipfs/QmXT3Z4rEHhJLzVZpccJeseefLQXkxXRcvc76KhvSDby68\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22188:105",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:105",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:105",
                "type": ""
              }
            ],
            "src": "14:316:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "384:147:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "394:29:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "416:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "403:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:20:105"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "394:5:105"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "509:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "518:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "521:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "511:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "511:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "511:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "445:5:105"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "456:5:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "463:42:105",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "452:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "452:54:105"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "442:2:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "442:65:105"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:73:105"
                  },
                  "nodeType": "YulIf",
                  "src": "432:93:105"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "363:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "374:5:105",
                "type": ""
              }
            ],
            "src": "335:196:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "623:173:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "669:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "678:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "681:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "671:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "671:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "671:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "644:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "653:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "640:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "640:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "636:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "636:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "633:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "694:39:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "723:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "704:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:29:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "694:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:48:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "775:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "786:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "771:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "752:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:38:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "581:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "592:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "604:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "612:6:105",
                "type": ""
              }
            ],
            "src": "536:260:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:76:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "912:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "924:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "935:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "912:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "954:9:105"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "965:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:25:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "947:25:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "871:9:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "882:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "893:4:105",
                "type": ""
              }
            ],
            "src": "801:177:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:167:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1116:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1128:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1118:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1118:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1118:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1091:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1100:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1112:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1083:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "1080:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1164:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:48:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1216:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1227:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1212:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1212:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1193:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:38:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1028:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1039:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1051:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1059:6:105",
                "type": ""
              }
            ],
            "src": "983:254:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1274:152:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1291:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1294:77:105",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1284:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:88:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1284:88:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1388:1:105",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1391:4:105",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1381:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1381:15:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1412:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1415:4:105",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1405:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1405:15:105"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1242:184:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1483:666:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1532:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1541:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1544:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1534:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1534:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1534:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1511:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1519:4:105",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1507:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1507:17:105"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1526:3:105"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1503:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1503:27:105"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1496:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1496:35:105"
                  },
                  "nodeType": "YulIf",
                  "src": "1493:55:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1557:30:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1580:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1567:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1567:20:105"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1561:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1596:28:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1606:18:105",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1600:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1647:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1649:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1649:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1649:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1639:2:105"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1643:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1636:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:10:105"
                  },
                  "nodeType": "YulIf",
                  "src": "1633:36:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1678:17:105",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1692:2:105",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1688:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1688:7:105"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1682:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1704:23:105",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1724:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1718:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:9:105"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1708:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1736:71:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1758:6:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1782:2:105"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1786:4:105",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1778:3:105"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1778:13:105"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1793:2:105"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1774:3:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1774:22:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1798:2:105",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1770:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1770:31:105"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1803:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1766:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1766:40:105"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1754:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:53:105"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1740:10:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1866:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1868:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1868:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1868:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1825:10:105"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1837:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1822:2:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1822:18:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1845:10:105"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1857:6:105"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1842:2:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1842:22:105"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1819:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:46:105"
                  },
                  "nodeType": "YulIf",
                  "src": "1816:72:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1904:2:105",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1908:10:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1897:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1897:22:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1897:22:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1935:6:105"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1943:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1928:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:18:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1928:18:105"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1994:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2003:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2006:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1996:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1996:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1996:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1969:6:105"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1977:2:105"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1965:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1965:15:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1982:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1961:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1961:26:105"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1989:3:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1958:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:35:105"
                  },
                  "nodeType": "YulIf",
                  "src": "1955:55:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2036:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2044:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2032:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2032:17:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2055:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2063:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2051:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2051:17:105"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2070:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2019:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2097:6:105"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2105:2:105"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2093:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2093:15:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2110:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2089:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2089:26:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2117:1:105",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2082:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2082:37:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2082:37:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2128:15:105",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2137:6:105"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2128:5:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1457:6:105",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1465:3:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1473:5:105",
                "type": ""
              }
            ],
            "src": "1431:718:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2267:343:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2313:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2322:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2325:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2315:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2315:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2315:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2288:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2297:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2309:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2280:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "2277:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2338:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2380:46:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2411:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2422:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2407:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2394:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2394:32:105"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2384:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2469:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2478:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2481:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2471:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2471:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2471:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2441:6:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2449:18:105",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2438:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:30:105"
                  },
                  "nodeType": "YulIf",
                  "src": "2435:50:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2494:59:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2525:9:105"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2536:6:105"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2521:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2521:22:105"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2545:7:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2504:16:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:49:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2494:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2562:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2589:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2600:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2585:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2585:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2572:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2572:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2562:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2217:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2228:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2240:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2248:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2256:6:105",
                "type": ""
              }
            ],
            "src": "2154:456:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2716:125:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2726:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2738:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2734:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2726:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2768:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2783:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2791:42:105",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2779:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:55:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2761:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:74:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2761:74:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2685:9:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2696:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2707:4:105",
                "type": ""
              }
            ],
            "src": "2615:226:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2888:76:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2942:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2951:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2954:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2944:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2944:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2944:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2911:5:105"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2932:5:105"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2925:6:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2925:13:105"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2918:6:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2918:21:105"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2908:2:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:32:105"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2901:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:40:105"
                  },
                  "nodeType": "YulIf",
                  "src": "2898:60:105"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2877:5:105",
                "type": ""
              }
            ],
            "src": "2846:118:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3070:276:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3116:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3125:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3128:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3118:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3118:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3118:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3091:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3100:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3087:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3087:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "3080:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3141:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3164:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3151:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3151:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3183:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3210:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3221:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3206:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3206:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3193:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3193:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3183:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3234:45:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3264:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3247:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:32:105"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3238:5:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3310:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3288:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:28:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3288:28:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3325:15:105",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3335:5:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3325:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3020:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3031:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3043:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3051:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3059:6:105",
                "type": ""
              }
            ],
            "src": "2969:377:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3421:116:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3467:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3476:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3479:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3469:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3469:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3469:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3442:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3451:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3438:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3438:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3463:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3434:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "3431:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3492:39:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3521:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3502:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:29:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3387:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3398:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3410:6:105",
                "type": ""
              }
            ],
            "src": "3351:186:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3612:110:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3658:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3667:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3670:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3660:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3660:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3660:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3633:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3642:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3629:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3629:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3654:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3625:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "3622:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3683:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3706:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3693:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3693:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3683:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3578:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3589:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3601:6:105",
                "type": ""
              }
            ],
            "src": "3542:180:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3888:569:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3935:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3944:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3947:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3937:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3937:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3937:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3909:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3918:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3930:3:105",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3901:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "3898:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3960:39:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3989:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3970:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3970:29:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3960:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4008:46:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4039:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4050:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4035:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4022:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:32:105"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4012:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4097:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4106:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4109:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4099:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4099:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4099:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4069:6:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4077:18:105",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4066:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:30:105"
                  },
                  "nodeType": "YulIf",
                  "src": "4063:50:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4122:59:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4153:9:105"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4164:6:105"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4149:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4149:22:105"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4173:7:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4132:16:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4132:49:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4122:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4190:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4217:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4228:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4213:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4213:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4200:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4200:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4190:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4241:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4268:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4279:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4264:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4264:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4251:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4241:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4292:46:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4322:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4333:3:105",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4305:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4305:33:105"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4296:5:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4369:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4347:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:28:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4347:28:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4384:15:105",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4394:5:105"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4384:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4408:43:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4435:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4446:3:105",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4431:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4431:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4418:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:33:105"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4408:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3814:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3825:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3837:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3845:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3853:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3861:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3869:6:105",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3877:6:105",
                "type": ""
              }
            ],
            "src": "3727:730:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4591:119:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4601:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4613:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4624:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4609:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4609:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4601:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4643:9:105"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4654:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4636:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4636:25:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4636:25:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4681:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4692:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4677:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4677:18:105"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4697:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4670:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4670:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4670:34:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4552:9:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4563:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4571:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4582:4:105",
                "type": ""
              }
            ],
            "src": "4462:248:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4836:264:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4883:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4892:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4895:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4885:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4885:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4885:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4857:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4866:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4853:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4853:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4878:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4849:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4849:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "4846:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4908:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4931:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4918:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4908:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4950:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4977:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4988:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4973:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4973:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4960:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4960:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5001:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5028:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5039:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5024:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5024:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5011:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5001:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5052:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5079:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5090:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5075:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5075:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5062:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5052:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4778:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4789:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4801:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4809:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4817:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4825:6:105",
                "type": ""
              }
            ],
            "src": "4715:385:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5209:218:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5255:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5264:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5267:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5257:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5257:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5257:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5230:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5239:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5226:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5226:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5251:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5222:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5222:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "5219:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5280:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5303:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5290:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5290:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5280:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5322:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5349:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5360:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5345:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5345:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5332:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5322:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5373:48:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5406:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5417:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5402:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5383:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:38:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5373:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5159:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5170:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5182:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5190:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5198:6:105",
                "type": ""
              }
            ],
            "src": "5105:322:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5570:316:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5617:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5626:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5629:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5619:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5619:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5619:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5591:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5600:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5587:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5587:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5612:3:105",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5583:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5583:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "5580:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5642:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5665:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5652:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5652:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5642:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5684:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5711:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5722:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5707:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5707:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5694:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5684:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5735:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5762:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5773:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5758:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5758:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5745:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5745:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5735:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5813:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5824:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5809:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5809:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5796:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5786:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5837:43:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5864:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5875:3:105",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5860:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5860:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5847:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5847:33:105"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5837:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5504:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5515:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5527:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5535:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5543:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5551:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5559:6:105",
                "type": ""
              }
            ],
            "src": "5432:454:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5958:174:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6004:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6013:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6016:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6006:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6006:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6006:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5979:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5988:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5975:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5975:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6000:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5971:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5971:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "5968:52:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6029:36:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6055:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6042:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:23:105"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6033:5:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6096:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6074:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6074:28:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6074:28:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6111:15:105",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6121:5:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6111:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5924:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5935:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5947:6:105",
                "type": ""
              }
            ],
            "src": "5891:241:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6255:328:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6302:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6311:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6314:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6304:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6304:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6304:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6276:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6285:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6272:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6272:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6297:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6268:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6268:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "6265:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6327:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6350:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6337:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6337:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6327:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6369:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6396:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6407:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6392:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6392:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6379:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6420:45:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6450:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6461:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6446:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6446:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6433:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:32:105"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6424:5:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6496:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6474:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:28:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6474:28:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6511:15:105",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6521:5:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6511:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6535:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6562:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6573:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6558:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6558:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6545:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6545:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6535:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6208:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6220:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6228:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6236:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6244:6:105",
                "type": ""
              }
            ],
            "src": "6137:446:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6855:373:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6865:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6877:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6888:3:105",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6873:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6865:4:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6901:52:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6911:42:105",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6905:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6969:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6984:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6992:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6980:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6980:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6962:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6962:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7016:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7027:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7012:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7012:18:105"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7032:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7005:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7005:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7005:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7059:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7070:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7055:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7055:18:105"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7075:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7048:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7048:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7048:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7102:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7113:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7098:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7098:18:105"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7118:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7091:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7091:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7091:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7145:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7156:3:105",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7141:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7141:19:105"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7162:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7134:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7134:35:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7134:35:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7189:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7200:3:105",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7185:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7185:19:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "7210:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7218:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7206:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7206:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7178:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7178:44:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7178:44:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6784:9:105",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6795:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6803:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6811:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6819:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6827:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6835:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6846:4:105",
                "type": ""
              }
            ],
            "src": "6588:640:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:92:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7338:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7350:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7361:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7346:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7346:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7338:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7380:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7405:6:105"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7398:6:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7398:14:105"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7391:6:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7391:22:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7373:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7373:41:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7373:41:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7297:9:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7308:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7319:4:105",
                "type": ""
              }
            ],
            "src": "7233:187:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7529:218:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7575:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7584:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7587:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7577:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7577:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7577:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7550:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7559:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7546:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7546:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7571:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7542:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "7539:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7600:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7623:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7610:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7610:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7600:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:48:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7675:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7686:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7671:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7671:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7652:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:38:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7642:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7699:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7722:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7722:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7709:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7699:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7479:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7490:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7502:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7510:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7518:6:105",
                "type": ""
              }
            ],
            "src": "7425:322:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7993:294:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8003:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8015:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8026:3:105",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8011:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8011:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8003:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8046:9:105"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8057:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8039:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8039:25:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8039:25:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8084:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8095:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8080:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8080:18:105"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8100:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8073:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8073:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8127:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8138:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8123:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8123:18:105"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8143:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8116:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8116:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8116:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8170:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8181:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8166:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8166:18:105"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8186:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8159:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8159:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8159:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8213:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8224:3:105",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8209:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8209:19:105"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8230:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8202:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8202:35:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8202:35:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8257:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8268:3:105",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8253:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8253:19:105"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8274:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8246:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8246:35:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8246:35:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7922:9:105",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7933:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7941:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7949:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7957:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7965:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7973:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7984:4:105",
                "type": ""
              }
            ],
            "src": "7752:535:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8379:161:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8425:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8434:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8437:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8427:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8427:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8427:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8400:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8409:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8396:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8396:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8421:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8392:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8392:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "8389:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8450:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8473:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8460:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8460:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8492:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8519:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8530:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8515:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8515:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8502:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8502:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8492:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8337:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8348:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8360:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8368:6:105",
                "type": ""
              }
            ],
            "src": "8292:248:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8632:167:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8678:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8687:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8690:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8680:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8680:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8680:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8653:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8662:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8649:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8649:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8674:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8645:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "8642:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8703:39:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8732:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8713:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8713:29:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8703:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8751:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8778:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8789:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8774:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8774:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8761:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8761:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8751:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8590:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8601:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8613:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8621:6:105",
                "type": ""
              }
            ],
            "src": "8545:254:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8985:557:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9032:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9041:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9044:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9034:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9034:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9034:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9006:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9015:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9002:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9002:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9027:3:105",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8998:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8998:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "8995:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9057:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9080:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9067:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9067:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9057:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9099:48:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9132:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9143:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9128:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9128:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9109:18:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9109:38:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9099:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9156:46:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9187:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9198:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9183:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9183:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9170:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9170:32:105"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9160:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9245:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9254:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9257:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9247:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9247:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9247:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9217:6:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9225:18:105",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9214:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:30:105"
                  },
                  "nodeType": "YulIf",
                  "src": "9211:50:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9270:59:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9301:9:105"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9312:6:105"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9297:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9297:22:105"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9321:7:105"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9280:16:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9280:49:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9270:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9338:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9365:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9376:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9361:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9361:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9348:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9338:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9389:43:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9416:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9427:3:105",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9412:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9412:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9399:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9399:33:105"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9389:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9441:43:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9468:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9479:3:105",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9464:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9464:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9451:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9451:33:105"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9441:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9493:43:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9520:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9531:3:105",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9516:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9516:19:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9503:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9503:33:105"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "9493:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8903:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8914:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8926:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8934:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8942:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8950:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8958:6:105",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8966:6:105",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8974:6:105",
                "type": ""
              }
            ],
            "src": "8804:738:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9703:665:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9750:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9759:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9762:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9752:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9752:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9752:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9724:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9733:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9720:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9720:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9745:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9716:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9716:33:105"
                  },
                  "nodeType": "YulIf",
                  "src": "9713:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9775:33:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9798:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9785:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:23:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9775:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9817:46:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9848:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9859:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9844:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9844:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9831:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9831:32:105"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9821:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9872:28:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9882:18:105",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9876:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9927:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9936:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9939:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9929:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9929:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9929:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9915:6:105"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9923:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9912:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9912:14:105"
                  },
                  "nodeType": "YulIf",
                  "src": "9909:34:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9952:32:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9966:9:105"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9977:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9962:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9962:22:105"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9956:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10032:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10041:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10044:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10034:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10034:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10034:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10011:2:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10015:4:105",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10007:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10007:13:105"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10022:7:105"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10003:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10003:27:105"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9996:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9996:35:105"
                  },
                  "nodeType": "YulIf",
                  "src": "9993:55:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10057:30:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10084:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10071:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10071:16:105"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10061:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10114:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10123:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10126:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10116:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10116:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10116:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10102:6:105"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10110:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10099:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10099:14:105"
                  },
                  "nodeType": "YulIf",
                  "src": "10096:34:105"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10189:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10198:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10201:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10191:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10191:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10191:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10153:2:105"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10161:6:105"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10169:2:105",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10157:3:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10157:15:105"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10149:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10149:24:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10175:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10145:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10145:33:105"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10180:7:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10142:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:46:105"
                  },
                  "nodeType": "YulIf",
                  "src": "10139:66:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10214:21:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10228:2:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10232:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10224:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10224:11:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10214:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10244:16:105",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10254:6:105"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10244:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10269:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10296:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10307:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10292:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10292:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10279:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10279:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10269:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10320:42:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10347:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10358:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10343:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10343:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10330:12:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10330:32:105"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10320:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9637:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9648:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9660:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9668:6:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9676:6:105",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9684:6:105",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9692:6:105",
                "type": ""
              }
            ],
            "src": "9547:821:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10547:181:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10564:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10575:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10557:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10557:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10598:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10609:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10594:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10594:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10614:2:105",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10587:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10587:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10587:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10637:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10648:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10633:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10633:18:105"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10653:33:105",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10626:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10626:61:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10626:61:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10696:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10708:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10719:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10704:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10704:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10696:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10524:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10538:4:105",
                "type": ""
              }
            ],
            "src": "10373:355:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10765:152:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10782:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10785:77:105",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10775:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10775:88:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10775:88:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10879:1:105",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10882:4:105",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10872:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10872:15:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10903:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10906:4:105",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10896:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10896:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10896:15:105"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10733:184:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11096:167:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11113:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11124:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11147:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11158:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11143:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11143:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11163:2:105",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11136:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11136:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11136:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11186:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11197:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11182:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11182:18:105"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11202:19:105",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11175:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11175:47:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11175:47:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11231:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11243:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11254:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11239:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11239:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11231:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11073:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11087:4:105",
                "type": ""
              }
            ],
            "src": "10922:341:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11442:173:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11459:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11470:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11452:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11452:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11452:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11493:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11504:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11489:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11489:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11509:2:105",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11482:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11482:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11482:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11532:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11543:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11528:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11528:18:105"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11548:25:105",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11521:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11521:53:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11521:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11583:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11595:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11606:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11591:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11583:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11419:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11433:4:105",
                "type": ""
              }
            ],
            "src": "11268:347:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11794:182:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11811:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11822:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11804:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11804:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11804:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11845:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11856:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11841:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11841:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11861:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11834:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11834:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11834:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11884:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11895:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11880:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11880:18:105"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11900:34:105",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11873:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11873:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11873:62:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11944:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11956:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11967:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11952:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11944:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11771:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11785:4:105",
                "type": ""
              }
            ],
            "src": "11620:356:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12155:161:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12172:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12183:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12165:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12165:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12165:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12206:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12217:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12202:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12202:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12222:2:105",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12195:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12195:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12195:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12245:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12256:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12241:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12241:18:105"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12261:13:105",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12234:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12234:41:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12234:41:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12284:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12296:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12307:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12292:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12292:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12284:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12132:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12146:4:105",
                "type": ""
              }
            ],
            "src": "11981:335:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12450:168:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12460:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12472:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12483:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12468:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12468:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12460:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12502:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12517:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12525:42:105",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12513:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12513:55:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12495:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12495:74:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12495:74:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12589:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12600:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12585:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12585:18:105"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12605:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12578:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12578:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12578:34:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12411:9:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12422:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12430:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12441:4:105",
                "type": ""
              }
            ],
            "src": "12321:297:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12704:103:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12750:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12759:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12762:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12752:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12752:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12752:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12725:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12734:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12721:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12721:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12746:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12717:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12717:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "12714:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12775:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12791:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12785:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12785:16:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12775:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12670:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12681:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12693:6:105",
                "type": ""
              }
            ],
            "src": "12623:184:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12844:152:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12861:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12864:77:105",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12854:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12854:88:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12854:88:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12958:1:105",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12961:4:105",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12951:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12951:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12951:15:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12982:1:105",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12985:4:105",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12975:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12975:15:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12975:15:105"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12812:184:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13050:76:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13072:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13074:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13074:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13074:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13066:1:105"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13069:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13063:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13063:8:105"
                  },
                  "nodeType": "YulIf",
                  "src": "13060:34:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13103:17:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13115:1:105"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13118:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13111:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13111:9:105"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13103:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13032:1:105",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13035:1:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13041:4:105",
                "type": ""
              }
            ],
            "src": "13001:125:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13183:116:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13242:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13244:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13244:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13244:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13214:1:105"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13207:6:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13207:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13200:6:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13200:17:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13222:1:105"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13233:1:105",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13229:3:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13229:6:105"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13237:1:105"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13225:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13225:14:105"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13219:2:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13219:21:105"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13196:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13196:45:105"
                  },
                  "nodeType": "YulIf",
                  "src": "13193:71:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13273:20:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13288:1:105"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13291:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13284:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13284:9:105"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13273:7:105"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13162:1:105",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13165:1:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13171:7:105",
                "type": ""
              }
            ],
            "src": "13131:168:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13350:228:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13381:168:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13402:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13405:77:105",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13395:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13395:88:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13395:88:105"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13503:1:105",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13506:4:105",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13496:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13496:15:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13496:15:105"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13531:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13534:4:105",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13524:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13524:15:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13524:15:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13370:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13363:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13363:9:105"
                  },
                  "nodeType": "YulIf",
                  "src": "13360:189:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13558:14:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13567:1:105"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13570:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13563:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13563:9:105"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13558:1:105"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13335:1:105",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13338:1:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13344:1:105",
                "type": ""
              }
            ],
            "src": "13304:274:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13631:80:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13658:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13660:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13660:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13660:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13647:1:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13654:1:105"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13650:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13650:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13644:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13644:13:105"
                  },
                  "nodeType": "YulIf",
                  "src": "13641:39:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13689:16:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13700:1:105"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13703:1:105"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13696:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13696:9:105"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13689:3:105"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13614:1:105",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13617:1:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13623:3:105",
                "type": ""
              }
            ],
            "src": "13583:128:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13890:165:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13907:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13918:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13900:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13900:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13900:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13941:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13952:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13937:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13937:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13957:2:105",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13930:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13930:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13930:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13980:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13991:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13976:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13976:18:105"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13996:17:105",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13969:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13969:45:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13969:45:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14023:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14035:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14046:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14031:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14031:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14023:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13867:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13881:4:105",
                "type": ""
              }
            ],
            "src": "13716:339:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14107:88:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14138:22:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14140:16:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14140:18:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14140:18:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14123:5:105"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14134:1:105",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14130:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14130:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14120:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14120:17:105"
                  },
                  "nodeType": "YulIf",
                  "src": "14117:43:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14169:20:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14180:5:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14187:1:105",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14176:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14176:13:105"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14169:3:105"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14089:5:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14099:3:105",
                "type": ""
              }
            ],
            "src": "14060:135:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14374:243:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14391:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14402:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14384:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14384:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14384:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14425:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14436:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14421:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14421:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14441:2:105",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14414:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14414:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14414:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14464:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14475:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14460:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14460:18:105"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14480:34:105",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14453:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14453:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14453:62:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14535:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14546:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14531:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14531:18:105"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14551:23:105",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14524:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14524:51:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14524:51:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14584:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14596:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14607:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14592:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14592:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14584:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14351:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14365:4:105",
                "type": ""
              }
            ],
            "src": "14200:417:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14796:228:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14813:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14824:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14806:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14806:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14806:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14847:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14858:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14843:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14843:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14863:2:105",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14836:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14836:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14836:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14886:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14897:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14882:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14882:18:105"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14902:34:105",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14875:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14875:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14875:62:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14957:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14968:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14953:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14953:18:105"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14973:8:105",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14946:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14946:36:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14946:36:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14991:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15003:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15014:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14999:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14999:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14991:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14773:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14787:4:105",
                "type": ""
              }
            ],
            "src": "14622:402:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15203:171:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15220:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15231:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15213:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15213:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15213:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15254:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15265:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15250:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15250:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15270:2:105",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15243:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15243:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15243:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15293:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15304:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15289:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15289:18:105"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15309:23:105",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15282:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15282:51:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15282:51:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15342:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15354:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15365:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15350:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15350:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15342:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15180:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15194:4:105",
                "type": ""
              }
            ],
            "src": "15029:345:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15536:241:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15546:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15558:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15569:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15554:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15554:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15546:4:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15581:52:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15591:42:105",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15585:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15649:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15664:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15672:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15660:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15660:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15642:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15642:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15642:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15696:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15707:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15692:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15692:18:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15716:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15724:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15712:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15712:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15685:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15685:43:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15685:43:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15748:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15759:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15744:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15744:18:105"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "15764:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15737:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15737:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15737:34:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15489:9:105",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15500:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15508:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15516:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15527:4:105",
                "type": ""
              }
            ],
            "src": "15379:398:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15956:171:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15973:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15984:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15966:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15966:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15966:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16007:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16018:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16003:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16003:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16023:2:105",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15996:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15996:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15996:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16046:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16057:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16042:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16042:18:105"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16062:23:105",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16035:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16035:51:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16035:51:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16095:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16107:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16118:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16103:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16103:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16095:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15933:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15947:4:105",
                "type": ""
              }
            ],
            "src": "15782:345:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16255:135:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16265:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16277:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16288:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16273:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16273:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16265:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16307:9:105"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16318:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16300:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16300:25:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16300:25:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16345:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16356:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16341:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16341:18:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16375:6:105"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16368:6:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16368:14:105"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16361:6:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16361:22:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16334:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16334:50:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16334:50:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16216:9:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16227:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16235:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16246:4:105",
                "type": ""
              }
            ],
            "src": "16132:258:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16448:205:105",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16458:10:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16467:1:105",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16462:1:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16527:63:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16552:3:105"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "16557:1:105"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16548:3:105"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16548:11:105"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "16571:3:105"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "16576:1:105"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16567:3:105"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16567:11:105"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "16561:5:105"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16561:18:105"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16541:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16541:39:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16541:39:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16488:1:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16491:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16485:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16485:13:105"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "16499:19:105",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16501:15:105",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "16510:1:105"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16513:2:105",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16506:3:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16506:10:105"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "16501:1:105"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "16481:3:105",
                    "statements": []
                  },
                  "src": "16477:113:105"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16616:31:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16629:3:105"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16634:6:105"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16625:3:105"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16625:16:105"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16643:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16618:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16618:27:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16618:27:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16605:1:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16608:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16602:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16602:13:105"
                  },
                  "nodeType": "YulIf",
                  "src": "16599:48:105"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16426:3:105",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16431:3:105",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16436:6:105",
                "type": ""
              }
            ],
            "src": "16395:258:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16795:137:105",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16805:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16825:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16819:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:13:105"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "16809:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16867:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16863:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16863:17:105"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16882:3:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16887:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "16841:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16841:53:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16841:53:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16903:23:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16914:3:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16919:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16910:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16910:16:105"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16903:3:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16771:3:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16776:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16787:3:105",
                "type": ""
              }
            ],
            "src": "16658:274:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17111:179:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17128:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17139:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17121:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17121:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17162:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17173:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17158:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17158:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17178:2:105",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17151:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17151:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17151:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17201:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17212:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17197:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17197:18:105"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17217:31:105",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17190:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17190:59:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17190:59:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17258:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17270:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17281:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17266:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17266:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17258:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17088:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17102:4:105",
                "type": ""
              }
            ],
            "src": "16937:353:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17469:175:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17486:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17497:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17479:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17479:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17479:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17520:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17531:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17516:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17516:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17536:2:105",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17509:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17509:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17509:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17559:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17570:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17555:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17555:18:105"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17575:27:105",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17548:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17548:55:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17548:55:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17612:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17624:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17635:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17620:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17620:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17612:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17446:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17460:4:105",
                "type": ""
              }
            ],
            "src": "17295:349:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17823:180:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17840:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17851:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17833:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17833:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17833:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17874:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17885:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17870:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17870:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17890:2:105",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17863:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17863:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17863:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17913:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17924:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17909:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17909:18:105"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17929:32:105",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17902:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17902:60:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17902:60:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17971:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17983:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17994:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17979:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17979:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17971:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17800:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17814:4:105",
                "type": ""
              }
            ],
            "src": "17649:354:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18182:170:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18199:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18210:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18192:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18192:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18192:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18233:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18244:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18229:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18229:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18249:2:105",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18222:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18222:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18222:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18272:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18283:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18268:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18268:18:105"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18288:22:105",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18261:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18261:50:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18261:50:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18320:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18332:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18343:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18328:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18328:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18320:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18159:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18173:4:105",
                "type": ""
              }
            ],
            "src": "18008:344:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18546:443:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18556:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18568:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18579:3:105",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18564:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18564:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18556:4:105"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18599:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18616:6:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18610:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18610:13:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18592:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18592:32:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18592:32:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18644:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18655:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18640:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18640:20:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18672:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18680:4:105",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18668:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18668:17:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18662:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18662:24:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18633:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18633:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18633:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18707:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18718:4:105",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18703:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18703:20:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18735:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18743:4:105",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18731:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18731:17:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18725:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18725:24:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18696:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18696:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18696:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18770:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18781:4:105",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18766:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18766:20:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18798:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18806:4:105",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18794:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18794:17:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18788:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18788:24:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18759:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18759:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18759:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18833:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18844:4:105",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18829:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18829:20:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18861:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18869:4:105",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18857:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18857:17:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18851:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18851:24:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18822:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18822:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18822:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18896:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18907:4:105",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18892:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18892:20:105"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18924:6:105"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18932:4:105",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18920:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18920:17:105"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18914:5:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18914:24:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18885:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18885:54:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18885:54:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18959:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18970:3:105",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18955:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18955:19:105"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18976:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18948:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18948:35:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18948:35:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$14548_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14548_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18507:9:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18518:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18526:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18537:4:105",
                "type": ""
              }
            ],
            "src": "18357:632:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19092:147:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19138:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19147:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19150:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19140:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19140:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19140:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19113:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19122:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19109:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19109:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19134:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19105:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19105:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "19102:52:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19163:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19179:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19173:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19173:16:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19163:6:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19198:35:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19218:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19229:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19214:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19214:18:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19208:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19208:25:105"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19198:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19050:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19061:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19073:6:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19081:6:105",
                "type": ""
              }
            ],
            "src": "18994:245:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19322:167:105",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19368:16:105",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19377:1:105",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19380:1:105",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19370:6:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19370:12:105"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19370:12:105"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19343:7:105"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19352:9:105"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19339:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19339:23:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19364:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19335:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19335:32:105"
                  },
                  "nodeType": "YulIf",
                  "src": "19332:52:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19393:29:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19412:9:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19406:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19406:16:105"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19397:5:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19453:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "19431:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19431:28:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19431:28:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19468:15:105",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "19478:5:105"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19468:6:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19288:9:105",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19299:7:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19311:6:105",
                "type": ""
              }
            ],
            "src": "19244:245:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19668:232:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19685:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19696:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19678:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19678:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19678:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19719:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19730:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19715:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19715:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19735:2:105",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19708:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19708:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19708:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19758:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19769:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19754:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19754:18:105"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19774:34:105",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19747:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19747:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19747:62:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19829:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19840:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19825:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19825:18:105"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19845:12:105",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19818:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19818:40:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19818:40:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19867:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19879:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19890:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19875:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19875:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19867:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19645:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19659:4:105",
                "type": ""
              }
            ],
            "src": "19494:406:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20079:234:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20096:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20107:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20089:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20089:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20089:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20130:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20141:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20126:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20126:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20146:2:105",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20119:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20119:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20119:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20169:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20180:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20165:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20165:18:105"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20185:34:105",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20158:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20158:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20158:62:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20240:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20251:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20236:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20236:18:105"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20256:14:105",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20229:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20229:42:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20229:42:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20280:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20292:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20303:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20288:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20288:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20280:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20056:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20070:4:105",
                "type": ""
              }
            ],
            "src": "19905:408:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20412:289:105",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20422:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "20442:5:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20436:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20436:12:105"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20426:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20457:33:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "20477:5:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20484:4:105",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20473:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20473:16:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20467:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20467:23:105"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20461:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20499:41:105",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20513:26:105",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "20509:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20509:31:105"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "20503:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20549:20:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "20562:2:105"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "20566:2:105"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20558:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20558:11:105"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "20549:5:105"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20604:91:105",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20618:67:105",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "20635:2:105"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "20643:2:105"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20651:1:105",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "20658:1:105",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "20665:2:105",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20669:6:105"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "20661:3:105"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20661:15:105"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "20654:3:105"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20654:23:105"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "20647:3:105"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20647:31:105"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "20639:3:105"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20639:40:105"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "20631:3:105"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20631:49:105"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "20682:2:105"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "20627:3:105"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20627:58:105"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20618:5:105"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20584:6:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20592:2:105",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20581:2:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20581:14:105"
                  },
                  "nodeType": "YulIf",
                  "src": "20578:117:105"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "20392:5:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20402:5:105",
                "type": ""
              }
            ],
            "src": "20318:383:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20835:198:105",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20845:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20857:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20868:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20853:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20853:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20845:4:105"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20880:52:105",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20890:42:105",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20884:2:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20948:9:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20963:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20971:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20959:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20959:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20941:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20941:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20941:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20995:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21006:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20991:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20991:18:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21015:6:105"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21023:2:105"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21011:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21011:15:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20984:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20984:43:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20984:43:105"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20796:9:105",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20807:6:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20815:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20826:4:105",
                "type": ""
              }
            ],
            "src": "20706:327:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21212:228:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21229:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21240:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21222:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21222:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21222:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21263:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21274:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21259:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21259:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21279:2:105",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21252:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21252:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21252:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21302:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21313:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21298:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21298:18:105"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21318:34:105",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21291:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21291:62:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21291:62:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21373:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21384:2:105",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21369:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21369:18:105"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21389:8:105",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21362:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21362:36:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21362:36:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21407:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21419:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21430:3:105",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21415:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21415:19:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21407:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21189:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21203:4:105",
                "type": ""
              }
            ],
            "src": "21038:402:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21619:179:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21636:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21647:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21629:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21629:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21629:21:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21670:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21681:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21666:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21666:18:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21686:2:105",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21659:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21659:30:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21659:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21709:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21720:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21705:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21705:18:105"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21725:31:105",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21698:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21698:59:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21698:59:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21766:26:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21778:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21789:2:105",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21774:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21774:18:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21766:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21596:9:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21610:4:105",
                "type": ""
              }
            ],
            "src": "21445:353:105"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21924:262:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21941:9:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21952:2:105",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21934:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21934:21:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21934:21:105"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21964:27:105",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21984:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21978:5:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21978:13:105"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21968:6:105",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22011:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22022:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22007:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22007:18:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22027:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22000:6:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22000:34:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22000:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22069:6:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22077:2:105",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22065:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22065:15:105"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22086:9:105"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22097:2:105",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22082:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22082:18:105"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22102:6:105"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22043:21:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22043:66:105"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22043:66:105"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22118:62:105",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22134:9:105"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22153:6:105"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22161:2:105",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22149:3:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22149:15:105"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22170:2:105",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22166:3:105"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22166:7:105"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22145:3:105"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22145:29:105"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22130:3:105"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22130:45:105"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22177:2:105",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22126:3:105"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22126:54:105"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22118:4:105"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21893:9:105",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21904:6:105",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21915:4:105",
                "type": ""
              }
            ],
            "src": "21803:383:105"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        validator_revert_bool(value)\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$14548_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14548_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 105,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "490:29593:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "490:29593:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:633;;;;;;:::i;:::-;;:::i;:::-;;14467:166:34;;;:::i;4086:187::-;;;;;;:::i;:::-;;:::i;2483:30::-;;;;;;;;;947:25:105;;;935:2;920:18;2483:30:34;;;;;;;;28592:522:35;;;;;;:::i;:::-;;:::i;7929:104:34:-;8010:9;:16;7929:104;;3700:99;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3700:99:34;;;;;;-1:-1:-1;;;;;2779:55:105;;;2761:74;;2749:2;2734:18;3700:99:34;2615:226:105;3875:32:34;;;;;-1:-1:-1;;;;;3875:32:34;;;12731:568:35;;;;;;:::i;:::-;;:::i;3212:47:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;11018:2043;;;;;;:::i;:::-;;:::i;799:34:35:-;;;;;-1:-1:-1;;;;;799:34:35;;;2437:40:34;;;;;;2255:57;;;;;;6727:200;;;;;;:::i;:::-;;:::i;22820:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;4636:25:105;;;4692:2;4677:18;;4670:34;;;;4609:18;22820:1145:35;4462:248:105;8260:691:35;;;;;;:::i;:::-;;:::i;1895:25:34:-;;;;;;4375:108;;;;;;:::i;:::-;;:::i;1926:27::-;;;;;;7630:168;;;;;;:::i;:::-;;:::i;2619:36::-;;;;;;8251:165;;;;;;:::i;:::-;;:::i;2159:57::-;;;;;;7187:282;;;;;;:::i;:::-;;:::i;1666:25::-;;;;;-1:-1:-1;;;;;1666:25:34;;;9104:1669;;;;;;:::i;:::-;;:::i;1244:121:35:-;;;;;;:::i;:::-;;:::i;1815:26:34:-;;;;;-1:-1:-1;;;;;1815:26:34;;;1908:101:3;;;:::i;21439:639:35:-;;;;;;:::i;:::-;;:::i;26322:1210::-;;;;;;:::i;:::-;;:::i;3820:36:34:-;;;;;-1:-1:-1;;;;;3820:36:34;;;1557:20;;;;;-1:-1:-1;;;;;1557:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;3178:28:34;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6980:15:105;;;6962:34;;7027:2;7012:18;;7005:34;;;;7055:18;;7048:34;;;;7113:2;7098:18;;7091:34;;;;7156:3;7141:19;;7134:35;7206:15;;;7200:3;7185:19;;7178:44;6888:3;6873:19;3178:28:34;6588:640:105;698:34:35;;;;;;;;;;;;;;;7398:14:105;;7391:22;7373:41;;7361:2;7346:18;698:34:35;7233:187:105;27645:671:35;;;;;;:::i;:::-;;:::i;2840:22:34:-;;;;;;2352:30;;;;;;13593:335;;;:::i;5257:132::-;;;;;;:::i;:::-;;:::i;1729:32::-;;;;;-1:-1:-1;;;;;1729:32:34;;;3443:72;;;;;;:::i;:::-;;:::i;:::-;;;;8039:25:105;;;8095:2;8080:18;;8073:34;;;;8123:18;;;8116:34;;;;8181:2;8166:18;;8159:34;8224:3;8209:19;;8202:35;8268:3;8253:19;;8246:35;8026:3;8011:19;3443:72:34;7752:535:105;1583:32:34;;;;;-1:-1:-1;;;;;1583:32:34;;;2719:37;;;;;;29499:582:35;;;;;;:::i;:::-;;:::i;1991:28:34:-;;;;;;1470:118:35;;;;;;:::i;:::-;;:::i;15904:301:34:-;;;;;;:::i;:::-;;:::i;2063:42::-;;;;;;9634:821:35;;;;;;:::i;:::-;;:::i;5910:613:34:-;;;;;;:::i;:::-;;:::i;2922:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4959:228:34:-;;;;;;:::i;:::-;;:::i;4679:226::-;;;;;;:::i;:::-;;:::i;2988:39::-;;;;;-1:-1:-1;;;;;2988:39:34;;;1847:633:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2007:28:35::1;2038:9;2048:4;2038:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;2152::::0;;2038;;-1:-1:-1;2134:134:35::1;::::0;-1:-1:-1;;;;;2152:15:35::1;2199:10;2231:4;2250:8:::0;2134:51:::1;:134::i;:::-;2317:156;2339:4;2357:10;2317:156;;;;;;;;;;;::::0;2397:8:::1;2419:15;2448;2317:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;1847:633:35:o;14467:166:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;14625:1:::2;14601:21;:25:::0;14467:166::o;4086:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4204:5:34::1;:14:::0;;-1:-1:-1;;;;;4204:14:34;;::::1;-1:-1:-1::0;;;;;;4204:14:34;;::::1;;::::0;;;4228:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;4086:187::o;28592:522:35:-;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;1815:1:8::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;;;2561:63:8::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;28794:11:35::2;::::0;28783:7:::2;::::0;:22:::2;28779:329;;;28901:52;28927:11;28940:12;28901:25;:52::i;:::-;28779:329;;;29059:5;::::0;29052:45:::2;::::0;;;;-1:-1:-1;;;;;12513:55:105;;;29052:45:35::2;::::0;::::2;12495:74:105::0;12585:18;;;12578:34;;;29059:5:35;;::::2;::::0;29052:18:::2;::::0;12468::105;;29052:45:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;28779:329;-1:-1:-1::0;;1772:1:8::1;2872:7;:22:::0;28592:522:35:o;12731:568::-;12861:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;12911:28:35::1;12942:146;12965:4;12983:10;12942:146;;;;;;;;;;;::::0;13023:10:::1;13047:12;13073:5;12942:9;:146::i;:::-;12911:177;;13150:112;13216:10;13240:4;:12;;;13168:9;13178:4;13168:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:20:::0;-1:-1:-1;;;;;13168:20:35::1;::::0;13150:112;:52:::1;:112::i;:::-;13280:12:::0;1772:1:8;2872:7;:22;13280:12:35;12731:568;-1:-1:-1;;;;12731:568:35:o;11018:2043:34:-;11082:17;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;11161:24:34::1;11188:9;11198:4;11188:15;;;;;;;;:::i;:::-;;;;;;;;;;;11161:42;;11292:6;:22;;;11276:12;:38;11272:77;;11337:1;11330:8;;;;;11272:77;11443:12;::::0;::::1;::::0;11436:34:::1;::::0;;;;;;;11414:19:::1;::::0;-1:-1:-1;;;;;11443:12:34::1;::::0;11436:32:::1;::::0;:34:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;11443:12;11436:34:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11414:56:::0;-1:-1:-1;11484:16:34;11480:106:::1;;-1:-1:-1::0;11541:12:34::1;11516:22;::::0;;::::1;:37:::0;-1:-1:-1;11574:1:34::1;11567:8;;11480:106;11700:21;11739:6;:22;;;11724:12;:37;;;;:::i;:::-;11700:61;;11871:19;11971:15;;11950:6;:17;;;11922:13;;11894;:41;;;;:::i;:::-;:73;;;;:::i;:::-;11893:93;;;;:::i;:::-;12094:24;::::0;11871:115;;-1:-1:-1;;;;;;12094:24:34::1;12085:4;12077:41;12073:707;;;12279:53;12305:11;12326:4;12279:25;:53::i;:::-;12421:1;12409:13;;12073:707;;;12576:5;::::0;12569:46:::1;::::0;;;;12596:4:::1;12569:46;::::0;::::1;12495:74:105::0;12585:18;;;12578:34;;;-1:-1:-1;;;;;12576:5:34;;::::1;::::0;12569:18:::1;::::0;12468::105;;12569:46:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12675:11;12663:23;;12738:31;12759:9;12738:20;:31::i;:::-;12928:11;12903:6;:22;;;:36;;;;:::i;:::-;12878:22;::::0;::::1;:61:::0;-1:-1:-1;;13042:12:34::1;13017:22;::::0;;::::1;:37:::0;;;;-1:-1:-1;2728:1:8::1;1772::::0;2872:7;:22;11018:2043:34;;-1:-1:-1;11018:2043:34:o;6727:200::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;6862:27:::2;:58:::0;6727:200::o;22820:1145:35:-;1033:19;;23100:18;;;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;23240:201:::1;23276:8;23298:15;23327:4;23345:10;23369:12;23395:18;23427:4;23240:22;:201::i;:::-;23206:235:::0;;-1:-1:-1;23206:235:35;-1:-1:-1;23507:14:35;;23503:164:::1;;23555:17;::::0;23537:119:::1;::::0;-1:-1:-1;;;;;23555:17:35::1;23604:10;23632::::0;23537:49:::1;:119::i;:::-;23796:21:::0;;23792:167:::1;;23888:11;::::0;23851:5:::1;::::0;23833:115:::1;::::0;-1:-1:-1;;;;;23851:5:35;;::::1;::::0;23888:11:::1;23917:17:::0;23833:37:::1;:115::i;:::-;22820:1145:::0;;;;;;;;;:::o;8260:691::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;8472:17:35::1;8492:9;8502:4;8492:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21:::1;:15;::::0;;::::1;;:21;::::0;8585:17:::1;::::0;-1:-1:-1;;;;;8492:21:35;;::::1;::::0;-1:-1:-1;8567:133:35::1;::::0;8585:17:::1;8634:10;8492:21:::0;8681:9;8567:53:::1;:133::i;:::-;8744:200;8777:4;8795:10;8744:200;;;;;;;;;;;::::0;8835:9:::1;8858:15;8887;8916:18;8744:19;:200::i;4375:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4450:11:34::1;:26:::0;;-1:-1:-1;;;;;;4450:26:34::1;-1:-1:-1::0;;;;;4450:26:34;;;::::1;::::0;;;::::1;::::0;;4375:108::o;7630:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7745:21:34::1;:46:::0;;-1:-1:-1;;;;;;7745:46:34::1;-1:-1:-1::0;;;;;7745:46:34;;;::::1;::::0;;;::::1;::::0;;7630:168::o;8251:165::-;8348:7;8378:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8378:24:34;;;;;;;;;:31;8251:165;;;;;:::o;7187:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7346:7:34::1;:18:::0;;;;7374:11:::1;:26:::0;7410:24:::1;:52:::0;;-1:-1:-1;;;;;;7410:52:34::1;-1:-1:-1::0;;;;;7410:52:34;;::::1;::::0;;;::::1;::::0;;7187:282::o;9104:1669::-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;9527:47:::1;9708:30;9716:22:::0;9708:5:::1;:30;:::i;:::-;9659:28;9622:18;9578:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9577:162;;;;:::i;:::-;9527:212;;9872:42;;9818:39;:96;9801:472;;;-1:-1:-1::0;9981:42:34::1;::::0;9801:472:::1;;;10111:42;;10057:39;:96;10040:233;;;-1:-1:-1::0;10220:42:34::1;::::0;10040:233:::1;10753:12;::::0;10720:30:::1;10728:22:::0;10720:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10688:15;::::0;10590:79:::1;10630:39:::0;10590:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10589:177;;;;:::i;:::-;10561:13;:205:::0;-1:-1:-1;;;;;;9104:1669:34:o;1244:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1324:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;1324:34:35;;::::1;::::0;;;::::1;::::0;;1244:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;21439:639:35:-;21618:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;21669::35::1;21693:191;21729:10;21693:191;;;;;;;;;;;::::0;21769:4:::1;21787:10;21811:12;21837:18;21869:5;21693:22;:191::i;:::-;-1:-1:-1::0;21954:17:35::1;::::0;21668:216;;-1:-1:-1;21936:107:35::1;::::0;-1:-1:-1;;;;;21954:17:35::1;21999:10;21668:216:::0;21936:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;22061:10:35;21439:639;-1:-1:-1;;;;;21439:639:35:o;26322:1210::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;26550:22:35::1;26575:21:::0;;;:11:::1;:21;::::0;;;;;;;26597:10:::1;26575:33:::0;;;;;;;:71;;26622:14;;26575:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;26706:21;;;:11:::1;:21:::0;;;;;;26728:10:::1;26706:33:::0;;;;;;;;:71;;26575:96;;-1:-1:-1;26706:33:35;26753:14;;26706:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;26681:111;;26824:20;26850:192;26886:10;26850:192;;;;;;;;;;;::::0;26926:8:::1;26948:14;26976:5;26995:18;27027:5;26850:22;:192::i;:::-;26823:219;;;27088:122;27151:9;27161:6;27151:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:17;::::0;;::::1;;:23;::::0;27106:17:::1;::::0;-1:-1:-1;;;;;27106:17:35;;::::1;::::0;27151:23:::1;27188:12:::0;27088:49:::1;:122::i;:::-;27242:203;27275:6;27295:10;27242:203;;;;;;;;;;;::::0;27335:12:::1;27361:14;27389;27417:18;27242:19;:203::i;:::-;27461:64;::::0;27480:10:::1;2761:74:105::0;;27518:6:35;;27502:14;;27492:8;;27461:64:::1;::::0;2749:2:105;2734:18;27461:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;26322:1210:35:o;3178:28:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3178:28:34;;;;-1:-1:-1;3178:28:34;;;;;;;;:::o;27645:671:35:-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;27794:19:35::1;27816:31;27830:4:::0;27836:10:::1;27816:13;:31::i;:::-;27794:53;;27862:11;27857:123;27885:11;27879:3;:17;27857:123;;;27919:50;27929:4;27935:10;27919:50;;;;;;;;;;;::::0;27951:3:::1;27956:5;27963::::0;27919:9:::1;:50::i;:::-;-1:-1:-1::0;27898:5:35::1;::::0;::::1;:::i;:::-;;;27857:123;;;;28032:16;28069:9;28079:4;28069:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:20:::0;28051:86:::1;::::0;;;;28122:4:::1;28051:86;::::0;::::1;2761:74:105::0;-1:-1:-1;;;;;28069:20:35;;::::1;::::0;28051:49:::1;::::0;2734:18:105;;28051:86:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28032:105:::0;-1:-1:-1;28151:12:35;;28147:163:::1;;28179:120;28249:10;28277:8;28197:9;28207:4;28197:15;;;;;;;;:::i;28179:120::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;27645:671:35:o;13593:335:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;13810:11:::2;::::0;13835:22:::2;::::0;13777:5:::2;::::0;13759:108:::2;::::0;-1:-1:-1;;;;;13777:5:34;;::::2;::::0;13810:11;::::2;::::0;13759:37:::2;:108::i;:::-;13920:1;13895:22;:26:::0;13593:335::o;5257:132::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5344:17:34::1;:38:::0;;-1:-1:-1;;;;;;5344:38:34::1;-1:-1:-1::0;;;;;5344:38:34;;;::::1;::::0;;;::::1;::::0;;5257:132::o;3443:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3443:72:34;;-1:-1:-1;3443:72:34;-1:-1:-1;3443:72:34;;;:::o;29499:582:35:-;995:21:34;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1223:24:::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;1815:1:8::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;;;2561:63:8::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;29867:11:35::3;::::0;29816:114:::3;::::0;-1:-1:-1;;;;;29867:11:35::3;29892:28;29907:13:::0;29892:12;:28:::3;:::i;:::-;29834:5;::::0;-1:-1:-1;;;;;29834:5:35::3;::::0;29816:114;:37:::3;:114::i;:::-;30056:17;::::0;30015:59:::3;::::0;30041:13;;-1:-1:-1;;;;;30056:17:35::3;30015:25;:59::i;1470:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1550:19:35::1;:31:::0;;-1:-1:-1;;;;;;1550:31:35::1;-1:-1:-1::0;;;;;1550:31:35;;;::::1;::::0;;;::::1;::::0;;1470:118::o;15904:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;16045:5:34::1;::::0;-1:-1:-1;;;;;16035:15:34;;::::1;16045:5:::0;::::1;16035:15;;16014:115;;;::::0;-1:-1:-1;;;;;16014:115:34;;14402:2:105;16014:115:34::1;::::0;::::1;14384:21:105::0;14441:2;14421:18;;;14414:30;14480:34;14460:18;;;14453:62;14551:23;14531:18;;;14524:51;14592:19;;16014:115:34::1;14200:417:105::0;16014:115:34::1;16139:59;-1:-1:-1::0;;;;;16139:38:34;::::1;16178:10;16190:7:::0;16139:38:::1;:59::i;:::-;15904:301:::0;;:::o;9634:821:35:-;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;9956:17:::1;9976:9;9986:4;9976:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21:::1;:15;::::0;;::::1;;:21;::::0;10069:17:::1;::::0;-1:-1:-1;;;;;9976:21:35;;::::1;::::0;-1:-1:-1;10051:133:35::1;::::0;10069:17:::1;10118:10;9976:21:::0;10165:9;10051:53:::1;:133::i;:::-;10237:211;10270:4;10288:8;10310:15;10339:9;10362:15;10391;10420:18;10237:19;:211::i;:::-;9916:539;9634:821:::0;;;;;;;:::o;5910:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;6178:12:34::1;:28:::0;;;6284:17;;6302:1:::1;6284:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;6239:42;:65:::0;-1:-1:-1;6359:17:34;;6377:1:::1;6359:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6314:42;:65:::0;-1:-1:-1;6389:25:34::1;:54:::0;6482:15:::1;:34:::0;-1:-1:-1;;;5910:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;14824:2:105;2238:73:3::1;::::0;::::1;14806:21:105::0;14863:2;14843:18;;;14836:30;14902:34;14882:18;;;14875:62;14973:8;14953:18;;;14946:36;14999:19;;2238:73:3::1;14622:402:105::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4959:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5105:10:34::1;::::0;:15;5097:49:::1;;;::::0;-1:-1:-1;;;;;5097:49:34;;15231:2:105;5097:49:34::1;::::0;::::1;15213:21:105::0;15270:2;15250:18;;;15243:30;15309:23;15289:18;;;15282:51;15350:18;;5097:49:34::1;15029:345:105::0;5097:49:34::1;5156:10;:24:::0;4959:228::o;4679:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;4826:10:::2;:24:::0;;-1:-1:-1;;;;;4826:24:34;;::::2;-1:-1:-1::0;;;;;;4826:24:34;;::::2;;::::0;;;4860:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4679:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;15660:15:105;;;1143:68:12;;;15642:34:105;15712:15;;15692:18;;;15685:43;15744:18;;;15737:34;;;1116:96:12;;1136:5;;1166:27;;15554:18:105;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;3263:2051:35:-;3483:25;3546:28;3577:9;3587:4;3577:15;;;;;;;;:::i;:::-;;;;;;;;;;;3546:46;;3650:1;3639:8;:12;3631:46;;;;-1:-1:-1;;;;;3631:46:35;;15984:2:105;3631:46:35;;;15966:21:105;16023:2;16003:18;;;15996:30;16062:23;16042:18;;;16035:51;16103:18;;3631:46:35;15782:345:105;3631:46:35;3804:17;3816:4;3804:11;:17::i;:::-;3784:37;;3882:21;3906:43;3923:8;3933:15;3906:16;:43::i;:::-;4051:16;;;;3999:15;;3882:67;;-1:-1:-1;3981:118:35;;-1:-1:-1;;;;;3999:15:35;;;;4051:16;4081:8;3981:56;:118::i;:::-;4226:19;4255:9;4265:4;4255:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:21;;;4248:78;;;;;;;;947:25:105;;;-1:-1:-1;;;;;4255:21:35;;;;4248:46;;920:18:105;;4248:78:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4431:17;;4407:114;;;;;;;;16300:25:105;;;4498:22:35;;;;;16368:14:105;16361:22;16341:18;;;16334:50;4226:100:35;;-1:-1:-1;4381:23:35;;-1:-1:-1;;;;;4431:17:35;;;;4407:73;;16273:18:105;;4407:114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4704:17;;4680:105;;;;;;;;4636:25:105;;;4677:18;;;4670:34;;;4381:140:35;;-1:-1:-1;4651:26:35;;-1:-1:-1;;;;;4704:17:35;;;;4680:75;;4609:18:105;;4680:105:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4651:134;;4934:18;4894:10;:36;;;:58;;;;;;;:::i;:::-;;;;-1:-1:-1;4989:217:35;;-1:-1:-1;5017:4:35;5035:13;5062:15;5091:18;5123:15;5152;5181;4989:14;:217::i;:::-;5292:4;5275:15;5252:55;;;;;;:::i;:::-;;;;;;;;5260:13;-1:-1:-1;;;;;5252:55:35;;5298:8;5252:55;;;;947:25:105;;935:2;920:18;;801:177;5252:55:35;;;;;;;;3510:1804;;;;;3263:2051;;;;;;;;:::o;14862:250:34:-;15038:10;;15001:5;;14983:122;;-1:-1:-1;;;;;15001:5:34;;;;15038:10;15062:12;15088:7;14983:41;:122::i;14001:5856:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;14359:27:35;;;:57;;;;;14415:1;14390:15;:22;:26;14359:57;14358:139;;;-1:-1:-1;;;;;;14438:27:35;;;;;;:58;;-1:-1:-1;14469:22:35;;:27;14438:58;14337:215;;;;-1:-1:-1;;;;;14337:215:35;;17139:2:105;14337:215:35;;;17121:21:105;17178:2;17158:18;;;17151:30;17217:31;17197:18;;;17190:59;17266:18;;14337:215:35;16937:353:105;14337:215:35;14618:27;14648:119;14673:4;14691:10;14715:15;14744:13;14648:11;:119::i;:::-;14618:149;;14824:28;14855:9;14865:4;14855:15;;;;;;;;:::i;:::-;;;;;;;;;;;14824:46;;14962:1;14938:8;:21;;;:25;14930:63;;;;-1:-1:-1;;;;;14930:63:35;;17497:2:105;14930:63:35;;;17479:21:105;17536:2;17516:18;;;17509:30;17575:27;17555:18;;;17548:55;17620:18;;14930:63:35;17295:349:105;14930:63:35;15120:1;15081:10;:36;;;:40;15060:117;;;;-1:-1:-1;;;;;15060:117:35;;17851:2:105;15060:117:35;;;17833:21:105;17890:2;17870:18;;;17863:30;17929:32;17909:18;;;17902:60;17979:18;;15060:117:35;17649:354:105;15060:117:35;15251:22;;;;:27;15243:60;;;;-1:-1:-1;;;;;15243:60:35;;18210:2:105;15243:60:35;;;18192:21:105;18249:2;18229:18;;;18222:30;18288:22;18268:18;;;18261:50;18328:18;;15243:60:35;18008:344:105;15243:60:35;15410:17;15422:4;15410:11;:17::i;:::-;;15469:23;15625:8;:19;;;15574:10;:36;;;15532:10;:26;;;15496:8;:21;;;:62;;;;:::i;:::-;15495:115;;;;:::i;:::-;:149;;;;:::i;:::-;15469:175;-1:-1:-1;15720:19:35;;15716:2322;;15930:17;;15906:146;;;;;;18610:13:105;;15906:146:35;;;18592:32:105;18680:4;18668:17;;18662:24;18640:20;;;18633:54;18731:17;;;18725:24;18703:20;;;18696:54;18806:4;18794:17;;18788:24;18766:20;;;18759:54;18869:4;18857:17;;18851:24;18829:20;;;18822:54;18932:4;18920:17;;18914:24;18892:20;;;18885:54;18955:19;;;18948:35;;;15829:19:35;;;;-1:-1:-1;;;;;15930:17:35;;;;15906:61;;18564:19:105;;15906:146:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15811:241;;;;16071:19;16067:1961;;;16153:21;;;:35;;;16222:11;;16211:7;;:22;16207:777;;;16416:19;;16412:213;;16567:17;;16548:54;;-1:-1:-1;;;;;16567:17:35;16586:15;16548:18;:54::i;:::-;16067:1961;;16207:777;16858:19;;16854:112;;16905:38;16927:15;16905:21;:38::i;16067:1961::-;17108:15;;17104:108;;17147:46;17166:13;17181:11;17147:18;:46::i;:::-;17245:11;;17234:7;;:22;17230:784;;;17443:19;;17439:213;;17594:17;;17575:54;;-1:-1:-1;;;;;17594:17:35;17613:15;17575:18;:54::i;17230:784::-;17888:19;;17884:112;;17935:38;17957:15;17935:21;:38::i;:::-;15741:2297;;15716:2322;18125:12;18120:1731;;18398:26;18427:106;18465:13;18500:15;18427:16;:106::i;:::-;18398:135;;18636:18;18657:9;18667:4;18657:15;;;;;;;;:::i;:::-;;;;;;;;;:21;:15;;;;;:21;;;;;18878:23;;;;18822:21;;-1:-1:-1;;;;;18657:21:35;;;;-1:-1:-1;18657:21:35;;:15;18822:28;;18846:4;18822:28;:::i;:::-;18821:80;;;;:::i;:::-;18988:33;;;;;;;;947:25:105;;;18803:98:35;;-1:-1:-1;;;;;;18988:24:35;;;;;920:18:105;;18988:33:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;19216:21:35;;19157:36;;;;:80;;-1:-1:-1;19216:21:35;;-1:-1:-1;19157:80:35;:::i;:::-;19098:36;;;;:139;;;;19337:15;;19319:97;;;;;19393:4;19319:97;;;2761:74:105;;;;-1:-1:-1;;;;;19337:15:35;;19319:44;;2734:18:105;;19319:97:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19304:112;;:12;19477:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;19477:37:35;;;;;;;;;:49;;19564:15;;19477:37;19515:10;;19477:49;;;;;;:::i;:::-;;;;;;;;;;;:84;;:102;;;;18332:1262;19764:4;19731:15;19674:166;;;;;;:::i;:::-;;;;;;;;;;19814:12;;4636:25:105;;;4692:2;4677:18;;4670:34;19674:166:35;-1:-1:-1;;;;;19674:166:35;;;;;4609:18:105;19674:166:35;;;;;;;18120:1731;14254:5603;;;14001:5856;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;12513:55:105;;895:58:12;;;12495:74:105;12585:18;;;12578:34;;;868:86:12;;888:5;;918:23;;12468:18:105;;895:58:12;12321:297:105;868:86:12;745:216;;;:::o;13231:209:34:-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;13419:14:::1;13395:21;;:38;;;;:::i;:::-;13371:21;:62:::0;-1:-1:-1;13231:209:34:o;24802:1109:35:-;25069:18;25089:25;25156:18;25177:9;25187:4;25177:15;;;;;;;;:::i;:::-;;;;;;;;:21;:15;;;;;:21;;-1:-1:-1;;;;;25177:21:35;;-1:-1:-1;25315:171:35;25338:4;25356:8;25378:15;25407:10;25431:12;25457:19;25315:9;:171::i;:::-;25284:202;;25564:121;25639:10;25663:4;:12;;;25582:9;25592:4;25582:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;25582:20:35;;25564:121;:61;:121::i;:::-;25798:12;;25742:110;;;;;;;;4636:25:105;;;;4677:18;;;4670:34;;;-1:-1:-1;;;;;25742:42:35;;;;;4609:18:105;;25742:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25729:123;;25883:4;:21;;;25863:41;;25116:795;;24802:1109;;;;;;;;;;:::o;11162:1280::-;11461:17;11481:9;11491:4;11481:15;;;;;;;;:::i;:::-;;;;;;;;;:21;:15;;;;;:21;;11580:17;;-1:-1:-1;;;;;11481:21:35;;;;-1:-1:-1;11562:114:35;;11580:17;11481:21;11657:9;11562:58;:114::i;:::-;11767:106;;;;;;;;4636:25:105;;;4677:18;;;4670:34;;;11748:16:35;;-1:-1:-1;;;;;11767:41:35;;;;;4609:18:105;;11767:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11748:125;;11951:116;12026:9;12049:8;11969:9;11979:4;11969:15;;;;;;;;:::i;11951:116::-;12268:167;12290:4;12308:8;12330:15;12359:8;12381:15;12410;12268:8;:167::i;:::-;;11421:1021;;11162:1280;;;;;;;:::o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;19696:2:105;3921:85:12;;;19678:21:105;19735:2;19715:18;;;19708:30;19774:34;19754:18;;;19747:62;19845:12;19825:18;;;19818:40;19875:19;;3921:85:12;19494:406:105;5320:686:35;5544:8;-1:-1:-1;;;;;5624:22:35;;5620:380;;5760:1;5735:15;:22;:26;5710:129;;;;-1:-1:-1;;;;;5710:129:35;;20107:2:105;5710:129:35;;;20089:21:105;20146:2;20126:18;;;20119:30;20185:34;20165:18;;;20158:62;20256:14;20236:18;;;20229:42;20288:19;;5710:129:35;19905:408:105;5710:129:35;5964:24;5972:15;5964:24;:::i;:::-;5956:33;;;;5320:686;-1:-1:-1;;;5320:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;20941:34:105;-1:-1:-1;;;;;21011:15:105;;;20991:18;;;20984:43;2236:20:12;;2301:5;;2259:15;;;;;20853:18:105;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;12513:55:105;;2343:69:12;;;12495:74:105;12585:18;;;12578:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;12468:18:105;;2343:69:12;12321:297:105;6445:1331:35;6751:23;6777:9;6787:4;6777:15;;;;;;;;:::i;:::-;;;;;;;;;6751:41;;;;;;;;;6777:15;;;;;;;6751:41;;-1:-1:-1;;;;;6751:41:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:491;;;;;;;;;;;;;;;;7103:32;7040:22;;6751:41;;-1:-1:-1;6868:491:35;;;7103:32;7040:43;;6908:18;;7040:43;:::i;:::-;7039:96;;;;:::i;:::-;6868:491;;;;;;;;;;;;;;;;-1:-1:-1;6868:491:35;;;;;;;7423:17;;;:11;:17;;;;;-1:-1:-1;;;;;7423:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7590:22;;6834:525;;-1:-1:-1;7590:26:35;7586:184;;7746:13;7632:18;:24;7651:4;7632:24;;;;;;;;;;;7657:15;7632:41;;;;;;:::i;:::-;;;;;;;;;;;;;:111;7728:1;7691:34;7705:4;7711:13;7691;:34::i;:::-;:38;;;;:::i;:::-;7632:111;;;;;;;;;;;;:127;;;;;-1:-1:-1;;;;;7632:127:35;;;;;-1:-1:-1;;;;;7632:127:35;;;;;;7586:184;6720:1056;;6445:1331;;;;;;;:::o;20351:605::-;20520:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20520:27:35;-1:-1:-1;;;;;20563:27:35;;;20559:391;;20652:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;20652:32:35;;;;;;;;;:44;;20685:10;;20652:44;;;;;;:::i;:::-;;;;;;;;;;;20641:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20559:391;;;20765:20;20788:24;;;:18;:24;;;;;;:41;;;;20813:15;;20788:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;20896:17;;;:11;:17;;;;;-1:-1:-1;;;;;20788:83:35;;;20896:31;;;;;;:43;;20788:83;;-1:-1:-1;20896:31:35;20788:83;;20896:43;;;;;;:::i;:::-;;;;;;;;;;;20885:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20713:237;20559:391;20351:605;;;;;;:::o;15354:333:34:-;15508:5;;15490:49;;;;;15533:4;15490:49;;;2761:74:105;15452:9:34;;15433:16;;-1:-1:-1;;;;;15508:5:34;;;;15490:34;;2734:18:105;;15490:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15471:68;;15565:8;15553:9;:20;15549:70;;;15600:8;15589:19;;15549:70;15646:5;;15628:52;;-1:-1:-1;;;;;15646:5:34;15666:3;15671:8;15628:37;:52::i;14100:214::-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;14292:15:::1;14267:22;;:40;;;;:::i;:::-;14242:22;:65:::0;-1:-1:-1;14100:214:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;21240:2:105;5148:81:13;;;21222:21:105;21279:2;21259:18;;;21252:30;21318:34;21298:18;;;21291:62;21389:8;21369:18;;;21362:36;21415:19;;5148:81:13;21038:402:105;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;21647:2:105;5239:60:13;;;21629:21:105;21686:2;21666:18;;;21659:30;21725:31;21705:18;;;21698:59;21774:18;;5239:60:13;21445:353:105;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:316:105:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:105;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:105;305:18;;;292:32;;14:316;-1:-1:-1;14:316:105:o;335:196::-;403:20;;-1:-1:-1;;;;;452:54:105;;442:65;;432:93;;521:1;518;511:12;432:93;335:196;;;:::o;536:260::-;604:6;612;665:2;653:9;644:7;640:23;636:32;633:52;;;681:1;678;671:12;633:52;704:29;723:9;704:29;:::i;:::-;694:39;;752:38;786:2;775:9;771:18;752:38;:::i;:::-;742:48;;536:260;;;;;:::o;983:254::-;1051:6;1059;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1164:9;1151:23;1141:33;;1193:38;1227:2;1216:9;1212:18;1193:38;:::i;1242:184::-;-1:-1:-1;;;;;1291:1:105;1284:88;1391:4;1388:1;1381:15;1415:4;1412:1;1405:15;1431:718;1473:5;1526:3;1519:4;1511:6;1507:17;1503:27;1493:55;;1544:1;1541;1534:12;1493:55;1580:6;1567:20;1606:18;1643:2;1639;1636:10;1633:36;;;1649:18;;:::i;:::-;1724:2;1718:9;1692:2;1778:13;;-1:-1:-1;;1774:22:105;;;1798:2;1770:31;1766:40;1754:53;;;1822:18;;;1842:22;;;1819:46;1816:72;;;1868:18;;:::i;:::-;1908:10;1904:2;1897:22;1943:2;1935:6;1928:18;1989:3;1982:4;1977:2;1969:6;1965:15;1961:26;1958:35;1955:55;;;2006:1;2003;1996:12;1955:55;2070:2;2063:4;2055:6;2051:17;2044:4;2036:6;2032:17;2019:54;2117:1;2110:4;2105:2;2097:6;2093:15;2089:26;2082:37;2137:6;2128:15;;;;;;1431:718;;;;:::o;2154:456::-;2240:6;2248;2256;2309:2;2297:9;2288:7;2284:23;2280:32;2277:52;;;2325:1;2322;2315:12;2277:52;2361:9;2348:23;2338:33;;2422:2;2411:9;2407:18;2394:32;2449:18;2441:6;2438:30;2435:50;;;2481:1;2478;2471:12;2435:50;2504:49;2545:7;2536:6;2525:9;2521:22;2504:49;:::i;:::-;2494:59;;;2600:2;2589:9;2585:18;2572:32;2562:42;;2154:456;;;;;:::o;2846:118::-;2932:5;2925:13;2918:21;2911:5;2908:32;2898:60;;2954:1;2951;2944:12;2969:377;3043:6;3051;3059;3112:2;3100:9;3091:7;3087:23;3083:32;3080:52;;;3128:1;3125;3118:12;3080:52;3164:9;3151:23;3141:33;;3221:2;3210:9;3206:18;3193:32;3183:42;;3275:2;3264:9;3260:18;3247:32;3288:28;3310:5;3288:28;:::i;:::-;3335:5;3325:15;;;2969:377;;;;;:::o;3351:186::-;3410:6;3463:2;3451:9;3442:7;3438:23;3434:32;3431:52;;;3479:1;3476;3469:12;3431:52;3502:29;3521:9;3502:29;:::i;3542:180::-;3601:6;3654:2;3642:9;3633:7;3629:23;3625:32;3622:52;;;3670:1;3667;3660:12;3622:52;-1:-1:-1;3693:23:105;;3542:180;-1:-1:-1;3542:180:105:o;3727:730::-;3837:6;3845;3853;3861;3869;3877;3930:3;3918:9;3909:7;3905:23;3901:33;3898:53;;;3947:1;3944;3937:12;3898:53;3970:29;3989:9;3970:29;:::i;:::-;3960:39;;4050:2;4039:9;4035:18;4022:32;4077:18;4069:6;4066:30;4063:50;;;4109:1;4106;4099:12;4063:50;4132:49;4173:7;4164:6;4153:9;4149:22;4132:49;:::i;:::-;4122:59;;;4228:2;4217:9;4213:18;4200:32;4190:42;;4279:2;4268:9;4264:18;4251:32;4241:42;;4333:3;4322:9;4318:19;4305:33;4347:28;4369:5;4347:28;:::i;:::-;4394:5;4384:15;;;4446:3;4435:9;4431:19;4418:33;4408:43;;3727:730;;;;;;;;:::o;4715:385::-;4801:6;4809;4817;4825;4878:3;4866:9;4857:7;4853:23;4849:33;4846:53;;;4895:1;4892;4885:12;4846:53;-1:-1:-1;;4918:23:105;;;4988:2;4973:18;;4960:32;;-1:-1:-1;5039:2:105;5024:18;;5011:32;;5090:2;5075:18;5062:32;;-1:-1:-1;4715:385:105;-1:-1:-1;4715:385:105:o;5105:322::-;5182:6;5190;5198;5251:2;5239:9;5230:7;5226:23;5222:32;5219:52;;;5267:1;5264;5257:12;5219:52;5303:9;5290:23;5280:33;;5360:2;5349:9;5345:18;5332:32;5322:42;;5383:38;5417:2;5406:9;5402:18;5383:38;:::i;:::-;5373:48;;5105:322;;;;;:::o;5432:454::-;5527:6;5535;5543;5551;5559;5612:3;5600:9;5591:7;5587:23;5583:33;5580:53;;;5629:1;5626;5619:12;5580:53;-1:-1:-1;;5652:23:105;;;5722:2;5707:18;;5694:32;;-1:-1:-1;5773:2:105;5758:18;;5745:32;;5824:2;5809:18;;5796:32;;-1:-1:-1;5875:3:105;5860:19;5847:33;;-1:-1:-1;5432:454:105;-1:-1:-1;5432:454:105:o;5891:241::-;5947:6;6000:2;5988:9;5979:7;5975:23;5971:32;5968:52;;;6016:1;6013;6006:12;5968:52;6055:9;6042:23;6074:28;6096:5;6074:28;:::i;6137:446::-;6220:6;6228;6236;6244;6297:3;6285:9;6276:7;6272:23;6268:33;6265:53;;;6314:1;6311;6304:12;6265:53;6350:9;6337:23;6327:33;;6407:2;6396:9;6392:18;6379:32;6369:42;;6461:2;6450:9;6446:18;6433:32;6474:28;6496:5;6474:28;:::i;:::-;6137:446;;;;-1:-1:-1;6521:5:105;;6573:2;6558:18;6545:32;;-1:-1:-1;;6137:446:105:o;7425:322::-;7502:6;7510;7518;7571:2;7559:9;7550:7;7546:23;7542:32;7539:52;;;7587:1;7584;7577:12;7539:52;7623:9;7610:23;7600:33;;7652:38;7686:2;7675:9;7671:18;7652:38;:::i;:::-;7642:48;;7737:2;7726:9;7722:18;7709:32;7699:42;;7425:322;;;;;:::o;8292:248::-;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;-1:-1:-1;;8460:23:105;;;8530:2;8515:18;;;8502:32;;-1:-1:-1;8292:248:105:o;8545:254::-;8613:6;8621;8674:2;8662:9;8653:7;8649:23;8645:32;8642:52;;;8690:1;8687;8680:12;8642:52;8713:29;8732:9;8713:29;:::i;:::-;8703:39;8789:2;8774:18;;;;8761:32;;-1:-1:-1;;;8545:254:105:o;8804:738::-;8926:6;8934;8942;8950;8958;8966;8974;9027:3;9015:9;9006:7;9002:23;8998:33;8995:53;;;9044:1;9041;9034:12;8995:53;9080:9;9067:23;9057:33;;9109:38;9143:2;9132:9;9128:18;9109:38;:::i;:::-;9099:48;;9198:2;9187:9;9183:18;9170:32;9225:18;9217:6;9214:30;9211:50;;;9257:1;9254;9247:12;9211:50;9280:49;9321:7;9312:6;9301:9;9297:22;9280:49;:::i;:::-;8804:738;;;;-1:-1:-1;9270:59:105;;9376:2;9361:18;;9348:32;;-1:-1:-1;9427:3:105;9412:19;;9399:33;;9479:3;9464:19;;9451:33;;-1:-1:-1;9531:3:105;9516:19;;;9503:33;;-1:-1:-1;8804:738:105;-1:-1:-1;;;8804:738:105:o;9547:821::-;9660:6;9668;9676;9684;9692;9745:3;9733:9;9724:7;9720:23;9716:33;9713:53;;;9762:1;9759;9752:12;9713:53;9798:9;9785:23;9775:33;;9859:2;9848:9;9844:18;9831:32;9882:18;9923:2;9915:6;9912:14;9909:34;;;9939:1;9936;9929:12;9909:34;9977:6;9966:9;9962:22;9952:32;;10022:7;10015:4;10011:2;10007:13;10003:27;9993:55;;10044:1;10041;10034:12;9993:55;10084:2;10071:16;10110:2;10102:6;10099:14;10096:34;;;10126:1;10123;10116:12;10096:34;10180:7;10175:2;10169;10161:6;10157:15;10153:2;10149:24;10145:33;10142:46;10139:66;;;10201:1;10198;10191:12;10139:66;9547:821;;10232:2;10224:11;;;;;-1:-1:-1;10254:6:105;;10307:2;10292:18;;10279:32;;-1:-1:-1;10358:2:105;10343:18;10330:32;;-1:-1:-1;9547:821:105;-1:-1:-1;;;9547:821:105:o;10373:355::-;10575:2;10557:21;;;10614:2;10594:18;;;10587:30;10653:33;10648:2;10633:18;;10626:61;10719:2;10704:18;;10373:355::o;10733:184::-;-1:-1:-1;;;;;10782:1:105;10775:88;10882:4;10879:1;10872:15;10906:4;10903:1;10896:15;10922:341;11124:2;11106:21;;;11163:2;11143:18;;;11136:30;11202:19;11197:2;11182:18;;11175:47;11254:2;11239:18;;10922:341::o;11268:347::-;11470:2;11452:21;;;11509:2;11489:18;;;11482:30;11548:25;11543:2;11528:18;;11521:53;11606:2;11591:18;;11268:347::o;11620:356::-;11822:2;11804:21;;;11841:18;;;11834:30;11900:34;11895:2;11880:18;;11873:62;11967:2;11952:18;;11620:356::o;11981:335::-;12183:2;12165:21;;;12222:2;12202:18;;;12195:30;12261:13;12256:2;12241:18;;12234:41;12307:2;12292:18;;11981:335::o;12623:184::-;12693:6;12746:2;12734:9;12725:7;12721:23;12717:32;12714:52;;;12762:1;12759;12752:12;12714:52;-1:-1:-1;12785:16:105;;12623:184;-1:-1:-1;12623:184:105:o;12812:::-;-1:-1:-1;;;;;12861:1:105;12854:88;12961:4;12958:1;12951:15;12985:4;12982:1;12975:15;13001:125;13041:4;13069:1;13066;13063:8;13060:34;;;13074:18;;:::i;:::-;-1:-1:-1;13111:9:105;;13001:125::o;13131:168::-;13171:7;13237:1;13233;13229:6;13225:14;13222:1;13219:21;13214:1;13207:9;13200:17;13196:45;13193:71;;;13244:18;;:::i;:::-;-1:-1:-1;13284:9:105;;13131:168::o;13304:274::-;13344:1;13370;13360:189;;-1:-1:-1;;;;;13402:1:105;13395:88;13506:4;13503:1;13496:15;13534:4;13531:1;13524:15;13360:189;-1:-1:-1;13563:9:105;;13304:274::o;13583:128::-;13623:3;13654:1;13650:6;13647:1;13644:13;13641:39;;;13660:18;;:::i;:::-;-1:-1:-1;13696:9:105;;13583:128::o;13716:339::-;13918:2;13900:21;;;13957:2;13937:18;;;13930:30;13996:17;13991:2;13976:18;;13969:45;14046:2;14031:18;;13716:339::o;14060:135::-;14099:3;-1:-1:-1;;14120:17:105;;14117:43;;;14140:18;;:::i;:::-;-1:-1:-1;14187:1:105;14176:13;;14060:135::o;16395:258::-;16467:1;16477:113;16491:6;16488:1;16485:13;16477:113;;;16567:11;;;16561:18;16548:11;;;16541:39;16513:2;16506:10;16477:113;;;16608:6;16605:1;16602:13;16599:48;;;-1:-1:-1;;16643:1:105;16625:16;;16618:27;16395:258::o;16658:274::-;16787:3;16825:6;16819:13;16841:53;16887:6;16882:3;16875:4;16867:6;16863:17;16841:53;:::i;:::-;16910:16;;;;;16658:274;-1:-1:-1;;16658:274:105:o;18994:245::-;19073:6;19081;19134:2;19122:9;19113:7;19109:23;19105:32;19102:52;;;19150:1;19147;19140:12;19102:52;-1:-1:-1;;19173:16:105;;19229:2;19214:18;;;19208:25;19173:16;;19208:25;;-1:-1:-1;18994:245:105:o;19244:::-;19311:6;19364:2;19352:9;19343:7;19339:23;19335:32;19332:52;;;19380:1;19377;19370:12;19332:52;19412:9;19406:16;19431:28;19453:5;19431:28;:::i;20318:383::-;20436:12;;20484:4;20473:16;;20467:23;-1:-1:-1;;20558:11:105;;;;20436:12;20467:23;20592:2;20581:14;;20578:117;;;20682:2;20669:6;20665:2;20661:15;20658:1;20654:23;20651:1;20647:31;20643:2;20639:40;20635:2;20631:49;20627:58;20618:67;;20578:117;;;;20318:383;;;:::o;21803:::-;21952:2;21941:9;21934:21;21915:4;21984:6;21978:13;22027:6;22022:2;22011:9;22007:18;22000:34;22043:66;22102:6;22097:2;22086:9;22082:18;22077:2;22069:6;22065:15;22043:66;:::i;:::-;22170:2;22149:15;-1:-1:-1;;22145:29:105;22130:45;;;;22177:2;22126:54;;21803:383;-1:-1:-1;;21803:383:105:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/Zorro/Vaults/IVault.sol\";\n\nimport \"../interfaces/Zorro/Vaults/Actions/IVaultActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _vid index of vault\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _vid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get vault info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(_vaultInfo.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _vid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates vaultInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _vid index of vault\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get vault info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the vault before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updateVault(_vid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(_vaultInfo.want).safeIncreaseAllowance(\n            _vaultInfo.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(vaultInfo[_vid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = IZorroControllerActions(controllerActions)\n            .getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = IZorroControllerActions(controllerActions)\n            .getUserContribution(sharesAdded, _timeMultiplier);\n\n        // Update vault info: Increment the vault's total contributions by the contribution added\n        _vaultInfo.totalTrancheContributions += _contributionAdded;\n\n        // Create tranche\n        _createTranche(\n            _vid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _vid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _vid Index of vault\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _vid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get vault\n        VaultInfo memory _vault = vaultInfo[_vid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: (_vault.accZORRORewards * _contributionAdded) /\n                _vault.totalTrancheContributions, // Pro-rata share of accumulated vault rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_vid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_vid][_foreignAccount][\n                trancheLength(_vid, _localAccount) - 1\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _vid index of vault to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _vid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _vid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _vid index of vault to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _vid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _vid index of vault to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Safe increase allowance of stablecoin\n        IERC20Upgradeable(defaultStablecoin).safeIncreaseAllowance(\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(vaultInfo[_vid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // TODO: Why when making a deposit, we proactively send funds over, and on a withdrawal we utilise safeTransferFrom()?\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _vid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _vid index of vault\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _vid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(vaultInfo[_vid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _vid index of vault\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _vid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _vid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get vault and current tranche info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _vaultInfo.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the vault before anything to ensure rewards have been updated and transferred\n        updateVault(_vid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (_tranche.contribution *\n            _vaultInfo.accZORRORewards) /\n            _vaultInfo.totalTrancheContributions -\n            _tranche.rewardDebt;\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = IZorroControllerActions(controllerActions).getAdjustedRewards(\n                    _tranche,\n                    _pendingRewards\n                );\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Separate block to make stack shallow\n            {\n                // Get local (on-chain) account\n                address _resolvedLocalAcct = _getLocalAccount(\n                    _localAccount,\n                    _foreignAccount\n                );\n\n                // Sub block\n                {\n                    // Get vault\n                    address _vaultAddr = vaultInfo[_vid].vault;\n                    IVault _vault = IVault(_vaultAddr);\n\n                    // Get staked want tokens\n                    uint256 _shares = (_tranche.contribution * 1e12) /\n                        _tranche.timeMultiplier;\n\n                    // Withdraw the want token for this account\n                    _vault.withdrawWantToken(_shares);\n                }\n\n                // Update shares safely\n                _vaultInfo.totalTrancheContributions =\n                    _vaultInfo.totalTrancheContributions -\n                    _tranche.contribution;\n\n                // Calculate Want token balance\n                _res.wantAmt = IERC20Upgradeable(_vaultInfo.want).balanceOf(\n                    address(this)\n                );\n\n                // Mark tranche as exited\n                trancheInfo[_vid][_resolvedLocalAcct][_trancheId]\n                    .exitedVaultAt = block.timestamp;\n            }\n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _vid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _vid Vault ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _vid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_vid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_vid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_vid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a vault and converts the Want token into USD\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _vid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _vid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a vault and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = vaultInfo[_vid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _vid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(vaultInfo[_vid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromVid index of vault FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toVid index of vault TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromVid,\n        uint256 _fromTrancheId,\n        uint256 _toVid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromVid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromVid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromVid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            vaultInfo[_toVid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toVid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromVid, _fromTrancheId, _toVid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a vault\n    /// @param _vid index of vault\n    function withdrawAll(uint256 _vid) public nonReentrant {\n        // Iterate through all tranches for the current user and vault and withdraw\n        uint256 numTranches = trancheLength(_vid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_vid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(vaultInfo[_vid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(vaultInfo[_vid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n        nonReentrant\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n        nonReentrant\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted - _totalSlashed\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        16050
      ],
      "IAMMRouter01": [
        13875
      ],
      "IAMMRouter02": [
        13963
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        15825
      ],
      "IVaultActions": [
        15358
      ],
      "IZorro": [
        15158
      ],
      "IZorroController": [
        14893
      ],
      "IZorroControllerActions": [
        14302
      ],
      "IZorroControllerAnalytics": [
        14692
      ],
      "IZorroControllerBase": [
        14666
      ],
      "IZorroControllerInvestment": [
        14853
      ],
      "IZorroControllerVaultMgmt": [
        14883
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapUni": [
        16301
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10186
      ],
      "ZorroControllerBase": [
        7042
      ],
      "ZorroControllerInvestment": [
        8305
      ]
    },
    "id": 8306,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7044,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 2885,
        "src": "58:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 7043,
        "src": "148:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/IVault.sol",
        "file": "../interfaces/Zorro/Vaults/IVault.sol",
        "id": 7047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15826,
        "src": "186:47:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "file": "../interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "id": 7048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15359,
        "src": "235:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "file": "../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "id": 7049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 14303,
        "src": "299:77:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol",
        "file": "../interfaces/Zorro/Controllers/IZorroController.sol",
        "id": 7050,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 14894,
        "src": "378:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7051,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 10187,
        "src": "442:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7052,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14853,
              "src": "532:26:35"
            },
            "id": 7053,
            "nodeType": "InheritanceSpecifier",
            "src": "532:26:35"
          },
          {
            "baseName": {
              "id": 7054,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7042,
              "src": "564:19:35"
            },
            "id": 7055,
            "nodeType": "InheritanceSpecifier",
            "src": "564:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8305,
        "linearizedBaseContracts": [
          8305,
          7042,
          1944,
          571,
          3169,
          1774,
          14853,
          14666
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "499:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7059,
            "libraryName": {
              "id": 7056,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "617:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "611:49:35",
            "typeName": {
              "id": 7058,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7057,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "642:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "642:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7061,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "710:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "698:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7060,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "698:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7063,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "814:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "799:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7062,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7075,
              "nodeType": "Block",
              "src": "999:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7067,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "1017:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1017:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7069,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7063,
                          "src": "1033:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1017:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1054:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1009:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7073,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:59:35"
                },
                {
                  "id": 7074,
                  "nodeType": "PlaceholderStatement",
                  "src": "1078:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7064,
              "nodeType": "StructuredDocumentation",
              "src": "896:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7076,
            "name": "onlyZorroXChain",
            "nameLocation": "981:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:35"
            },
            "src": "972:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14737
            ],
            "body": {
              "id": 7088,
              "nodeType": "Block",
              "src": "1314:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7084,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7061,
                      "src": "1324:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7085,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7079,
                      "src": "1349:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1324:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7087,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7077,
              "nodeType": "StructuredDocumentation",
              "src": "1111:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7089,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7081,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1304:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1304:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "1253:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7079,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "1284:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7089,
                  "src": "1279:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7078,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:16:35"
            },
            "returnParameters": {
              "id": 7083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:35"
            },
            "scope": 8305,
            "src": "1244:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14742
            ],
            "body": {
              "id": 7101,
              "nodeType": "Block",
              "src": "1540:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7097,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7063,
                      "src": "1550:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7098,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "1572:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1550:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7100,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7090,
              "nodeType": "StructuredDocumentation",
              "src": "1371:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7094,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1530:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1530:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "1479:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7092,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1510:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7102,
                  "src": "1502:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:19:35"
            },
            "returnParameters": {
              "id": 7096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:35"
            },
            "scope": 8305,
            "src": "1470:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14751
            ],
            "body": {
              "id": 7146,
              "nodeType": "Block",
              "src": "1971:509:35",
              "statements": [
                {
                  "assignments": [
                    7116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7116,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "2025:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7146,
                      "src": "2007:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7114,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14562,
                          "src": "2007:9:35"
                        },
                        "referencedDeclaration": 14562,
                        "src": "2007:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7120,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7117,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "2038:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7119,
                    "indexExpression": {
                      "id": 7118,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7105,
                      "src": "2048:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2038:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2199:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2199:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7130,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2231:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2223:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2223:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2223:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7132,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7107,
                        "src": "2250:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7122,
                              "name": "_vaultInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7116,
                              "src": "2152:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                              }
                            },
                            "id": 7123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "2152:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7121,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2134:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:34:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "2134:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2134:134:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7134,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:134:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7136,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "2339:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7137,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2357:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2357:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7140,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7107,
                        "src": "2397:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7141,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7109,
                        "src": "2419:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7142,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2448:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2448:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7135,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "2317:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7145,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7103,
              "nodeType": "StructuredDocumentation",
              "src": "1615:227:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _vid index of vault\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7111,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "1958:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "1856:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7105,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "1881:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7147,
                  "src": "1873:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7107,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "1903:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7147,
                  "src": "1895:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7109,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "1929:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7147,
                  "src": "1921:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:87:35"
            },
            "returnParameters": {
              "id": 7113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:35"
            },
            "scope": 8305,
            "src": "1847:633:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7257,
              "nodeType": "Block",
              "src": "3510:1804:35",
              "statements": [
                {
                  "assignments": [
                    7167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7167,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "3564:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7257,
                      "src": "3546:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7165,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14562,
                          "src": "3546:9:35"
                        },
                        "referencedDeclaration": 14562,
                        "src": "3546:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7171,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7168,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "3577:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7170,
                    "indexExpression": {
                      "id": 7169,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7150,
                      "src": "3587:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3577:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3546:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7173,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7156,
                          "src": "3639:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3650:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3639:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3631:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7178,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:46:35"
                },
                {
                  "expression": {
                    "id": 7183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7179,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7163,
                      "src": "3784:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7181,
                          "name": "_vid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7150,
                          "src": "3816:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7180,
                        "name": "updateVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6890,
                        "src": "3804:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3804:17:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3784:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7184,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:37:35"
                },
                {
                  "assignments": [
                    7186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7186,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "3890:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7257,
                      "src": "3882:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3882:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7191,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7188,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "3923:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7189,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "3933:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7187,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7298,
                      "src": "3906:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3882:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7197,
                          "name": "_vaultInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7167,
                          "src": "4051:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                          }
                        },
                        "id": 7198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14561,
                        "src": "4051:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7199,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "4081:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7193,
                              "name": "_vaultInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7167,
                              "src": "3999:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                              }
                            },
                            "id": 7194,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "3999:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7192,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3981:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3981:34:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "3981:56:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:118:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7201,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:118:35"
                },
                {
                  "assignments": [
                    7203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7203,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "4234:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7257,
                      "src": "4226:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4226:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7213,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7211,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "4308:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7205,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "4255:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7207,
                              "indexExpression": {
                                "id": 7206,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7150,
                                "src": "4265:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4255:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14561,
                            "src": "4255:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7204,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15825,
                          "src": "4248:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$15825_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4248:29:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$15825",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15787,
                      "src": "4248:46:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4248:78:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4226:100:35"
                },
                {
                  "assignments": [
                    7215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7215,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "4389:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7257,
                      "src": "4381:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4381:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7223,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7220,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "4481:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7221,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "4498:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7217,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4431:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7216,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14302,
                          "src": "4407:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14302_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4407:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14302",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14292,
                      "src": "4407:73:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4381:140:35"
                },
                {
                  "assignments": [
                    7225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7225,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "4659:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7257,
                      "src": "4651:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4651:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7230,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7203,
                        "src": "4756:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7231,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "4769:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7227,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4704:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7226,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14302,
                          "src": "4680:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14302_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4680:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14302",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14301,
                      "src": "4680:75:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4680:105:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4651:134:35"
                },
                {
                  "expression": {
                    "id": 7238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7234,
                        "name": "_vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7167,
                        "src": "4894:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                        }
                      },
                      "id": 7236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14559,
                      "src": "4894:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 7237,
                      "name": "_contributionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7225,
                      "src": "4934:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4894:58:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7239,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:58:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7241,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "5017:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7242,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7186,
                        "src": "5035:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7243,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "5062:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7244,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7225,
                        "src": "5091:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7245,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "5123:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7246,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "5152:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7247,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7160,
                        "src": "5181:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7240,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7373,
                      "src": "4989:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4989:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7249,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7251,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7186,
                        "src": "5260:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7252,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "5275:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7253,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "5292:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7254,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "5298:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7250,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14710,
                      "src": "5252:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7256,
                  "nodeType": "EmitStatement",
                  "src": "5247:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7148,
              "nodeType": "StructuredDocumentation",
              "src": "2486:772:35",
              "text": "@notice Deposits tokens into Vault, updates vaultInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _vid index of vault\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3272:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "3298:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3290:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3320:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3312:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7154,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "3351:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3338:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7156,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3384:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3376:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7158,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "3410:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3402:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7160,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "3443:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3435:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3280:184:35"
            },
            "returnParameters": {
              "id": 7164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7163,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "3491:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7258,
                  "src": "3483:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3483:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3482:27:35"
            },
            "scope": 8305,
            "src": "3263:2051:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7297,
              "nodeType": "Block",
              "src": "5466:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7267,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7265,
                      "src": "5529:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7268,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7260,
                      "src": "5544:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5529:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7270,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7271,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7260,
                      "src": "5624:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5644:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5636:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5636:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5636:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5624:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7296,
                  "nodeType": "IfStatement",
                  "src": "5620:380:35",
                  "trueBody": {
                    "id": 7295,
                    "nodeType": "Block",
                    "src": "5648:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7278,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7262,
                                  "src": "5735:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5735:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5760:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5735:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5779:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7277,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5710:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5710:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7284,
                        "nodeType": "ExpressionStatement",
                        "src": "5710:129:35"
                      },
                      {
                        "expression": {
                          "id": 7293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7285,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7265,
                            "src": "5941:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7290,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7262,
                                    "src": "5972:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5964:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7288,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5964:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5964:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5956:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7286,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5956:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5956:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5941:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7294,
                        "nodeType": "ExpressionStatement",
                        "src": "5941:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "5329:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7260,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5354:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "5346:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5346:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7262,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "5377:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "5364:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7261,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5364:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:48:35"
            },
            "returnParameters": {
              "id": 7266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7265,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "5448:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "5440:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5440:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5439:22:35"
            },
            "scope": 8305,
            "src": "5320:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7372,
              "nodeType": "Block",
              "src": "6720:1056:35",
              "statements": [
                {
                  "assignments": [
                    7318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7318,
                      "mutability": "mutable",
                      "name": "_vault",
                      "nameLocation": "6768:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7372,
                      "src": "6751:23:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_memory_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7316,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14562,
                          "src": "6751:9:35"
                        },
                        "referencedDeclaration": 14562,
                        "src": "6751:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7322,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7319,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "6777:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7321,
                    "indexExpression": {
                      "id": 7320,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7301,
                      "src": "6787:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6777:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6751:41:35"
                },
                {
                  "assignments": [
                    7325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7325,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "6853:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7372,
                      "src": "6834:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7324,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7323,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14548,
                          "src": "6834:11:35"
                        },
                        "referencedDeclaration": 14548,
                        "src": "6834:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7341,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7327,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7307,
                        "src": "6908:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7328,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7309,
                        "src": "6998:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7329,
                                  "name": "_vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7318,
                                  "src": "7040:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultInfo_$14562_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.VaultInfo memory"
                                  }
                                },
                                "id": 7330,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14557,
                                "src": "7040:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 7331,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7307,
                                "src": "7065:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7040:43:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 7333,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7039:45:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 7334,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7318,
                            "src": "7103:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultInfo_$14562_memory_ptr",
                              "typeString": "struct IZorroControllerBase.VaultInfo memory"
                            }
                          },
                          "id": 7335,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14559,
                          "src": "7103:32:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7039:96:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7337,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7311,
                        "src": "7248:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7338,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7313,
                        "src": "7303:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7326,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14548,
                      "src": "6868:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$14548_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6868:491:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6834:525:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7348,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7325,
                        "src": "7461:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7342,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "7423:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7345,
                          "indexExpression": {
                            "id": 7343,
                            "name": "_vid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7301,
                            "src": "7435:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7423:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7346,
                        "indexExpression": {
                          "id": 7344,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7303,
                          "src": "7441:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7423:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7423:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$14548_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7423:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7350,
                  "nodeType": "ExpressionStatement",
                  "src": "7423:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7351,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7305,
                        "src": "7590:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7590:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7615:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7590:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7371,
                  "nodeType": "IfStatement",
                  "src": "7586:184:35",
                  "trueBody": {
                    "id": 7370,
                    "nodeType": "Block",
                    "src": "7618:152:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7355,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6488,
                                  "src": "7632:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7364,
                                "indexExpression": {
                                  "id": 7356,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7301,
                                  "src": "7651:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7632:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7365,
                              "indexExpression": {
                                "id": 7357,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7305,
                                "src": "7657:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7632:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7366,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7359,
                                    "name": "_vid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7301,
                                    "src": "7705:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 7360,
                                    "name": "_localAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7303,
                                    "src": "7711:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7358,
                                  "name": "trancheLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "7691:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address) view returns (uint256)"
                                  }
                                },
                                "id": 7361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7691:34:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7728:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7691:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7632:111:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7367,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7303,
                            "src": "7746:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7632:127:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7369,
                        "nodeType": "ExpressionStatement",
                        "src": "7632:127:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7299,
              "nodeType": "StructuredDocumentation",
              "src": "6012:428:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _vid Index of vault\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "6454:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7301,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "6486:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6478:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7303,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "6508:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6500:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7305,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6544:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6531:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7304,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6531:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7307,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "6577:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6569:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6569:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "6613:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6605:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6605:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7311,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "6646:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6638:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7313,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6689:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "6681:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6468:242:35"
            },
            "returnParameters": {
              "id": 7315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6720:0:35"
            },
            "scope": 8305,
            "src": "6445:1331:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14762
            ],
            "body": {
              "id": 7416,
              "nodeType": "Block",
              "src": "8432:519:35",
              "statements": [
                {
                  "assignments": [
                    7388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7388,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "8480:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7416,
                      "src": "8472:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7387,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8472:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7393,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7389,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "8492:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7391,
                      "indexExpression": {
                        "id": 7390,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8502:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8492:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7392,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14561,
                    "src": "8492:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8472:41:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8634:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8634:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7400,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7388,
                        "src": "8658:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7401,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7378,
                        "src": "8681:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7395,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "8585:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7394,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "8567:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8567:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "8567:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8567:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7403,
                  "nodeType": "ExpressionStatement",
                  "src": "8567:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7405,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8777:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8795:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8795:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8819:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7409,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7378,
                        "src": "8835:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7410,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7380,
                        "src": "8858:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7411,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8887:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8887:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7413,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7382,
                        "src": "8916:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7404,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7529,
                      "src": "8744:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8744:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7415,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7374,
              "nodeType": "StructuredDocumentation",
              "src": "7782:473:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _vid index of vault to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7417,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7384,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8419:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8419:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "8269:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7376,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "8305:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7417,
                  "src": "8297:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8297:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7378,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "8327:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7417,
                  "src": "8319:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8319:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7380,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "8354:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7417,
                  "src": "8346:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8346:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7382,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "8387:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7417,
                  "src": "8379:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8379:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8287:124:35"
            },
            "returnParameters": {
              "id": 7386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8432:0:35"
            },
            "scope": 8305,
            "src": "8260:691:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14779
            ],
            "body": {
              "id": 7464,
              "nodeType": "Block",
              "src": "9916:539:35",
              "statements": [
                {
                  "assignments": [
                    7438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7438,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "9964:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7464,
                      "src": "9956:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7437,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9956:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7443,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7439,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "9976:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7441,
                      "indexExpression": {
                        "id": 7440,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7420,
                        "src": "9986:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9976:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7442,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14561,
                    "src": "9976:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9956:41:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10118:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10118:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7450,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7438,
                        "src": "10142:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7451,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7426,
                        "src": "10165:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7445,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "10069:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7444,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "10051:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "10051:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10051:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7453,
                  "nodeType": "ExpressionStatement",
                  "src": "10051:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7455,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7420,
                        "src": "10270:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7456,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7422,
                        "src": "10288:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7457,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7424,
                        "src": "10310:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7458,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7426,
                        "src": "10339:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7459,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7428,
                        "src": "10362:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7460,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7430,
                        "src": "10391:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7461,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7432,
                        "src": "10420:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7454,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7529,
                      "src": "10237:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10237:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7463,
                  "nodeType": "ExpressionStatement",
                  "src": "10237:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7418,
              "nodeType": "StructuredDocumentation",
              "src": "8957:672:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _vid index of vault to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7434,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7076,
                  "src": "9900:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "9900:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "9643:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7420,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "9689:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9681:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9681:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7422,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9711:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9703:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9703:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7424,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9742:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9729:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7423,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9729:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "9775:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9767:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9767:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "9802:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9794:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7430,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "9835:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9827:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9827:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7432,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "9868:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7465,
                  "src": "9860:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9860:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9671:221:35"
            },
            "returnParameters": {
              "id": 7436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9916:0:35"
            },
            "scope": 8305,
            "src": "9634:821:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7528,
              "nodeType": "Block",
              "src": "11421:1021:35",
              "statements": [
                {
                  "assignments": [
                    7484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7484,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11469:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7528,
                      "src": "11461:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7483,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11461:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7489,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7485,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "11481:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7487,
                      "indexExpression": {
                        "id": 7486,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "11491:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11481:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7488,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14561,
                    "src": "11481:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11461:41:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7494,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "11634:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7495,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "11657:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7491,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "11580:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7490,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11562:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11562:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11562:58:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11562:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7497,
                  "nodeType": "ExpressionStatement",
                  "src": "11562:114:35"
                },
                {
                  "assignments": [
                    7499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7499,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "11756:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7528,
                      "src": "11748:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11748:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7507,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7504,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "11822:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7505,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7480,
                        "src": "11845:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7501,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7484,
                            "src": "11774:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7500,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15825,
                          "src": "11767:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$15825_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11767:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$15825",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15780,
                      "src": "11767:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11767:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11748:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7515,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "12026:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7516,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7499,
                        "src": "12049:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7509,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "11969:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7511,
                              "indexExpression": {
                                "id": 7510,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7468,
                                "src": "11979:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11969:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "11969:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7508,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11951:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11951:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11951:61:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11951:116:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7518,
                  "nodeType": "ExpressionStatement",
                  "src": "11951:116:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7520,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "12290:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7521,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7470,
                        "src": "12308:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7522,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7472,
                        "src": "12330:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7523,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7499,
                        "src": "12359:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7524,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7476,
                        "src": "12381:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7525,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7478,
                        "src": "12410:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7519,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "12268:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12268:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7527,
                  "nodeType": "ExpressionStatement",
                  "src": "12268:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7466,
              "nodeType": "StructuredDocumentation",
              "src": "10461:696:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _vid index of vault to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "11171:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "11208:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11200:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11200:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7470,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "11230:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11222:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11222:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7472,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "11261:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11248:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7471,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11248:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7474,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11294:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11286:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11286:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11321:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11313:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11313:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7478,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "11354:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11346:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11346:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7480,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11387:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7529,
                  "src": "11379:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11379:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11190:221:35"
            },
            "returnParameters": {
              "id": 7482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11421:0:35"
            },
            "scope": 8305,
            "src": "11162:1280:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14790
            ],
            "body": {
              "id": 7572,
              "nodeType": "Block",
              "src": "12870:429:35",
              "statements": [
                {
                  "assignments": [
                    7545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7545,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "12935:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7572,
                      "src": "12911:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7544,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7543,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14700,
                          "src": "12911:16:35"
                        },
                        "referencedDeclaration": 14700,
                        "src": "12911:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14700_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7547,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7532,
                        "src": "12965:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7548,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12983:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12983:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13007:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7551,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7534,
                        "src": "13023:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7552,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7536,
                        "src": "13047:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13073:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7546,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7859,
                      "src": "12942:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14700_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12942:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12911:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7563,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13216:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13216:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7565,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7545,
                          "src": "13240:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14697,
                        "src": "13240:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7557,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "13168:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7559,
                              "indexExpression": {
                                "id": 7558,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7532,
                                "src": "13178:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13168:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7560,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "13168:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7556,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "13150:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13150:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "13150:52:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13150:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7568,
                  "nodeType": "ExpressionStatement",
                  "src": "13150:112:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7569,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "13280:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14697,
                    "src": "13280:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7542,
                  "id": 7571,
                  "nodeType": "Return",
                  "src": "13273:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7530,
              "nodeType": "StructuredDocumentation",
              "src": "12448:278:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _vid index of vault\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7538,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "12839:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "12839:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12740:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7532,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "12766:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "12758:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12758:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7534,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "12788:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "12780:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12780:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7536,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "12813:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "12808:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12808:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12748:83:35"
            },
            "returnParameters": {
              "id": 7542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7541,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7573,
                  "src": "12861:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12861:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12860:9:35"
            },
            "scope": 8305,
            "src": "12731:568:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7858,
              "nodeType": "Block",
              "src": "14254:5603:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7593,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7578,
                                  "src": "14359:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7596,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14384:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7595,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14376:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7594,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14376:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7597,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14376:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14359:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7599,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "14390:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14390:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14415:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14390:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14359:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7604,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14358:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7605,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7578,
                                  "src": "14438:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7608,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14463:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14455:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7606,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14455:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14455:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14438:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7611,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "14469:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14469:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14495:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14469:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14438:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7616,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14437:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14358:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14511:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14337:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14337:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7620,
                  "nodeType": "ExpressionStatement",
                  "src": "14337:215:35"
                },
                {
                  "assignments": [
                    7623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7623,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "14637:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7858,
                      "src": "14618:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7621,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14548,
                          "src": "14618:11:35"
                        },
                        "referencedDeclaration": 14548,
                        "src": "14618:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7630,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7625,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7576,
                        "src": "14673:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7626,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7582,
                        "src": "14691:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7627,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "14715:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7628,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "14744:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7624,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7914,
                      "src": "14648:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$14548_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14648:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14618:149:35"
                },
                {
                  "assignments": [
                    7633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7633,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "14842:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7858,
                      "src": "14824:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7632,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7631,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14562,
                          "src": "14824:9:35"
                        },
                        "referencedDeclaration": 14562,
                        "src": "14824:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7637,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7634,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "14855:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7636,
                    "indexExpression": {
                      "id": 7635,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7576,
                      "src": "14865:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14855:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14824:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7639,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "14938:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7640,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14537,
                          "src": "14938:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14962:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14938:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14965:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14930:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14930:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7645,
                  "nodeType": "ExpressionStatement",
                  "src": "14930:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7647,
                            "name": "_vaultInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7633,
                            "src": "15081:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                              "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                            }
                          },
                          "id": 7648,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14559,
                          "src": "15081:36:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15120:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15081:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15135:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15060:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15060:117:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7653,
                  "nodeType": "ExpressionStatement",
                  "src": "15060:117:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7655,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "15251:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7656,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14547,
                          "src": "15251:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15277:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15251:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15280:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15243:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15243:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7661,
                  "nodeType": "ExpressionStatement",
                  "src": "15243:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7663,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7576,
                        "src": "15422:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7662,
                      "name": "updateVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6890,
                      "src": "15410:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15410:17:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7665,
                  "nodeType": "ExpressionStatement",
                  "src": "15410:17:35"
                },
                {
                  "assignments": [
                    7667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7667,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "15477:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7858,
                      "src": "15469:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15469:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7680,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7668,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7623,
                                "src": "15496:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7669,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14537,
                              "src": "15496:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 7670,
                                "name": "_vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7633,
                                "src": "15532:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                }
                              },
                              "id": 7671,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accZORRORewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14557,
                              "src": "15532:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15496:62:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7673,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15495:64:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 7674,
                          "name": "_vaultInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7633,
                          "src": "15574:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                          }
                        },
                        "id": 7675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14559,
                        "src": "15574:36:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15495:115:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 7677,
                        "name": "_tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7623,
                        "src": "15625:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      },
                      "id": 7678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14541,
                      "src": "15625:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15495:149:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15469:175:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7681,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7667,
                      "src": "15720:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15738:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15720:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7767,
                  "nodeType": "IfStatement",
                  "src": "15716:2322:35",
                  "trueBody": {
                    "id": 7766,
                    "nodeType": "Block",
                    "src": "15741:2297:35",
                    "statements": [
                      {
                        "assignments": [
                          7685,
                          7687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7685,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "15837:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7766,
                            "src": "15829:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15829:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7687,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "15874:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7766,
                            "src": "15866:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7686,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15866:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7695,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7692,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7623,
                              "src": "15989:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7693,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7667,
                              "src": "16019:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7689,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6492,
                                  "src": "15930:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7688,
                                "name": "IZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14302,
                                "src": "15906:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14302_$",
                                  "typeString": "type(contract IZorroControllerActions)"
                                }
                              },
                              "id": 7690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15906:42:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorroControllerActions_$14302",
                                "typeString": "contract IZorroControllerActions"
                              }
                            },
                            "id": 7691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14283,
                            "src": "15906:61:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$14548_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15906:146:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15811:241:35"
                      },
                      {
                        "condition": {
                          "id": 7696,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7586,
                          "src": "16071:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7764,
                          "nodeType": "Block",
                          "src": "17004:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7729,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7685,
                                  "src": "17108:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17122:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17108:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7738,
                              "nodeType": "IfStatement",
                              "src": "17104:108:35",
                              "trueBody": {
                                "id": 7737,
                                "nodeType": "Block",
                                "src": "17125:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7733,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7578,
                                          "src": "17166:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7734,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7685,
                                          "src": "17181:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7732,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7014,
                                        "src": "17147:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7735,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17147:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7736,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17147:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7739,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "17234:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7740,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "17245:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17234:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7762,
                                "nodeType": "Block",
                                "src": "17676:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7755,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7753,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7687,
                                        "src": "17888:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7754,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17906:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17888:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7761,
                                    "nodeType": "IfStatement",
                                    "src": "17884:112:35",
                                    "trueBody": {
                                      "id": 7760,
                                      "nodeType": "Block",
                                      "src": "17909:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7757,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7687,
                                                "src": "17957:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7756,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6941,
                                              "src": "17935:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7758,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17935:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7759,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17935:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7763,
                              "nodeType": "IfStatement",
                              "src": "17230:784:35",
                              "trueBody": {
                                "id": 7752,
                                "nodeType": "Block",
                                "src": "17258:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7744,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7742,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7687,
                                        "src": "17443:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7743,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17461:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17443:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7751,
                                    "nodeType": "IfStatement",
                                    "src": "17439:213:35",
                                    "trueBody": {
                                      "id": 7750,
                                      "nodeType": "Block",
                                      "src": "17464:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7746,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "17594:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7747,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7687,
                                                "src": "17613:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7745,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7014,
                                              "src": "17575:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7748,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17575:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7749,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17575:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 7765,
                        "nodeType": "IfStatement",
                        "src": "16067:1961:35",
                        "trueBody": {
                          "id": 7728,
                          "nodeType": "Block",
                          "src": "16092:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7697,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7590,
                                    "src": "16153:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7699,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14699,
                                  "src": "16153:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7700,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7685,
                                  "src": "16177:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16153:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7702,
                              "nodeType": "ExpressionStatement",
                              "src": "16153:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7703,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "16211:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7704,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "16222:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16211:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7726,
                                "nodeType": "Block",
                                "src": "16649:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7719,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7717,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7687,
                                        "src": "16858:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7718,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16876:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16858:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7725,
                                    "nodeType": "IfStatement",
                                    "src": "16854:112:35",
                                    "trueBody": {
                                      "id": 7724,
                                      "nodeType": "Block",
                                      "src": "16879:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7721,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7687,
                                                "src": "16927:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7720,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6941,
                                              "src": "16905:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7722,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16905:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7723,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16905:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7727,
                              "nodeType": "IfStatement",
                              "src": "16207:777:35",
                              "trueBody": {
                                "id": 7716,
                                "nodeType": "Block",
                                "src": "16235:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7706,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7687,
                                        "src": "16416:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16434:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16416:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7715,
                                    "nodeType": "IfStatement",
                                    "src": "16412:213:35",
                                    "trueBody": {
                                      "id": 7714,
                                      "nodeType": "Block",
                                      "src": "16437:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7710,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "16567:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7711,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7687,
                                                "src": "16586:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7709,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7014,
                                              "src": "16548:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7712,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16548:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7713,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16548:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 7769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "18124:13:35",
                    "subExpression": {
                      "id": 7768,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7584,
                      "src": "18125:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7857,
                  "nodeType": "IfStatement",
                  "src": "18120:1731:35",
                  "trueBody": {
                    "id": 7856,
                    "nodeType": "Block",
                    "src": "18139:1712:35",
                    "statements": [
                      {
                        "id": 7846,
                        "nodeType": "Block",
                        "src": "18332:1262:35",
                        "statements": [
                          {
                            "assignments": [
                              7771
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 7771,
                                "mutability": "mutable",
                                "name": "_resolvedLocalAcct",
                                "nameLocation": "18406:18:35",
                                "nodeType": "VariableDeclaration",
                                "scope": 7846,
                                "src": "18398:26:35",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 7770,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18398:7:35",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 7776,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 7773,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7578,
                                  "src": "18465:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7774,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7580,
                                  "src": "18500:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 7772,
                                "name": "_getLocalAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7298,
                                "src": "18427:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) pure returns (address)"
                                }
                              },
                              "id": 7775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18427:106:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18398:135:35"
                          },
                          {
                            "id": 7808,
                            "nodeType": "Block",
                            "src": "18581:459:35",
                            "statements": [
                              {
                                "assignments": [
                                  7778
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7778,
                                    "mutability": "mutable",
                                    "name": "_vaultAddr",
                                    "nameLocation": "18644:10:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7808,
                                    "src": "18636:18:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "typeName": {
                                      "id": 7777,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18636:7:35",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7783,
                                "initialValue": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7779,
                                      "name": "vaultInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "18657:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 7781,
                                    "indexExpression": {
                                      "id": 7780,
                                      "name": "_vid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7576,
                                      "src": "18667:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18657:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                                    }
                                  },
                                  "id": 7782,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "vault",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14561,
                                  "src": "18657:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18636:42:35"
                              },
                              {
                                "assignments": [
                                  7786
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7786,
                                    "mutability": "mutable",
                                    "name": "_vault",
                                    "nameLocation": "18707:6:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7808,
                                    "src": "18700:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVault_$15825",
                                      "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                      "id": 7785,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 7784,
                                        "name": "IVault",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 15825,
                                        "src": "18700:6:35"
                                      },
                                      "referencedDeclaration": 15825,
                                      "src": "18700:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$15825",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7790,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 7788,
                                      "name": "_vaultAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7778,
                                      "src": "18723:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7787,
                                    "name": "IVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15825,
                                    "src": "18716:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVault_$15825_$",
                                      "typeString": "type(contract IVault)"
                                    }
                                  },
                                  "id": 7789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18716:18:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVault_$15825",
                                    "typeString": "contract IVault"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18700:34:35"
                              },
                              {
                                "assignments": [
                                  7792
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7792,
                                    "mutability": "mutable",
                                    "name": "_shares",
                                    "nameLocation": "18811:7:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7808,
                                    "src": "18803:15:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 7791,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18803:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7801,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 7800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 7793,
                                            "name": "_tranche",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7623,
                                            "src": "18822:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                            }
                                          },
                                          "id": 7794,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "contribution",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14537,
                                          "src": "18822:21:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "31653132",
                                          "id": 7795,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18846:4:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000_by_1",
                                            "typeString": "int_const 1000000000000"
                                          },
                                          "value": "1e12"
                                        },
                                        "src": "18822:28:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7797,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18821:30:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 7798,
                                      "name": "_tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7623,
                                      "src": "18878:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                        "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                      }
                                    },
                                    "id": 7799,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeMultiplier",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14539,
                                    "src": "18878:23:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18821:80:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18803:98:35"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 7805,
                                      "name": "_shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7792,
                                      "src": "19013:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 7802,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7786,
                                      "src": "18988:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$15825",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawWantToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15794,
                                    "src": "18988:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) external returns (uint256)"
                                    }
                                  },
                                  "id": 7806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18988:33:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7807,
                                "nodeType": "ExpressionStatement",
                                "src": "18988:33:35"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "id": 7817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7809,
                                  "name": "_vaultInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7633,
                                  "src": "19098:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                  }
                                },
                                "id": 7811,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14559,
                                "src": "19098:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7812,
                                    "name": "_vaultInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7633,
                                    "src": "19157:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                    }
                                  },
                                  "id": 7813,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalTrancheContributions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14559,
                                  "src": "19157:36:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 7814,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7623,
                                    "src": "19216:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 7815,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14537,
                                  "src": "19216:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19157:80:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19098:139:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7818,
                            "nodeType": "ExpressionStatement",
                            "src": "19098:139:35"
                          },
                          {
                            "expression": {
                              "id": 7832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7819,
                                  "name": "_res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7590,
                                  "src": "19304:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                  }
                                },
                                "id": 7821,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "wantAmt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14697,
                                "src": "19304:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7829,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "19393:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      ],
                                      "id": 7828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19385:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7827,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19385:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19385:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 7823,
                                          "name": "_vaultInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7633,
                                          "src": "19337:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultInfo_$14562_storage_ptr",
                                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                          }
                                        },
                                        "id": 7824,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "want",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14551,
                                        "src": "19337:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      ],
                                      "id": 7822,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2635,
                                      "src": "19319:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 7825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19319:34:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 7826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2574,
                                  "src": "19319:44:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 7831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19319:97:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19304:112:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7833,
                            "nodeType": "ExpressionStatement",
                            "src": "19304:112:35"
                          },
                          {
                            "expression": {
                              "id": 7844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 7834,
                                        "name": "trancheInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6480,
                                        "src": "19477:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                        }
                                      },
                                      "id": 7838,
                                      "indexExpression": {
                                        "id": 7835,
                                        "name": "_vid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7576,
                                        "src": "19489:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19477:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 7839,
                                    "indexExpression": {
                                      "id": 7836,
                                      "name": "_resolvedLocalAcct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7771,
                                      "src": "19495:18:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19477:37:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 7840,
                                  "indexExpression": {
                                    "id": 7837,
                                    "name": "_trancheId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7582,
                                    "src": "19515:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19477:49:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                  }
                                },
                                "id": 7841,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "exitedVaultAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14547,
                                "src": "19477:84:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 7842,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "19564:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 7843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19564:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19477:102:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7845,
                            "nodeType": "ExpressionStatement",
                            "src": "19477:102:35"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7848,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7578,
                              "src": "19700:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7849,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7580,
                              "src": "19731:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7850,
                              "name": "_vid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7576,
                              "src": "19764:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7851,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7582,
                              "src": "19786:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 7852,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7590,
                                "src": "19814:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                                  "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 7853,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14697,
                              "src": "19814:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7847,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14722,
                            "src": "19674:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 7854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19674:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7855,
                        "nodeType": "EmitStatement",
                        "src": "19669:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7574,
              "nodeType": "StructuredDocumentation",
              "src": "13305:691:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _vid index of vault\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 7859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "14010:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7576,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "14037:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14029:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14029:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7578,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "14059:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14051:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14051:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7580,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "14095:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14082:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7579,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14082:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7582,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "14128:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14120:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14120:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7584,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "14153:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14148:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7583,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14148:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7586,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "14180:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14175:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7585,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14175:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14019:186:35"
            },
            "returnParameters": {
              "id": 7591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7590,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "14248:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7859,
                  "src": "14224:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7589,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7588,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14700,
                      "src": "14224:16:35"
                    },
                    "referencedDeclaration": 14700,
                    "src": "14224:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14700_storage_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14223:30:35"
            },
            "scope": 8305,
            "src": "14001:5856:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7913,
              "nodeType": "Block",
              "src": "20549:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7874,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7868,
                      "src": "20563:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20588:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20580:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20580:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20580:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20563:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7911,
                    "nodeType": "Block",
                    "src": "20713:237:35",
                    "statements": [
                      {
                        "assignments": [
                          7892
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7892,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "20773:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7911,
                            "src": "20765:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7891,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20765:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7900,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7893,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6488,
                                "src": "20788:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 7895,
                              "indexExpression": {
                                "id": 7894,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7862,
                                "src": "20807:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20788:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 7897,
                            "indexExpression": {
                              "id": 7896,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7866,
                              "src": "20813:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20788:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 7899,
                          "indexExpression": {
                            "id": 7898,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7864,
                            "src": "20847:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20788:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20765:106:35"
                      },
                      {
                        "expression": {
                          "id": 7909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7901,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7872,
                            "src": "20885:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7902,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20896:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7904,
                                "indexExpression": {
                                  "id": 7903,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7862,
                                  "src": "20908:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20896:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7906,
                              "indexExpression": {
                                "id": 7905,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7892,
                                "src": "20914:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20896:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7908,
                            "indexExpression": {
                              "id": 7907,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "20928:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20896:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20885:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7910,
                        "nodeType": "ExpressionStatement",
                        "src": "20885:54:35"
                      }
                    ]
                  },
                  "id": 7912,
                  "nodeType": "IfStatement",
                  "src": "20559:391:35",
                  "trueBody": {
                    "id": 7890,
                    "nodeType": "Block",
                    "src": "20592:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7880,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7872,
                            "src": "20641:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7881,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20652:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7883,
                                "indexExpression": {
                                  "id": 7882,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7862,
                                  "src": "20664:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20652:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7885,
                              "indexExpression": {
                                "id": 7884,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7868,
                                "src": "20670:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20652:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7887,
                            "indexExpression": {
                              "id": 7886,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "20685:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20652:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20641:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7889,
                        "nodeType": "ExpressionStatement",
                        "src": "20641:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7860,
              "nodeType": "StructuredDocumentation",
              "src": "19863:483:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _vid Vault ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 7914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "20360:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7862,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "20389:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7914,
                  "src": "20381:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20381:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7864,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "20411:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7914,
                  "src": "20403:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20403:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7866,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "20444:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7914,
                  "src": "20431:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7865,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20431:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7868,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "20477:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7914,
                  "src": "20469:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20469:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20371:125:35"
            },
            "returnParameters": {
              "id": 7873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7872,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "20539:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7914,
                  "src": "20520:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$14548_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 7871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7870,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14548,
                      "src": "20520:11:35"
                    },
                    "referencedDeclaration": 14548,
                    "src": "20520:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20519:29:35"
            },
            "scope": 8305,
            "src": "20351:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14803
            ],
            "body": {
              "id": 7954,
              "nodeType": "Block",
              "src": "21627:451:35",
              "statements": [
                {
                  "assignments": [
                    7931,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7931,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "21677:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7954,
                      "src": "21669:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7930,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21669:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7942,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7933,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21729:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21729:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21753:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7936,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7917,
                        "src": "21769:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7937,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7919,
                        "src": "21787:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7938,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7921,
                        "src": "21811:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 7939,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7923,
                        "src": "21837:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21869:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7932,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8089,
                      "src": "21693:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 7941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21693:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21668:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21999:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21999:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7949,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7931,
                        "src": "22023:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7944,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "21954:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7943,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "21936:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21936:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "21936:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21936:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7951,
                  "nodeType": "ExpressionStatement",
                  "src": "21936:107:35"
                },
                {
                  "expression": {
                    "id": 7952,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7931,
                    "src": "22061:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7929,
                  "id": 7953,
                  "nodeType": "Return",
                  "src": "22054:17:35"
                }
              ]
            },
            "documentation": {
              "id": 7915,
              "nodeType": "StructuredDocumentation",
              "src": "20962:472:35",
              "text": "@notice Withdraws funds from a vault and converts the Want token into USD\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 7955,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7925,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "21596:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "21596:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "21448:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7917,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "21487:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "21479:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21479:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7919,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "21509:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "21501:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21501:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7921,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "21534:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "21529:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21529:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7923,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "21564:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "21556:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21556:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21469:119:35"
            },
            "returnParameters": {
              "id": 7929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "21618:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21618:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21617:9:35"
            },
            "scope": 8305,
            "src": "21439:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14822
            ],
            "body": {
              "id": 8018,
              "nodeType": "Block",
              "src": "23151:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 7989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7977,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7973,
                          "src": "23207:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7978,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7975,
                          "src": "23219:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7979,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23206:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7981,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7958,
                          "src": "23276:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7982,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7960,
                          "src": "23298:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7983,
                          "name": "_vid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7962,
                          "src": "23327:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7984,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7964,
                          "src": "23345:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7985,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7966,
                          "src": "23369:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 7986,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7968,
                          "src": "23395:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23427:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7980,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8089,
                        "src": "23240:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 7988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23240:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23206:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7990,
                  "nodeType": "ExpressionStatement",
                  "src": "23206:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7991,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7973,
                      "src": "23507:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23520:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23507:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8004,
                  "nodeType": "IfStatement",
                  "src": "23503:164:35",
                  "trueBody": {
                    "id": 8003,
                    "nodeType": "Block",
                    "src": "23523:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7998,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "23604:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23604:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8000,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7973,
                              "src": "23632:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7995,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6430,
                                  "src": "23555:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7994,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23537:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 7996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23537:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 7997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23537:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23537:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8002,
                        "nodeType": "ExpressionStatement",
                        "src": "23537:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8005,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7975,
                      "src": "23796:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23816:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23796:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8017,
                  "nodeType": "IfStatement",
                  "src": "23792:167:35",
                  "trueBody": {
                    "id": 8016,
                    "nodeType": "Block",
                    "src": "23819:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8012,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "23888:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8013,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7975,
                              "src": "23917:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8009,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "23851:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8008,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23833:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23833:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23833:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23833:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8015,
                        "nodeType": "ExpressionStatement",
                        "src": "23833:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7956,
              "nodeType": "StructuredDocumentation",
              "src": "22084:731:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8019,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7970,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7076,
                  "src": "23067:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "23067:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "22829:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7958,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "22878:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "22870:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22870:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7960,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "22909:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "22896:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7959,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22896:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7962,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "22942:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "22934:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22934:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7964,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "22964:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "22956:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22956:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7966,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "22989:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "22984:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22984:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7968,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "23019:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "23011:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23011:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22860:183:35"
            },
            "returnParameters": {
              "id": 7976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7973,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "23108:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "23100:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23100:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7975,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "23128:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8019,
                  "src": "23120:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23120:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23099:47:35"
            },
            "scope": 8305,
            "src": "22820:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8088,
              "nodeType": "Block",
              "src": "25116:795:35",
              "statements": [
                {
                  "assignments": [
                    8042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8042,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "25164:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8088,
                      "src": "25156:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25156:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8047,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8043,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "25177:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8045,
                      "indexExpression": {
                        "id": 8044,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8026,
                        "src": "25187:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25177:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 8046,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14561,
                    "src": "25177:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25156:42:35"
                },
                {
                  "assignments": [
                    8050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8050,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "25308:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8088,
                      "src": "25284:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8049,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8048,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14700,
                          "src": "25284:16:35"
                        },
                        "referencedDeclaration": 14700,
                        "src": "25284:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14700_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8059,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8052,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8026,
                        "src": "25338:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8053,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8022,
                        "src": "25356:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8054,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8024,
                        "src": "25378:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8055,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "25407:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8056,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25431:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8057,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8034,
                        "src": "25457:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8051,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7859,
                      "src": "25315:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14700_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25315:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25284:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8067,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8042,
                        "src": "25639:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8068,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8050,
                          "src": "25663:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14697,
                        "src": "25663:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8061,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "25582:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8063,
                              "indexExpression": {
                                "id": 8062,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8026,
                                "src": "25592:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25582:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 8064,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "25582:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8060,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "25564:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25564:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "25564:61:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25564:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8071,
                  "nodeType": "ExpressionStatement",
                  "src": "25564:121:35"
                },
                {
                  "expression": {
                    "id": 8081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8072,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "25729:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8077,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8050,
                            "src": "25798:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                              "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14697,
                          "src": "25798:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8079,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8032,
                          "src": "25824:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8074,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8042,
                              "src": "25749:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8073,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15825,
                            "src": "25742:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$15825_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25742:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$15825",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15803,
                        "src": "25742:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25742:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25729:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8082,
                  "nodeType": "ExpressionStatement",
                  "src": "25729:123:35"
                },
                {
                  "expression": {
                    "id": 8086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8083,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8039,
                      "src": "25863:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8084,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8050,
                        "src": "25883:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14699,
                      "src": "25883:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25863:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8087,
                  "nodeType": "ExpressionStatement",
                  "src": "25863:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8020,
              "nodeType": "StructuredDocumentation",
              "src": "23971:826:35",
              "text": "@notice Private function for withdrawing funds from a vault and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "24811:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8022,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "24851:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24843:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24843:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8024,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "24882:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24869:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24869:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8026,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "24915:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24907:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24907:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "24937:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24929:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24929:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "24962:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24957:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24957:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8032,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "24992:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "24984:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24984:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8034,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "25025:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "25020:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25020:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24833:217:35"
            },
            "returnParameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8037,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "25077:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "25069:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25069:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8039,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "25097:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8089,
                  "src": "25089:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25089:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25068:47:35"
            },
            "scope": 8305,
            "src": "24802:1109:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14833
            ],
            "body": {
              "id": 8170,
              "nodeType": "Block",
              "src": "26494:1038:35",
              "statements": [
                {
                  "assignments": [
                    8104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8104,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "26558:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8170,
                      "src": "26550:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26550:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8114,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8105,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26575:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8107,
                          "indexExpression": {
                            "id": 8106,
                            "name": "_fromVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8092,
                            "src": "26587:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26575:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8110,
                        "indexExpression": {
                          "expression": {
                            "id": 8108,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26597:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26597:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26575:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8112,
                      "indexExpression": {
                        "id": 8111,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8094,
                        "src": "26622:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26575:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8113,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14543,
                    "src": "26575:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26550:121:35"
                },
                {
                  "assignments": [
                    8116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8116,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "26689:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8170,
                      "src": "26681:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26681:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8126,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8117,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26706:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8119,
                          "indexExpression": {
                            "id": 8118,
                            "name": "_fromVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8092,
                            "src": "26718:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26706:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8122,
                        "indexExpression": {
                          "expression": {
                            "id": 8120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26728:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26728:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26706:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14548_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8124,
                      "indexExpression": {
                        "id": 8123,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8094,
                        "src": "26753:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26706:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14548_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8125,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14545,
                    "src": "26706:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26681:111:35"
                },
                {
                  "assignments": [
                    8128,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8128,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "26832:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8170,
                      "src": "26824:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26824:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8139,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26886:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26886:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26910:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8133,
                        "name": "_fromVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8092,
                        "src": "26926:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8134,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8094,
                        "src": "26948:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26976:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8136,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26995:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27027:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8129,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8089,
                      "src": "26850:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26850:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26823:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8144,
                            "name": "vaultInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6468,
                            "src": "27151:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8146,
                          "indexExpression": {
                            "id": 8145,
                            "name": "_toVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8096,
                            "src": "27161:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27151:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                          }
                        },
                        "id": 8147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14561,
                        "src": "27151:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8148,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8128,
                        "src": "27188:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8141,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "27106:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8140,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "27088:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27088:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "27088:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27088:122:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8150,
                  "nodeType": "ExpressionStatement",
                  "src": "27088:122:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8152,
                        "name": "_toVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "27275:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8153,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27295:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27295:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27319:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8156,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8128,
                        "src": "27335:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8157,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8104,
                        "src": "27361:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8158,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8116,
                        "src": "27389:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8159,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "27417:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8151,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7529,
                      "src": "27242:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27242:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8161,
                  "nodeType": "ExpressionStatement",
                  "src": "27242:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27480:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27480:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8165,
                        "name": "_fromVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8092,
                        "src": "27492:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8166,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8094,
                        "src": "27502:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8167,
                        "name": "_toVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "27518:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8162,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14732,
                      "src": "27461:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27461:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8169,
                  "nodeType": "EmitStatement",
                  "src": "27456:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8090,
              "nodeType": "StructuredDocumentation",
              "src": "25917:400:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromVid index of vault FROM\n @param _fromTrancheId index of tranche FROM\n @param _toVid index of vault TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8100,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "26481:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "26481:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "26331:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8092,
                  "mutability": "mutable",
                  "name": "_fromVid",
                  "nameLocation": "26367:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8171,
                  "src": "26359:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26359:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8094,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "26393:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8171,
                  "src": "26385:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26385:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "_toVid",
                  "nameLocation": "26425:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8171,
                  "src": "26417:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26417:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8098,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "26449:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8171,
                  "src": "26441:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26441:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26349:124:35"
            },
            "returnParameters": {
              "id": 8102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26494:0:35"
            },
            "scope": 8305,
            "src": "26322:1210:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14838
            ],
            "body": {
              "id": 8241,
              "nodeType": "Block",
              "src": "27700:616:35",
              "statements": [
                {
                  "assignments": [
                    8180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8180,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "27802:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8241,
                      "src": "27794:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27794:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8186,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8182,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8174,
                        "src": "27830:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27836:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27836:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8181,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6699,
                      "src": "27816:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27816:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27794:53:35"
                },
                {
                  "body": {
                    "id": 8207,
                    "nodeType": "Block",
                    "src": "27905:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8198,
                              "name": "_vid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8174,
                              "src": "27929:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8199,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "27935:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27935:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27947:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8202,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8188,
                              "src": "27951:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27956:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27963:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8197,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7859,
                            "src": "27919:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14700_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27919:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14700_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8206,
                        "nodeType": "ExpressionStatement",
                        "src": "27919:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8191,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8188,
                      "src": "27879:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8192,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8180,
                      "src": "27885:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27879:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8208,
                  "initializationExpression": {
                    "assignments": [
                      8188
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8188,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "27870:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8208,
                        "src": "27862:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27862:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8190,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27876:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27862:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "27898:5:35",
                      "subExpression": {
                        "id": 8194,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8188,
                        "src": "27900:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8196,
                    "nodeType": "ExpressionStatement",
                    "src": "27898:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "27857:123:35"
                },
                {
                  "assignments": [
                    8210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8210,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "28040:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8241,
                      "src": "28032:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28032:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8223,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8220,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "28122:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28114:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28114:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28114:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8212,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "28069:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8214,
                              "indexExpression": {
                                "id": 8213,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8174,
                                "src": "28079:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28069:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 8215,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14551,
                            "src": "28069:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8211,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "28051:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28051:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "28051:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28051:86:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28032:105:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8224,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8210,
                      "src": "28151:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28162:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "28151:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8240,
                  "nodeType": "IfStatement",
                  "src": "28147:163:35",
                  "trueBody": {
                    "id": 8239,
                    "nodeType": "Block",
                    "src": "28165:145:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8234,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "28249:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "28249:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8236,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8210,
                              "src": "28277:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8228,
                                      "name": "vaultInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "28197:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14562_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8230,
                                    "indexExpression": {
                                      "id": 8229,
                                      "name": "_vid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8174,
                                      "src": "28207:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28197:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14562_storage",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                                    }
                                  },
                                  "id": 8231,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14551,
                                  "src": "28197:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8227,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "28179:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28179:39:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "28179:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28179:120:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8238,
                        "nodeType": "ExpressionStatement",
                        "src": "28179:120:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8172,
              "nodeType": "StructuredDocumentation",
              "src": "27538:102:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a vault\n @param _vid index of vault"
            },
            "functionSelector": "958e2d31",
            "id": 8242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8176,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "27687:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "27687:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "27654:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8174,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "27674:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8242,
                  "src": "27666:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27666:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27665:14:35"
            },
            "returnParameters": {
              "id": 8178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27700:0:35"
            },
            "scope": 8305,
            "src": "27645:671:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14845
            ],
            "body": {
              "id": 8273,
              "nodeType": "Block",
              "src": "28726:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8254,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6460,
                      "src": "28783:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8255,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "28794:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28783:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8271,
                    "nodeType": "Block",
                    "src": "28970:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8267,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8247,
                              "src": "29071:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8268,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8245,
                              "src": "29085:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8264,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "29059:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8263,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15158,
                                "src": "29052:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$15158_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29052:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$15158",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15157,
                            "src": "29052:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29052:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8270,
                        "nodeType": "ExpressionStatement",
                        "src": "29052:45:35"
                      }
                    ]
                  },
                  "id": 8272,
                  "nodeType": "IfStatement",
                  "src": "28779:329:35",
                  "trueBody": {
                    "id": 8262,
                    "nodeType": "Block",
                    "src": "28807:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8258,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8245,
                              "src": "28927:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8259,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8247,
                              "src": "28940:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8257,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6972,
                            "src": "28901:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28901:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8261,
                        "nodeType": "ExpressionStatement",
                        "src": "28901:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8243,
              "nodeType": "StructuredDocumentation",
              "src": "28360:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8249,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7076,
                  "src": "28685:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28685:15:35"
              },
              {
                "id": 8252,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8251,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "28709:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28709:12:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "28601:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "28627:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8274,
                  "src": "28619:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28619:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8247,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "28648:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8274,
                  "src": "28640:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28640:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28618:43:35"
            },
            "returnParameters": {
              "id": 8253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28726:0:35"
            },
            "scope": 8305,
            "src": "28592:522:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14852
            ],
            "body": {
              "id": 8303,
              "nodeType": "Block",
              "src": "29677:404:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8292,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6436,
                        "src": "29867:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8293,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8277,
                          "src": "29892:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8294,
                          "name": "_totalSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8279,
                          "src": "29907:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29892:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8289,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6428,
                            "src": "29834:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8288,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "29816:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29816:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "29816:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29816:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "29816:114:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8299,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8279,
                        "src": "30041:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8300,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "30056:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8298,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6972,
                      "src": "30015:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30015:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8302,
                  "nodeType": "ExpressionStatement",
                  "src": "30015:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8275,
              "nodeType": "StructuredDocumentation",
              "src": "29120:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8281,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6399,
                  "src": "29599:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29599:30:35"
              },
              {
                "id": 8284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8283,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6414,
                  "src": "29638:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29638:13:35"
              },
              {
                "id": 8286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8285,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "29660:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29660:12:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "29508:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8277,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "29539:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29531:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29531:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8279,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "29561:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29553:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29553:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29530:45:35"
            },
            "returnParameters": {
              "id": 8287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29677:0:35"
            },
            "scope": 8305,
            "src": "29499:582:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8306,
        "src": "490:29593:35",
        "usedErrors": []
      }
    ],
    "src": "33:30051:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-16T14:00:43.225Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_vid": "index of vault",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vid": "index of vault to deposit into",
          "_weeksCommitted": "how many weeks to commit to the vault (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_vid": "index of vault to deposit into",
          "_weeksCommitted": "how many weeks to commit to the vault (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_user": "wallet address of user",
          "_vid": "Index of vault in vaultInfo array"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromTrancheId": "index of tranche FROM",
          "_fromVid": "index of vault FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toVid": "index of vault TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateVault(uint256)": {
        "params": {
          "_vid": "index of vault in vaultInfo array"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "vaultLength()": {
        "returns": {
          "vaultCount": "number of vaults"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_trancheId": "index of tranche",
          "_vid": "index of vault"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_vid": "index of vault"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_trancheId": "index of tranche",
          "_vid": "index of vault to deposit into"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_trancheId": "index of tranche",
          "_vid": "index of vault to deposit into"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setControllerActions(address)": {
        "notice": "Setter: Set controller actions contract address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given vault"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updateVault(uint256)": {
        "notice": "Update reward variables of the given vault to be up-to-date."
      },
      "vaultLength()": {
        "notice": "Number of vaults in the Zorro protocol"
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a vault"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a vault and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}