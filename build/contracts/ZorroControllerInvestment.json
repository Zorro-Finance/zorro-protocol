{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromPid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toPid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerActions",
          "type": "address"
        }
      ],
      "name": "setControllerActions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromPid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toPid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerActions\",\"type\":\"address\"}],\"name\":\"setControllerActions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultMapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_pid\":\"index of pool\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromPid\":\"index of pool FROM\",\"_fromTrancheId\":\"index of tranche FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toPid\":\"index of pool TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_pid\":\"index of pool\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_pid\":\"index of pool\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setControllerActions(address)\":{\"notice\":\"Setter: Set controller actions contract address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a pool\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a pool and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0xaf86b1ab8c2494d0fbe5ca812254e087cbce17ad95d05eb51c3ecca8f1eabbe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://732389f2f04f032686fb8449597064b6003625f0cbb58913a8a968f34b5d384c\",\"dweb:/ipfs/QmbqTi15QQTC2y5aY2GRtVueT5zBosfe29wsow7WMy4sc9\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0xe1797bfcaf72b3c0215c8099c6a12e66edfc31bab8bb763b701bf21695776955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227c85f74823a1f186dc53cbabb0be4ac9dba990eb38de8f81c74090286dbea2\",\"dweb:/ipfs/QmaFLmU5zwKmdG5nkqKA8z56tLtowqpVwCnzXJe372xhpN\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x6657020ec1e3526ef6838d4f65a27bb76d72d39e66dde1a3b51bb36c5494d6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ff6caa48d110a395e6f704837b54ea2085774c4492ed147dc6a7ec1f7dd9b3\",\"dweb:/ipfs/Qmbup1JMn8dcCarheQao9JncZr3FhsKbscc2Xmw82mxeEg\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\":{\"keccak256\":\"0x95bda45ac60370f6cf11608ab4c4c5c2801093b7af93593e19d7d5fc2979f042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72c3dec17debfdbcea5806d63ca290dcf99b7b53bff2e1c930fdc6e572d43f04\",\"dweb:/ipfs/QmVffK55p7VuCLB2j7QzEGkmbYU9Q2o1t8ikAGm7hR2Gmc\"]},\"project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol\":{\"keccak256\":\"0x5ef84eb657dac77fb41ef8855db5c3f06c37ce4e75c43f5bb05415736b2125b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://476e36ff4f3d1f32f2252da76c9cbd83fbf7ad455ef0ba1c50094c6d146507cc\",\"dweb:/ipfs/QmZcFastKdMG7rF7awP788XX8nyXsWDU9z9zQSr6C6FVQa\"]},\"project:/contracts/interfaces/Zorro/IZorro.sol\":{\"keccak256\":\"0x284b2d31511ea30be2fad6dd9d82ee9fe9b2f83781771085f1efbbe61f35f90e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adf06657f42401bb5e1c2fbb01df2c1eb214f4c0701f6aebf2d2dbb8388c31bb\",\"dweb:/ipfs/QmQ7Y8tbTD7phUfDmr97fv4D8NUkf8QXAyVwuMVoSzAVio\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol\":{\"keccak256\":\"0x816005771e6f06fc6a18a41af8671d7ebe99681d8cb2c9babbf26bb32200c4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd5cee78aa86e75195e8e268b4025720e04472d5339b6482ee517a9f6328caf\",\"dweb:/ipfs/QmTMDQxGE2Sh4nnpPjwweupjA88i6JTxsctxNjTRj7pU4Z\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0x658b005810cf99b68a19316efadd0e6409413d361386390a7303441fb29f19ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4374f5d13dcb3a33cb89ce4b91510d9d4c154c875e50dc89029b18810a2fdb65\",\"dweb:/ipfs/QmSHAt2Jk1UoQq4NkDpLjXRxH8cjiMGCT2jSHx1TENBRQA\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x12474ac6678158bda55a1ce0fb982a920253ab3b72084bb8b3219f1bbdf66a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a157fa3130e187f4354a5398eb8271ba2733642b3e7e49bfd51d24de874d6c25\",\"dweb:/ipfs/QmXT3Z4rEHhJLzVZpccJeseefLQXkxXRcvc76KhvSDby68\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613978806100206000396000f3fe608060405234801561001057600080fd5b50600436106103915760003560e060020a9004806370d5ae05116101e2578063b4b4e9eb11610113578063cb9c2f68116100b1578063f2fde38b11610080578063f2fde38b146107f6578063f35e4a6e14610809578063f63cce371461081c578063fc39a29e1461082f57600080fd5b8063cb9c2f68146107be578063cff38dd4146107c7578063ed43633f146107da578063ef126967146107ed57600080fd5b8063c13260a5116100ed578063c13260a51461077c578063c29361421461078f578063c4e94f2214610798578063c6d758cb146107ab57600080fd5b8063b4b4e9eb14610720578063b61bb80a14610760578063b95cc6811461077357600080fd5b8063941d3fd0116101805780639cebd3711161015a5780639cebd371146106e9578063a13346c6146106f2578063a1be201d146106fa578063a4d2b0831461070d57600080fd5b8063941d3fd014610698578063958e2d31146106cd5780639a8a0592146106e057600080fd5b80637e37c769116101bc5780637e37c7691461064e578063823c43d0146106615780638c157db2146106745780638da5cb5b1461068757600080fd5b806370d5ae0514610620578063715018a614610633578063745af0a81461063b57600080fd5b80633bbc1ffc116102c757806351eb05a6116102655780635c63fa87116102345780635c63fa87146105d4578063668ababb146105e75780636b8eb2e5146105fa5780636c78d49c1461060d57600080fd5b806351eb05a61461059c57806352966832146105af57806353f73f87146105b85780635527a6f9146105cb57600080fd5b806348cd4cb1116102a157806348cd4cb1146105645780634b0e72161461056d5780634cfea68a146105805780635051d3711461058957600080fd5b80633bbc1ffc1461051657806340abd8fc146105295780634780f9f51461055157600080fd5b80632e31283d1161033457806337cb2ef21161030e57806337cb2ef2146104d157806339e80a88146104f15780633b710688146105045780633b9ce5651461050d57600080fd5b80632e31283d14610448578063332e5a7b146104ab57806333cfcd3b146104be57600080fd5b80630aa0988e116103705780630aa0988e146103ca5780631526fe27146103dd57806317caf6f11461042c5780631b8fb6921461043557600080fd5b8062aeef8a14610396578063081e3eda146103ab57806309b79b3c146103c2575b600080fd5b6103a96103a43660046130ef565b610842565b005b60aa545b6040519081526020015b60405180910390f35b6103a96108e1565b6103a96103d8366004613130565b610945565b6103f06103eb366004613169565b6109a0565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103b9565b6103af60a45481565b6103a9610443366004613182565b6109f3565b61049361045636600461324d565b60ad6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103b9565b60af5461049390600160a060020a031681565b6103af6104cc3660046132ab565b610ac6565b6103af6104df3660046132e4565b60ab6020526000908152604090205481565b60b05461049390600160a060020a031681565b6103af60a35481565b6103af60a15481565b6103a9610524366004613169565b610b63565b61053c610537366004613301565b610bc2565b604080519283526020830191909152016103b9565b6103a961055f366004613381565b610c5d565b6103af609c5481565b6103a961057b3660046132e4565b610cef565b6103af609d5481565b6103a96105973660046132e4565b610d3e565b6103af6105aa366004613169565b610d8d565b6103af60a55481565b6103af6105c6366004613182565b610f80565b6103af60a05481565b6103a96105e23660046133b3565b610faa565b60995461049390600160a060020a031681565b6103a96106083660046133e1565b611001565b6103a961061b36600461341c565b6110d1565b609b5461049390600160a060020a031681565b6103a961113e565b6103af610649366004613439565b611177565b6103a961065c366004613381565b6111f1565b60ae5461049390600160a060020a031681565b60975461049390600160a060020a031681565b603354600160a060020a0316610493565b60af546106bd9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103b9565b6103a96106db366004613169565b611367565b6103af60a75481565b6103af60a25481565b6103a96114ad565b6103a96107083660046132e4565b61152b565b609a5461049390600160a060020a031681565b61073361072e366004613478565b61157a565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103b9565b60985461049390600160a060020a031681565b6103af60a65481565b6103a961078a3660046134b0565b6115db565b6103af609e5481565b6103a96107a63660046132e4565b611682565b6103a96107b93660046134d2565b6116d1565b6103af609f5481565b6103a96107d53660046134fe565b611799565b6103a96107e836600461357c565b61182e565b6103af60a85481565b6103a96108043660046132e4565b6118a7565b6103a9610817366004613169565b61195f565b6103a961082a366004613130565b6119e4565b60a95461049390600160a060020a031681565b600260655414156108715760405160e560020a62461bcd02815260040161086890613609565b60405180910390fd5b6002606581905550600060aa848154811061088e5761088e613640565b6000918252602090912060069091020180549091506108b890600160a060020a0316333086611a6c565b6108d5843360405180602001604052806000815250868642611b23565b50506001606555505050565b60ae54600160a060020a031633600160a060020a0316146109175760405160e560020a62461bcd02815260040161086890613659565b60a85460a754141561093e5760405160e560020a62461bcd02815260040161086890613690565b600060a555565b603354600160a060020a031633146109725760405160e560020a62461bcd028152600401610868906136c7565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa81815481106109b057600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60b054600160a060020a031633600160a060020a031614610a295760405160e560020a62461bcd028152600401610868906136fc565b60a85460a7541415610a4357610a3f8282611e57565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b505050505050565b600060026065541415610aee5760405160e560020a62461bcd02815260040161086890613609565b60026065819055506000610b1685336040518060200160405280600081525087876000611e75565b9050610b5533826000015160aa8881548110610b3457610b34613640565b6000918252602090912060069091020154600160a060020a0316919061259f565b516001606555949350505050565b603354600160a060020a03163314610b905760405160e560020a62461bcd028152600401610868906136c7565b60a954600160a060020a03163014610bbd5760405160e560020a62461bcd02815260040161086890613733565b609f55565b60b0546000908190600160a060020a031633600160a060020a031614610bfd5760405160e560020a62461bcd028152600401610868906136fc565b610c0d88888888888860016125ed565b90925090508115610c2f57609854610c2f90600160a060020a0316338461259f565b8015610c5257609b54609754610c5291600160a060020a0391821691168361259f565b965096945050505050565b60026065541415610c835760405160e560020a62461bcd02815260040161086890613609565b6002606581905550600060aa8581548110610ca057610ca0613640565b6000918252602090912060056006909202010154609854600160a060020a039182169250610cd19116338387611a6c565b6108d585336040518060200160405280600081525087874288612715565b603354600160a060020a03163314610d1c5760405160e560020a62461bcd028152600401610868906136c7565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610d6b5760405160e560020a62461bcd028152600401610868906136c7565b60ae8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610da357610da3613640565b9060005260206000209060060201905080600201544311610dc75750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e50919061376a565b905080610e67575043600290910155506000919050565b6000826002015443610e79919061379c565b9050600060a4548460010154609e5484610e9391906137b3565b610e9d91906137b3565b610ea791906137d2565b60a954909150600160a060020a0316301415610ed057610ec78130611e57565b60009450610f59565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610f3557600080fd5b505af1158015610f49573d6000803e3d6000fd5b50505050809450610f5985612801565b808460030154610f6991906137f7565b600385015550504360029092019190915550919050565b600082815260ac60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610fd75760405160e560020a62461bcd028152600401610868906136c7565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ae54600160a060020a031633600160a060020a0316146110375760405160e560020a62461bcd02815260040161086890613659565b6000611045836127106137b3565b848660a35461105491906137b3565b61105e91906137b3565b61106891906137d2565b905060a15481111561107d575060a15461108c565b60a05481101561108c575060a0545b609d5461109b876127106137b3565b6110a591906137b3565b60a2546110b283856137b3565b6110bc91906137b3565b6110c691906137d2565b609e55505050505050565b603354600160a060020a031633146110fe5760405160e560020a62461bcd028152600401610868906136c7565b60af8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a0316331461116b5760405160e560020a62461bcd028152600401610868906136c7565b611175600061283c565b565b60006002606554141561119f5760405160e560020a62461bcd02815260040161086890613609565b600260658190555060006111c833604051806020016040528060008152508888888860006125ed565b506098549091506111e390600160a060020a0316338361259f565b600160655595945050505050565b600260655414156112175760405160e560020a62461bcd02815260040161086890613609565b6002606555600084815260ac60209081526040808320338452909152812080548590811061124757611247613640565b600091825260208083206003600690930201919091015487835260ac825260408084203385529092529082208054919350908690811061128957611289613640565b906000526020600020906006020160040154905060006112bf3360405180602001604052806000815250898960008960006125ed565b50905061130260aa86815481106112d8576112d8613640565b6000918252602090912060056006909202010154609854600160a060020a0390811691168361259f565b6113208533604051806020016040528060008152508487878a612715565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b6002606554141561138d5760405160e560020a62461bcd02815260040161086890613609565b6002606555600061139e8233610f80565b905060005b818110156113da576113c983336040518060200160405280600081525084600080611e75565b506113d38161380f565b90506113a3565b50600060aa83815481106113f0576113f0613640565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa15801561145f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611483919061376a565b905080156114a3576114a3338260aa8681548110610b3457610b34613640565b5050600160655550565b60ae54600160a060020a031633600160a060020a0316146114e35760405160e560020a62461bcd02815260040161086890613659565b60a85460a754141561150a5760405160e560020a62461bcd02815260040161086890613690565b609b5460a65460975461093e92600160a060020a039182169291169061259f565b603354600160a060020a031633146115585760405160e560020a62461bcd028152600401610868906136c7565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b60ac60205282600052604060002060205281600052604060002081815481106115a257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ae54600160a060020a031633600160a060020a0316146116115760405160e560020a62461bcd02815260040161086890613659565b60a954600160a060020a0316301461163e5760405160e560020a62461bcd02815260040161086890613733565b609b5461166b90600160a060020a0316611658838561379c565b609754600160a060020a0316919061259f565b609a54610a3f908290600160a060020a0316611e57565b603354600160a060020a031633146116af5760405160e560020a62461bcd028152600401610868906136c7565b60b08054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116fe5760405160e560020a62461bcd028152600401610868906136c7565b609754600160a060020a03838116911614156117855760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610868565b610a3f600160a060020a038316338361259f565b60b054600160a060020a031633600160a060020a0316146117cf5760405160e560020a62461bcd028152600401610868906136fc565b600060aa88815481106117e4576117e4613640565b6000918252602090912060056006909202010154609854600160a060020a0391821692506118159116338388611a6c565b61182488888888888888612715565b5050505050505050565b603354600160a060020a0316331461185b5760405160e560020a62461bcd028152600401610868906136c7565b609d859055838360008161187157611871613640565b602002919091013560a055508383600181811061189057611890613640565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146118d45760405160e560020a62461bcd028152600401610868906136c7565b600160a060020a0381166119535760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610868565b61195c8161283c565b50565b603354600160a060020a0316331461198c5760405160e560020a62461bcd028152600401610868906136c7565b609c54156119df5760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c6500000000000000000000006044820152606401610868565b609c55565b603354600160a060020a03163314611a115760405160e560020a62461bcd028152600401610868906136c7565b60a954600160a060020a03163014611a3e5760405160e560020a62461bcd02815260040161086890613733565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611b1d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261288e565b50505050565b60008060aa8881548110611b3957611b39613640565b9060005260206000209060060201905060008511611b9c5760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e20302100000000000000000000006044820152606401610868565b611ba588610d8d565b91506000611bb38888612976565b60058301548354919250611bd491600160a060020a03908116911688612a1f565b600060aa8a81548110611be957611be9613640565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c82919061376a565b60af546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d30919061376a565b60af546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc3919061376a565b905080856004016000828254611dd991906137f7565b90915550611dee90508c858c84868d8d612b03565b8b8a604051611dfd9190613856565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611e4091815260200190565b60405180910390a450505050509695505050505050565b609954609754610a3f91600160a060020a0391821691168385611a6c565b6040805180820190915260008082526020820152600160a060020a038616158015611ea1575060008551115b80611ebe5750600160a060020a03861615801590611ebe57508451155b611f0d5760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f7765640000006044820152606401610868565b6000611f1b8886888a612cbe565b9050600060aa8981548110611f3257611f32613640565b906000526020600020906006020190506000826000015111611f995760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e2069732030000000000000006044820152606401610868565b6000816004015411611ff05760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e73206973203000006044820152606401610868565b60a0820151156120455760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c740000000000000000000000006044820152606401610868565b61204e89610d8d565b506000826040015182600401548360030154856000015161206f91906137b3565b61207991906137d2565b612083919061379c565b905080156121e55760af54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa15801561212a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214e9190613872565b91509150861561219b576020860182905260a85460a754141561218c57801561218757609a5461218790600160a060020a031682612e61565b6121e2565b80156121875761218781612f10565b81156121ab576121ab8b83612e61565b60a85460a75414156121d357801561218757609a5461218790600160a060020a031682612e61565b80156121e2576121e281612f10565b50505b856125925760006121f68a8a612976565b9050600060aa8c8154811061220d5761220d613640565b906000526020600020906006020160050160009054906101000a9004600160a060020a031690506000819050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa15801561227c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a0919061376a565b87602001516122af91906137b3565b82600160a060020a031663677379e56040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156122f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123149190613896565b6040517ff55850b4000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152919091169063f55850b490602401602060405180830381865afa158015612375573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612399919061376a565b88516123aa9064e8d4a510006137b3565b6123b491906137b3565b6123be91906137d2565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af1158015612421573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612445919061376a565b50508551600486015461245b935090915061379c565b60048481019190915583546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa1580156124c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e8919061376a565b855260008b815260ac60209081526040808320600160a060020a0385168452909152902080544291908a90811061252157612521613640565b9060005260206000209060060201600501819055505089886040516125469190613856565b6040805191829003822087518b8452602084015291600160a060020a038d16917fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d9910160405180910390a45b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526125e89084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ab9565b505050565b600080600060aa888154811061260557612605613640565b60009182526020822060056006909202010154600160a060020a03169150612631898c8c8b8b8a611e75565b905061267082826000015160aa8c8154811061264f5761264f613640565b6000918252602090912060069091020154600160a060020a03169190612a1f565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156126da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fe919061376a565b935080602001519250505097509795505050505050565b600060aa888154811061272a5761272a613640565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af11580156127a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127cd919061376a565b90506127e7828260aa8c8154811061264f5761264f613640565b6127f5898989848989611b23565b50505050505050505050565b60a85460a75414156128285760405160e560020a62461bcd02815260040161086890613690565b8060a55461283691906137f7565b60a55550565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006128e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612f4b9092919063ffffffff16565b8051909150156125e8578080602001905181019061290191906138b3565b6125e85760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610868565b81600160a060020a038116610fa45760008251116129ff5760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f766964656400000000000000000000000000000000000000006064820152608401610868565b612a08826138d0565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aad919061376a565b612ab791906137f7565b604051600160a060020a038516602482015260448101829052909150611b1d9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611ab9565b600060aa8881548110612b1857612b18613640565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612ba1908a906137b3565b612bab91906137d2565b815260208082018790526040808301879052600060609384018190528d815260ac8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612cb3578760ad60008b815260200190815260200160002088604051612c5a9190613856565b908152602001604051809103902060006001612c768d8d610f80565b612c80919061379c565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612cf76040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612d9657600085815260ac60209081526040808320600160a060020a03861684529091529020805485908110612d3a57612d3a613640565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612e59565b600085815260ad60205260408082209051612db2908690613856565b908152604080516020928190038301902060008881529083528181205489825260ac8452828220600160a060020a0390911680835293522080549192509086908110612e0057612e00613640565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612ec7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eeb919061376a565b905080831115612ef9578091505b609754611b1d90600160a060020a0316858461259f565b60a85460a7541415612f375760405160e560020a62461bcd02815260040161086890613690565b8060a654612f4591906137f7565b60a65550565b6060612f5a8484600085612f64565b90505b9392505050565b60603031831115612fe05760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610868565b600160a060020a0385163b61303a5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610868565b60008086600160a060020a031685876040516130569190613856565b60006040518083038185875af1925050503d8060008114613093576040519150601f19603f3d011682016040523d82523d6000602084013e613098565b606091505b50915091506130a88282866130b3565b979650505050505050565b606083156130c2575081612f5d565b8251156130d25782518084602001fd5b8160405160e560020a62461bcd028152600401610868919061390f565b60008060006060848603121561310457600080fd5b505081359360208301359350604090920135919050565b600160a060020a038116811461195c57600080fd5b6000806040838503121561314357600080fd5b823561314e8161311b565b9150602083013561315e8161311b565b809150509250929050565b60006020828403121561317b57600080fd5b5035919050565b6000806040838503121561319557600080fd5b82359150602083013561315e8161311b565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126131d157600080fd5b813567ffffffffffffffff808211156131ec576131ec6131a7565b604051601f8301601f19908116603f01168101908282118183101715613214576132146131a7565b8160405283815286602085880101111561322d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561326257600080fd5b83359250602084013567ffffffffffffffff81111561328057600080fd5b61328c868287016131c0565b925050604084013590509250925092565b801515811461195c57600080fd5b6000806000606084860312156132c057600080fd5b833592506020840135915060408401356132d98161329d565b809150509250925092565b6000602082840312156132f657600080fd5b8135612f5d8161311b565b60008060008060008060c0878903121561331a57600080fd5b86356133258161311b565b9550602087013567ffffffffffffffff81111561334157600080fd5b61334d89828a016131c0565b9550506040870135935060608701359250608087013561336c8161329d565b8092505060a087013590509295509295509295565b6000806000806080858703121561339757600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156133c857600080fd5b833592506020840135915060408401356132d98161311b565b600080600080600060a086880312156133f957600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561342e57600080fd5b8135612f5d8161329d565b6000806000806080858703121561344f57600080fd5b843593506020850135925060408501356134688161329d565b9396929550929360600135925050565b60008060006060848603121561348d57600080fd5b83359250602084013561349f8161311b565b929592945050506040919091013590565b600080604083850312156134c357600080fd5b50508035926020909101359150565b600080604083850312156134e557600080fd5b82356134f08161311b565b946020939093013593505050565b600080600080600080600060e0888a03121561351957600080fd5b87359650602088013561352b8161311b565b9550604088013567ffffffffffffffff81111561354757600080fd5b6135538a828b016131c0565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561359457600080fd5b85359450602086013567ffffffffffffffff808211156135b357600080fd5b818801915088601f8301126135c757600080fd5b8135818111156135d657600080fd5b89602080830285010111156135ea57600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b60006020828403121561377c57600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b6000828210156137ae576137ae613783565b500390565b60008160001904831182151516156137cd576137cd613783565b500290565b6000826137f25760e060020a634e487b7102600052601260045260246000fd5b500490565b6000821982111561380a5761380a613783565b500190565b600060001982141561382357613823613783565b5060010190565b60005b8381101561384557818101518382015260200161382d565b83811115611b1d5750506000910152565b6000825161386881846020870161382a565b9190910192915050565b6000806040838503121561388557600080fd5b505080516020909101519092909150565b6000602082840312156138a857600080fd5b8151612f5d8161311b565b6000602082840312156138c557600080fd5b8151612f5d8161329d565b805160208201516bffffffffffffffffffffffff19808216929190601483101561390757808360140360080260020a820283161693505b505050919050565b602081526000825180602084015261392e81604085016020870161382a565b601f01601f1916919091016040019291505056fea2646970667358221220a626de9af00b9a46a0a4d88e231ee035808dea332a9d234655cac3bc97febd9f64736f6c634300080a0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22963:127",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:127",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:127",
                "type": ""
              }
            ],
            "src": "14:316:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:76:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "446:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "454:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "446:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "488:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "499:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "481:25:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "405:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "416:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "427:4:127",
                "type": ""
              }
            ],
            "src": "335:177:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "562:109:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "649:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "658:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "661:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "651:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "651:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "651:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "585:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "596:5:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "603:42:127",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "592:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "592:54:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "582:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:65:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:73:127"
                  },
                  "nodeType": "YulIf",
                  "src": "572:93:127"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "551:5:127",
                "type": ""
              }
            ],
            "src": "517:154:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:301:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "784:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "773:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "834:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "860:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "847:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "838:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "904:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "879:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "879:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "919:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "929:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "919:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "943:47:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "975:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "986:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "971:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "958:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:32:127"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "947:7:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1024:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "999:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:33:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "999:33:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1041:17:127",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1051:7:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1041:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "721:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "732:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "744:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "752:6:127",
                "type": ""
              }
            ],
            "src": "676:388:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1139:110:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1185:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1194:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1197:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1187:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1187:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1187:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1160:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1169:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1156:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1156:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1149:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1210:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1220:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1105:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1116:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:127",
                "type": ""
              }
            ],
            "src": "1069:180:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1521:373:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1531:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1543:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1554:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1539:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1531:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1567:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1577:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1571:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1635:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1650:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1658:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1646:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1741:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1768:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1779:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1764:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:18:127"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1784:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1757:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1757:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1811:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1822:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1807:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1807:19:127"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1828:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1800:35:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1855:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1866:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:19:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1876:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1884:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1844:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:44:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1844:44:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1450:9:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1461:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1469:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1477:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1485:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1493:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1501:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1512:4:127",
                "type": ""
              }
            ],
            "src": "1254:640:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2032:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2041:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2044:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2034:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2034:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2034:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2007:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2016:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1999:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1996:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2057:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2080:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2067:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2099:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2129:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2140:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2125:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2112:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2103:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2178:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2153:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2193:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2203:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2193:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1944:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1955:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1967:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1975:6:127",
                "type": ""
              }
            ],
            "src": "1899:315:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2251:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2268:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2271:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2261:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2368:4:127",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2358:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2358:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2358:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2392:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2382:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2382:15:127"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2219:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2460:666:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2509:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2518:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2521:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2511:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2511:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2511:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2488:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2496:4:127",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2484:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2484:17:127"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2503:3:127"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2480:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2480:27:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2473:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2470:55:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2534:30:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2557:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2544:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:20:127"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2538:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2573:28:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2583:18:127",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2577:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2624:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2626:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2616:2:127"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2620:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2613:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:10:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2610:36:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2655:17:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2669:2:127",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2665:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2665:7:127"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2659:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2681:23:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2701:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2695:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:9:127"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2685:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2713:71:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2735:6:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2759:2:127"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2763:4:127",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2755:3:127"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2755:13:127"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2770:2:127"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2751:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2751:22:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2775:2:127",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:31:127"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2780:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2743:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2743:40:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2731:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2731:53:127"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2717:10:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2843:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2845:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2845:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2845:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2802:10:127"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2814:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2799:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2822:10:127"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2834:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2819:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2819:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2796:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2796:46:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2793:72:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2881:2:127",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2885:10:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2874:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2874:22:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2874:22:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2912:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2920:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:18:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2905:18:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2971:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2980:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2983:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2973:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2973:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2973:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2946:6:127"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2954:2:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2942:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2942:15:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2959:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2938:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:26:127"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2966:3:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2935:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2932:55:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3013:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3021:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3009:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3009:17:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3032:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3040:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3028:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3028:17:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3047:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2996:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2996:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2996:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3074:6:127"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3082:2:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3070:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3070:15:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3087:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3066:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3066:26:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:1:127",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3059:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:37:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3059:37:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3105:15:127",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3114:6:127"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3105:5:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2434:6:127",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2442:3:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2450:5:127",
                "type": ""
              }
            ],
            "src": "2408:718:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3244:343:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3290:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3299:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3302:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3292:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3292:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3292:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3265:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3274:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3286:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3257:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3257:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3254:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3315:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3338:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3325:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3315:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3357:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3371:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3361:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3446:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3455:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3458:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3448:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3448:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3448:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3418:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3426:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3415:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3415:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3412:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3471:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3502:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3513:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3498:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3498:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3522:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3481:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3481:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3539:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3566:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3577:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3562:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3562:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3549:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3539:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3194:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3205:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3217:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3225:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3233:6:127",
                "type": ""
              }
            ],
            "src": "3131:456:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3693:125:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3703:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3715:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3726:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3711:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3703:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3745:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3760:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3768:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3756:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3756:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:74:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3662:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3673:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3684:4:127",
                "type": ""
              }
            ],
            "src": "3592:226:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3865:76:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3919:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3928:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3931:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3921:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3921:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3921:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3888:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3909:5:127"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3902:6:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3902:13:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3895:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3895:21:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3885:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:32:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3878:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:40:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3875:60:127"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3854:5:127",
                "type": ""
              }
            ],
            "src": "3823:118:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4047:276:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4093:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4102:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4105:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4095:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4095:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4095:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4068:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4077:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4064:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4064:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4089:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4060:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4060:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4057:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4118:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4141:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4128:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4118:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4160:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4187:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4198:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4170:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4160:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4211:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4241:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4252:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4237:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4224:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4215:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4287:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4265:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4265:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4302:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4312:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4302:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3997:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4008:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4020:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4028:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4036:6:127",
                "type": ""
              }
            ],
            "src": "3946:377:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4398:177:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4444:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4453:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4456:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4446:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4446:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4446:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4419:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4428:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4415:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4415:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4440:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4411:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4408:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4469:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4495:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4482:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4482:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4473:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4539:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4514:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4554:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4564:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4554:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4364:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4375:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4387:6:127",
                "type": ""
              }
            ],
            "src": "4328:247:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4741:636:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4788:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4797:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4800:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4790:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4790:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4790:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4762:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4771:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4758:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4758:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4783:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4754:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4754:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4751:53:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4813:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4839:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4826:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4826:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4817:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4883:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4858:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4858:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4898:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4908:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4898:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4922:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4953:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4964:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4949:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4949:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4936:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4936:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4926:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5011:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5020:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5023:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5013:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5013:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5013:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4983:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4991:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4980:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4977:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5036:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5067:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5078:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5063:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5063:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5087:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5046:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5046:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5036:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5104:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5131:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5142:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5127:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5127:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5114:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5114:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5155:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5182:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5193:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5178:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5178:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5165:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5155:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5206:48:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5238:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5249:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5234:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5234:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5221:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5221:33:127"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5210:7:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5285:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5263:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5263:30:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5302:17:127",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "5312:7:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5302:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5328:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5355:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5366:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5351:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5338:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5328:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4667:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4678:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4690:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4698:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4706:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4714:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4722:6:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4730:6:127",
                "type": ""
              }
            ],
            "src": "4580:797:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5511:119:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5521:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5533:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5544:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5529:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5529:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5521:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5563:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5574:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5556:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5556:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5556:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5601:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5612:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5597:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5597:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5617:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5590:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5590:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5590:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5472:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5483:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5491:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5502:4:127",
                "type": ""
              }
            ],
            "src": "5382:248:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5756:264:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5803:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5812:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5815:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5805:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5805:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5805:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5777:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5786:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5773:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5773:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5798:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5769:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5769:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "5766:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5828:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5851:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5838:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5838:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5828:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5870:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5897:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5908:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5893:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5893:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5880:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5880:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5870:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5921:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5948:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5959:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5944:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5944:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5931:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5931:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5921:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5972:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5999:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6010:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5995:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5995:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5982:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5982:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5972:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5698:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5709:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5721:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5729:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5737:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5745:6:127",
                "type": ""
              }
            ],
            "src": "5635:385:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6129:279:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6175:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6184:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6187:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6177:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6177:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6177:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6150:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6159:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6146:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6146:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6171:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6142:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "6139:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6200:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6223:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6210:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6210:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6200:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6242:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6269:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6280:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6265:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6265:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6252:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6252:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6242:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6293:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6323:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6334:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6319:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6319:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6306:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6306:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6297:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6372:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6347:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6387:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6397:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6387:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6079:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6090:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6102:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6110:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6118:6:127",
                "type": ""
              }
            ],
            "src": "6025:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:316:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6598:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6607:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6610:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6600:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6600:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6600:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6572:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6581:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6568:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6568:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:3:127",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6564:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6564:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "6561:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6623:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6646:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6633:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6623:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6665:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6692:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6703:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6688:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6688:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6675:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6675:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6665:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6716:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6743:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6754:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6739:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6739:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6726:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6726:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6716:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6767:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6794:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6805:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6790:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6790:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6777:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6767:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6818:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6845:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6856:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6841:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6841:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6828:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6828:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6818:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6485:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6496:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6508:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6516:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6524:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6532:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6540:6:127",
                "type": ""
              }
            ],
            "src": "6413:454:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6939:174:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6985:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6994:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6997:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6987:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6987:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6987:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6960:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6969:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6956:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6956:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6981:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6952:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "6949:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7010:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7036:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7023:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7023:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7014:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7077:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7055:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7055:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7055:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7092:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7102:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7092:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6905:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6916:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6928:6:127",
                "type": ""
              }
            ],
            "src": "6872:241:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7236:328:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7283:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7292:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7295:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7285:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7285:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7285:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7257:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7266:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7253:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7253:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7278:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7249:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7249:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "7246:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7308:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7331:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7318:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7308:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7350:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7377:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7388:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7373:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7373:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7360:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7360:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7350:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7401:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7431:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7442:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7427:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7427:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7414:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7414:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7405:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7477:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7455:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7455:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7455:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7492:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7502:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7492:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7516:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7543:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7554:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7539:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7526:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7526:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7516:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7178:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7189:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7201:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7209:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7217:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7225:6:127",
                "type": ""
              }
            ],
            "src": "7118:446:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7664:92:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7674:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7686:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7682:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7674:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7716:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7741:6:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7734:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7734:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7727:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:41:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:41:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7633:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7644:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7655:4:127",
                "type": ""
              }
            ],
            "src": "7569:187:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7865:279:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7911:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7920:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7923:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7913:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7913:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7913:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7886:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7895:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7882:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7882:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7907:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7878:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "7875:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7936:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7959:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7946:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7936:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7978:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8008:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8019:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8004:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8004:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7991:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7982:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8057:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8032:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8032:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8072:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8082:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8072:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8096:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8123:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8134:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8119:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8119:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8106:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8106:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7815:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7826:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7838:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7846:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7854:6:127",
                "type": ""
              }
            ],
            "src": "7761:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:294:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8400:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8400:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8443:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8454:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8436:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8436:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8481:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8492:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8477:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8477:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8497:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8470:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8470:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8470:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8524:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8535:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8520:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8520:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8540:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8513:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8513:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8513:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8567:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8578:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8563:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8563:18:127"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8583:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8556:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8610:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8621:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8606:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8606:19:127"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8627:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8599:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8599:35:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8654:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8665:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8650:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8650:19:127"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8671:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8643:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8643:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8643:35:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8319:9:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8330:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8338:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8346:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8354:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8362:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8370:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8381:4:127",
                "type": ""
              }
            ],
            "src": "8149:535:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8776:161:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8822:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8831:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8834:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8824:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8824:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8824:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8797:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8806:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8793:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8793:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8818:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8789:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8789:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "8786:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8847:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8870:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8857:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8847:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8889:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8916:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8927:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8912:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8912:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8899:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8889:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8734:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8745:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8757:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8765:6:127",
                "type": ""
              }
            ],
            "src": "8689:248:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9029:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9075:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9084:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9087:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9077:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9077:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9077:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9050:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9059:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9046:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9046:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9071:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9042:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9039:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9100:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9126:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9113:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9104:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9170:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9145:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9145:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9145:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9185:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9195:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9185:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9209:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9236:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9247:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9219:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9219:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9209:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8987:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8998:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9010:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9018:6:127",
                "type": ""
              }
            ],
            "src": "8942:315:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9443:618:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9490:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9499:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9502:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9492:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9492:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9492:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9464:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9485:3:127",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9456:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9456:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9453:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9515:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9538:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9525:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9515:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9557:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9587:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9598:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9583:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9583:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9570:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9570:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9561:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9636:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9611:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9611:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9611:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9651:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9661:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9651:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9675:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9706:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9717:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9702:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9702:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9689:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9689:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9679:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9764:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9773:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9776:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9766:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9766:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9766:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9736:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9744:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9733:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9733:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9730:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9789:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9820:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9831:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9816:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9816:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9840:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9799:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9789:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9857:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9884:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9895:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9880:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9880:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9867:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9867:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9857:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9908:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9935:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9946:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9931:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9931:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9918:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9908:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9960:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9987:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9998:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9970:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9960:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10039:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10050:3:127",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10035:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10035:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10022:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9361:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9372:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9384:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9392:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9400:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9408:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9416:6:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9424:6:127",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9432:6:127",
                "type": ""
              }
            ],
            "src": "9262:799:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10222:665:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10269:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10278:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10281:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10271:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10271:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10271:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10243:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10252:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10239:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10239:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10264:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10235:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10235:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10232:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10294:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10317:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10304:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10304:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10294:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10336:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10367:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10378:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10363:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10363:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10350:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10350:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "10340:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10391:28:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10401:18:127",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10395:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10446:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10455:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10458:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10448:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10448:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10448:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10434:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10442:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10431:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10431:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10428:34:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10471:32:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10485:9:127"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10496:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10481:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10481:22:127"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "10475:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10551:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10560:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10563:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10553:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10553:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10553:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10530:2:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10534:4:127",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10526:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10526:13:127"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10541:7:127"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10522:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10522:27:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10515:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10515:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10512:55:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10576:30:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10603:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10590:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10590:16:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10580:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10633:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10642:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10645:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10635:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10635:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10635:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10621:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10629:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10618:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10615:34:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10708:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10717:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10720:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10710:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10710:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10710:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10672:2:127"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10680:6:127"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10688:2:127",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10676:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10676:15:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10668:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10668:24:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10694:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10664:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10664:33:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10699:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10661:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10661:46:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10658:66:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10733:21:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10747:2:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10751:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10743:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10743:11:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10763:16:127",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10773:6:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10788:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10815:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10826:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10811:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10811:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10798:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10798:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10788:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10839:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10866:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10877:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10862:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10862:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10849:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10849:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10839:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10156:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10167:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10179:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10187:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10195:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10203:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10211:6:127",
                "type": ""
              }
            ],
            "src": "10066:821:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:181:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11083:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11094:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11076:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11076:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11076:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11117:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11128:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11113:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11113:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:2:127",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11156:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11167:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11152:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11152:18:127"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11172:33:127",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11145:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11145:61:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11145:61:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11215:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11227:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11238:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11223:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11223:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11215:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11043:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11057:4:127",
                "type": ""
              }
            ],
            "src": "10892:355:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11284:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11301:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11304:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11294:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11294:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11294:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11398:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11401:4:127",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11391:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11391:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11391:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11422:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11425:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11415:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11415:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11415:15:127"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11252:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11615:167:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11632:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11643:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11625:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11625:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11625:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11666:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11677:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11662:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11662:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11682:2:127",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11655:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11655:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11655:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11705:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11716:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11701:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11701:18:127"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11721:19:127",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11694:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11694:47:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11694:47:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11750:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11762:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11773:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11758:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11758:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11750:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11592:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11606:4:127",
                "type": ""
              }
            ],
            "src": "11441:341:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11961:173:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11978:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11989:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11971:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11971:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11971:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12012:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12023:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12008:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12008:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12028:2:127",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12001:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12001:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12001:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12051:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12062:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12047:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12047:18:127"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12067:25:127",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12040:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:53:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12040:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12102:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12114:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12125:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12110:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12110:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12102:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11938:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11952:4:127",
                "type": ""
              }
            ],
            "src": "11787:347:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12313:182:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12330:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12341:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12323:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12323:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12323:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12364:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12375:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12360:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12360:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12380:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12353:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12353:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12353:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12403:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12414:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12399:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12399:18:127"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12419:34:127",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12392:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12392:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12392:62:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12463:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12475:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12486:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12471:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12471:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12463:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12290:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12304:4:127",
                "type": ""
              }
            ],
            "src": "12139:356:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12674:161:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12691:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12702:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12684:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12684:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12684:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12725:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12736:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12721:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12721:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12741:2:127",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12714:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12714:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12714:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12764:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12775:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12760:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12760:18:127"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12780:13:127",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12753:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12753:41:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12753:41:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12803:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12815:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12826:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12811:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12811:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12803:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12651:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12665:4:127",
                "type": ""
              }
            ],
            "src": "12500:335:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12969:168:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12979:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12991:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13002:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12987:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12979:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13021:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13036:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13044:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13032:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13032:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13014:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13014:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13014:74:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13108:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13119:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13104:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13104:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13124:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13097:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13097:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13097:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12930:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12941:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12949:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12960:4:127",
                "type": ""
              }
            ],
            "src": "12840:297:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13316:165:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13333:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13344:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13326:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13326:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13367:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13378:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13363:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13363:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13383:2:127",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13356:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13356:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13406:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13417:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13402:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13402:18:127"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13422:17:127",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13395:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13395:45:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13395:45:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13449:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13461:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13472:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13457:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13457:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13449:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13293:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13307:4:127",
                "type": ""
              }
            ],
            "src": "13142:339:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13567:103:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13613:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13622:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13625:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13615:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13615:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13615:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13588:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13597:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13584:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13584:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13609:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13580:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13580:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13577:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13638:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13654:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13648:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13648:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13638:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13533:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13544:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13556:6:127",
                "type": ""
              }
            ],
            "src": "13486:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13707:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13724:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13727:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13821:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13824:4:127",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13814:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13814:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13814:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13845:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13848:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13838:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13838:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13838:15:127"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13675:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13913:76:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13935:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13937:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13937:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13937:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13929:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13932:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13926:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13926:8:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13923:34:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13966:17:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13978:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13981:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13974:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13974:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13966:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13895:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13898:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13904:4:127",
                "type": ""
              }
            ],
            "src": "13864:125:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14046:116:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14105:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14107:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14107:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14107:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14077:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14070:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14070:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14063:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14063:17:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14085:1:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14096:1:127",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14092:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14092:6:127"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14100:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14088:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14088:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14082:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14082:21:127"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14059:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14059:45:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14056:71:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14136:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14151:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14154:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14147:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14147:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14136:7:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14025:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14028:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14034:7:127",
                "type": ""
              }
            ],
            "src": "13994:168:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14213:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14244:168:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14265:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14268:77:127",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14258:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14258:88:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14258:88:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14366:1:127",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14369:4:127",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14359:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14359:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14359:15:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14394:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14397:4:127",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14387:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14387:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14387:15:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14233:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14226:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14226:9:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14223:189:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14421:14:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14430:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14433:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14426:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14426:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14421:1:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14198:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14201:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14207:1:127",
                "type": ""
              }
            ],
            "src": "14167:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14494:80:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14521:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14523:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14523:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14523:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14510:1:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14517:1:127"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14513:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14513:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14507:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14507:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14504:39:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14552:16:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14563:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14566:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14559:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14559:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14552:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14477:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14480:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14486:3:127",
                "type": ""
              }
            ],
            "src": "14446:128:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14626:88:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14657:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14659:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14659:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14659:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14642:5:127"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:1:127",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14649:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14649:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14639:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14639:17:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14636:43:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14688:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14699:5:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14706:1:127",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14695:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:13:127"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14688:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14608:5:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14618:3:127",
                "type": ""
              }
            ],
            "src": "14579:135:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14893:243:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14910:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14921:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14903:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14903:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14903:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14944:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14955:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14940:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14940:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14960:2:127",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14933:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14933:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14933:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14983:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14994:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14979:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14979:18:127"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14999:34:127",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14972:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14972:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14972:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15054:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15065:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15050:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15050:18:127"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15070:23:127",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15043:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15043:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15043:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15103:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15115:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15126:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15111:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15111:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15103:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14870:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14884:4:127",
                "type": ""
              }
            ],
            "src": "14719:417:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15315:228:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15332:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15343:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15325:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15325:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15325:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15366:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15377:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15362:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15362:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15382:2:127",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15355:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15355:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15355:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15405:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15416:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15401:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15401:18:127"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15421:34:127",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15394:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15394:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15394:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15476:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15487:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15472:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15472:18:127"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15492:8:127",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15465:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15465:36:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15465:36:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15510:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15522:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15533:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15518:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15518:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15510:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15292:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15306:4:127",
                "type": ""
              }
            ],
            "src": "15141:402:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15722:171:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15739:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15750:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15732:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15732:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15732:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15773:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15784:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15769:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15769:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15789:2:127",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15762:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15762:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15762:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15812:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15823:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15808:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15808:18:127"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15828:23:127",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15801:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15801:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15801:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15861:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15873:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15884:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15869:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15869:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15861:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15699:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15713:4:127",
                "type": ""
              }
            ],
            "src": "15548:345:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16055:241:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16065:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16077:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16088:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16073:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16073:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16065:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16100:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16110:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16104:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16168:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16183:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16191:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16179:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16179:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16161:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16161:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16161:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16215:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16226:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16211:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16211:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16235:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16243:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16231:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16231:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16204:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16204:43:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16204:43:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16267:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16278:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16263:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16263:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16283:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16256:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16256:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16256:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16008:9:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16019:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16027:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16035:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16046:4:127",
                "type": ""
              }
            ],
            "src": "15898:398:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16475:171:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16492:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16503:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16485:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16485:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16485:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16526:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16537:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16522:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16522:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16542:2:127",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16515:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16515:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16515:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16565:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16576:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16561:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16561:18:127"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16581:23:127",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16554:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16554:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16554:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16614:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16626:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16637:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16622:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16622:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16614:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16452:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16466:4:127",
                "type": ""
              }
            ],
            "src": "16301:345:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16774:135:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16784:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16796:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16807:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16792:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16792:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16784:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16826:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16837:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16819:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16819:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16864:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16860:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16860:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16894:6:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16887:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16887:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16880:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16880:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16853:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16853:50:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16853:50:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16735:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16746:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16754:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16765:4:127",
                "type": ""
              }
            ],
            "src": "16651:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16967:205:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16977:10:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16986:1:127",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16981:1:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17046:63:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17071:3:127"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17076:1:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17067:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17067:11:127"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "17090:3:127"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17095:1:127"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17086:3:127"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17086:11:127"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17080:5:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17080:18:127"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17060:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17060:39:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17060:39:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17007:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17010:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17004:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17004:13:127"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17018:19:127",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17020:15:127",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17029:1:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17032:2:127",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17025:3:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17025:10:127"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17020:1:127"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17000:3:127",
                    "statements": []
                  },
                  "src": "16996:113:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17135:31:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17148:3:127"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17153:6:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17144:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17144:16:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17162:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17137:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17137:27:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17137:27:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17124:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17127:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17121:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "17118:48:127"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16945:3:127",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16950:3:127",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16955:6:127",
                "type": ""
              }
            ],
            "src": "16914:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17314:137:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17324:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17344:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17338:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17338:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17328:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17386:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17394:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17382:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17382:17:127"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17401:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17406:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "17360:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17360:53:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17360:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17422:23:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17433:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17438:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17429:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17429:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17422:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17290:3:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17295:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17306:3:127",
                "type": ""
              }
            ],
            "src": "17177:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17630:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17647:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17658:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17640:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17640:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17640:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17681:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17692:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17677:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17677:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17697:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17670:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17670:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17670:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17720:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17731:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17716:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17716:18:127"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17736:31:127",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17709:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17709:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17777:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17789:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17800:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17785:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17785:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17777:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17607:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17621:4:127",
                "type": ""
              }
            ],
            "src": "17456:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17988:175:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18005:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18016:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17998:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17998:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17998:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18039:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18050:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18035:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18035:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18055:2:127",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18028:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18028:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18028:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18078:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18089:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18074:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18074:18:127"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18094:27:127",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18067:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18067:55:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18067:55:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18131:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18143:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18154:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18139:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18139:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18131:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17965:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17979:4:127",
                "type": ""
              }
            ],
            "src": "17814:349:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18342:180:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18359:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18370:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18352:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18352:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18352:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18393:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18404:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18389:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18389:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18409:2:127",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18382:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18382:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18382:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18432:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18443:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18428:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18428:18:127"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18448:32:127",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18421:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18421:60:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18421:60:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18490:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18502:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18513:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18498:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18498:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18490:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18319:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18333:4:127",
                "type": ""
              }
            ],
            "src": "18168:354:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18701:170:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18718:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18729:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18711:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18711:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18711:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18752:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18763:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18748:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18748:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18768:2:127",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18741:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18741:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18741:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18791:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18802:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18787:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18787:18:127"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18807:22:127",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18780:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18780:50:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18780:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18839:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18851:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18862:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18847:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18847:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18839:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18678:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18692:4:127",
                "type": ""
              }
            ],
            "src": "18527:344:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19065:443:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19075:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19087:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19098:3:127",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19083:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19083:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19075:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19118:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19135:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19129:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19129:13:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19111:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:32:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19111:32:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19163:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19174:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19159:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19159:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19191:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19199:4:127",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19187:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19187:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19181:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19181:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19152:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19152:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19152:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19226:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19237:4:127",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19222:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19222:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19254:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19262:4:127",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19250:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19250:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19244:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19244:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19215:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19215:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19215:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19289:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19300:4:127",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19285:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19285:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19317:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19325:4:127",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19313:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19313:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19307:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19307:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19278:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19278:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19278:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19352:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19363:4:127",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19348:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19348:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19380:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19388:4:127",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19376:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19376:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19370:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19370:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19341:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19341:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19341:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19415:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19426:4:127",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19411:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19411:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19443:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19451:4:127",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19439:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19439:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19433:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19433:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19404:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19404:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19404:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19478:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19489:3:127",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19474:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19474:19:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19495:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19467:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19467:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19467:35:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19026:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19037:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19045:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19056:4:127",
                "type": ""
              }
            ],
            "src": "18876:632:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19611:147:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19657:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19666:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19669:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19659:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19659:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19659:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19632:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19641:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19628:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19628:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19653:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19624:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19624:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "19621:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19682:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19698:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19692:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19692:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19682:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19717:35:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19737:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19748:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19733:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19733:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19727:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19727:25:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19717:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19569:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19580:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19592:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19600:6:127",
                "type": ""
              }
            ],
            "src": "19513:245:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19844:170:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19890:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19899:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19902:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19892:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19892:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19892:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19865:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19874:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19861:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19861:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19886:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19857:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19857:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "19854:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19915:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19934:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19928:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19928:16:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19919:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19978:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "19953:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19953:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19953:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19993:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20003:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19993:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19810:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19821:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19833:6:127",
                "type": ""
              }
            ],
            "src": "19763:251:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20097:167:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20143:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20152:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20155:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20145:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20145:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20145:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20118:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20127:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20114:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20114:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20139:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20110:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20110:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "20107:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20168:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20187:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20181:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20181:16:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "20172:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20228:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "20206:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20206:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20206:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20243:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20253:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "20243:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20063:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20074:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20086:6:127",
                "type": ""
              }
            ],
            "src": "20019:245:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20443:232:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20460:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20471:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20453:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20453:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20453:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20494:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20505:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20490:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20490:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20510:2:127",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20483:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20483:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20483:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20533:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20544:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20529:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20529:18:127"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20549:34:127",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20522:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20522:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20522:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20604:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20615:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20600:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20600:18:127"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20620:12:127",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20593:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20593:40:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20593:40:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20642:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20654:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20665:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20650:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20650:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20642:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20420:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20434:4:127",
                "type": ""
              }
            ],
            "src": "20269:406:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20854:234:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20871:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20882:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20864:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20864:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20864:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20905:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20916:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20901:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20901:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20921:2:127",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20894:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20894:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20894:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20944:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20955:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20940:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20940:18:127"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20960:34:127",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20933:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20933:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20933:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21015:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21026:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21011:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21011:18:127"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21031:14:127",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21004:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21004:42:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21004:42:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21055:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21067:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21078:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21063:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21063:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21055:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20831:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20845:4:127",
                "type": ""
              }
            ],
            "src": "20680:408:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21187:289:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21197:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "21217:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21211:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21211:12:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21201:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21232:33:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "21252:5:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21259:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21248:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21248:16:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21242:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21242:23:127"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21236:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21274:41:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21288:26:127",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "21284:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21284:31:127"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21278:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21324:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "21337:2:127"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21341:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21333:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21333:11:127"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21324:5:127"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21379:91:127",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21393:67:127",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "21410:2:127"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "21418:2:127"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21426:1:127",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21433:1:127",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "21440:2:127",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21444:6:127"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "21436:3:127"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "21436:15:127"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "21429:3:127"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21429:23:127"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "21422:3:127"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21422:31:127"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "21414:3:127"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21414:40:127"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "21406:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21406:49:127"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "21457:2:127"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21402:3:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21402:58:127"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21393:5:127"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21359:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21367:2:127",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21356:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21356:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "21353:117:127"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "21167:5:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21177:5:127",
                "type": ""
              }
            ],
            "src": "21093:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21610:198:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21620:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21632:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21643:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21628:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21628:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21620:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21655:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21665:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21659:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21723:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21738:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21746:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21734:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21734:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21716:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21716:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21716:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21770:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21781:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21766:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21766:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21790:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21798:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21786:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21786:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21759:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21759:43:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21759:43:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21571:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21582:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21590:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21601:4:127",
                "type": ""
              }
            ],
            "src": "21481:327:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21987:228:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22004:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22015:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21997:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21997:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21997:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22038:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22049:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22034:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22034:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22054:2:127",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22027:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22027:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22027:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22077:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22088:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22073:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22073:18:127"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22093:34:127",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22066:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22066:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22066:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22148:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22159:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22144:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22144:18:127"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22164:8:127",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22137:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22137:36:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22137:36:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22182:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22194:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22205:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22190:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22190:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22182:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21964:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21978:4:127",
                "type": ""
              }
            ],
            "src": "21813:402:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22394:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22411:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22422:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22404:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22404:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22404:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22445:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22456:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22441:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22441:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22461:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22434:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22434:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22434:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22484:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22495:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22480:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22480:18:127"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22500:31:127",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22473:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22473:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22473:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22541:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22553:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22564:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22549:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22549:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22541:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22371:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22385:4:127",
                "type": ""
              }
            ],
            "src": "22220:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:262:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22716:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22727:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22709:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22709:21:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22739:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22759:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22753:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22753:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "22743:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22786:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22797:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22782:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22782:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22802:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22775:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22775:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22775:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22844:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22852:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22840:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22840:15:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22861:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22872:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22857:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22857:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22877:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22818:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22818:66:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22818:66:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22893:62:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22909:9:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22928:6:127"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22936:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22924:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22924:15:127"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22945:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22941:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22941:7:127"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22920:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22920:29:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22905:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22905:45:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22952:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22901:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22901:54:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22893:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22668:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22679:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22690:4:127",
                "type": ""
              }
            ],
            "src": "22578:383:127"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 127,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "490:29520:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;7911:91:34;7980:8;:15;7911:91;;;481:25:127;;;469:2;454:18;7911:91:34;;;;;;;;14353:166;;;:::i;4081:187::-;;;;;;:::i;:::-;;:::i;3177:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1646:15:127;;;1628:34;;1693:2;1678:18;;1671:34;;;;1721:18;;1714:34;;;;1779:2;1764:18;;1757:34;;;;1822:3;1807:19;;1800:35;1872:15;;;1866:3;1851:19;;1844:44;1554:3;1539:19;3177:26:34;1254:640:127;2483:30:34;;;;;;28561:501:35;;;;;;:::i;:::-;;:::i;3695:99:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3695:99:34;;;;;;-1:-1:-1;;;;;3756:55:127;;;3738:74;;3726:2;3711:18;3695:99:34;3592:226:127;3870:32:34;;;;;-1:-1:-1;;;;;3870:32:34;;;12375:567:35;;;;;;:::i;:::-;;:::i;3209:47:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;799:34:35;;;;;-1:-1:-1;;;;;799:34:35;;;2437:40:34;;;;;;2255:57;;;;;;6722:200;;;;;;:::i;:::-;;:::i;22801:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;5556:25:127;;;5612:2;5597:18;;5590:34;;;;5529:18;22801:1145:35;5382:248:127;8197:696:35;;;;;;:::i;:::-;;:::i;1895:25:34:-;;;;;;4370:108;;;;;;:::i;:::-;;:::i;1926:27::-;;;;;;7625:168;;;;;;:::i;:::-;;:::i;10944:2004::-;;;;;;:::i;:::-;;:::i;2619:36::-;;;;;;8199:165;;;;;;:::i;:::-;;:::i;2159:57::-;;;;;;7182:282;;;;;;:::i;:::-;;:::i;1666:25::-;;;;;-1:-1:-1;;;;;1666:25:34;;;9052:1669;;;;;;:::i;:::-;;:::i;1244:121:35:-;;;;;;:::i;:::-;;:::i;1815:26:34:-;;;;;-1:-1:-1;;;;;1815:26:34;;;1908:101:3;;;:::i;21421:639:35:-;;;;;;:::i;:::-;;:::i;26297:1209::-;;;;;;:::i;:::-;;:::i;3815:36:34:-;;;;;-1:-1:-1;;;;;3815:36:34;;;1557:20;;;;;-1:-1:-1;;;;;1557:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;698:34:35;;;;;;;;;;;;;;;7734:14:127;;7727:22;7709:41;;7697:2;7682:18;698:34:35;7569:187:127;27617:668:35;;;;;;:::i;:::-;;:::i;2840:22:34:-;;;;;;2352:30;;;;;;13480:334;;;:::i;5252:132::-;;;;;;:::i;:::-;;:::i;1729:32::-;;;;;-1:-1:-1;;;;;1729:32:34;;;3440:72;;;;;;:::i;:::-;;:::i;:::-;;;;8436:25:127;;;8492:2;8477:18;;8470:34;;;;8520:18;;;8513:34;;;;8578:2;8563:18;;8556:34;8621:3;8606:19;;8599:35;8665:3;8650:19;;8643:35;8423:3;8408:19;3440:72:34;8149:535:127;1583:32:34;;;;;-1:-1:-1;;;;;1583:32:34;;;2719:37;;;;;;29447:561:35;;;;;;:::i;:::-;;:::i;1991:28:34:-;;;;;;1470:118:35;;;;;;:::i;:::-;;:::i;15789:301:34:-;;;;;;:::i;:::-;;:::i;2063:42::-;;;;;;9574:826:35;;;;;;:::i;:::-;;:::i;5905:613:34:-;;;;;;:::i;:::-;;:::i;2922:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4954:228:34:-;;;;;;:::i;:::-;;:::i;4674:226::-;;;;;;:::i;:::-;;:::i;2988:39::-;;;;;-1:-1:-1;;;;;2988:39:34;;;1846:618:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2005:21:35::1;2029:8;2038:4;2029:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;2142:9:::0;;2029:14;;-1:-1:-1;2124:128:35::1;::::0;-1:-1:-1;;;;;2142:9:35::1;2183:10;2215:4;2234:8:::0;2124:45:::1;:128::i;:::-;2301:156;2323:4;2341:10;2301:156;;;;;;;;;;;::::0;2381:8:::1;2403:15;2432;2301:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;1846:618:35:o;14353:166:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;14511:1:::2;14487:21;:25:::0;14353:166::o;4081:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4199:5:34::1;:14:::0;;-1:-1:-1;;;;;4199:14:34;;::::1;-1:-1:-1::0;;;;;;4199:14:34;;::::1;;::::0;;;4223:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;4081:187::o;3177:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3177:26:34;;;;-1:-1:-1;3177:26:34;;;;;;;;:::o;28561:501:35:-;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;28742:11:::1;;28731:7;;:22;28727:329;;;28849:52;28875:11;28888:12;28849:25;:52::i;:::-;28561:501:::0;;:::o;28727:329::-:1;29007:5;::::0;29000:45:::1;::::0;;;;-1:-1:-1;;;;;13032:55:127;;;29000:45:35::1;::::0;::::1;13014:74:127::0;13104:18;;;13097:34;;;29007:5:35;;::::1;::::0;29000:18:::1;::::0;12987::127;;29000:45:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;28561:501:::0;;:::o;12375:567::-;12505:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;12555:28:35::1;12586:146;12609:4;12627:10;12586:146;;;;;;;;;;;::::0;12667:10:::1;12691:12;12717:5;12586:9;:146::i;:::-;12555:177;;12794:111;12859:10;12883:4;:12;;;12812:8;12821:4;12812:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;-1:-1:-1;;;;;12812:19:35::1;::::0;12794:111;:51:::1;:111::i;:::-;12923:12:::0;1772:1:8;2872:7;:22;12923:12:35;12375:567;-1:-1:-1;;;;12375:567:35:o;6722:200:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;6857:27:::2;:58:::0;6722:200::o;22801:1145:35:-;1033:19;;23081:18;;;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;23221:201:::1;23257:8;23279:15;23308:4;23326:10;23350:12;23376:18;23408:4;23221:22;:201::i;:::-;23187:235:::0;;-1:-1:-1;23187:235:35;-1:-1:-1;23488:14:35;;23484:164:::1;;23536:17;::::0;23518:119:::1;::::0;-1:-1:-1;;;;;23536:17:35::1;23585:10;23613::::0;23518:49:::1;:119::i;:::-;23777:21:::0;;23773:167:::1;;23869:11;::::0;23832:5:::1;::::0;23814:115:::1;::::0;-1:-1:-1;;;;;23832:5:35;;::::1;::::0;23869:11:::1;23898:17:::0;23814:37:::1;:115::i;:::-;22801:1145:::0;;;;;;;;;:::o;8197:696::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;8415:17:35::1;8435:8;8444:4;8435:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;8527:17:::1;::::0;-1:-1:-1;;;;;8435:20:35;;::::1;::::0;-1:-1:-1;8509:133:35::1;::::0;8527:17:::1;8576:10;8435:20:::0;8623:9;8509:53:::1;:133::i;:::-;8686:200;8719:4;8737:10;8686:200;;;;;;;;;;;::::0;8777:9:::1;8800:15;8829;8858:18;8686:19;:200::i;4370:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4445:11:34::1;:26:::0;;-1:-1:-1;;;;;;4445:26:34::1;-1:-1:-1::0;;;;;4445:26:34;;;::::1;::::0;;;::::1;::::0;;4370:108::o;7625:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7740:21:34::1;:46:::0;;-1:-1:-1;;;;;;7740:46:34::1;-1:-1:-1::0;;;;;7740:46:34;;;::::1;::::0;;;::::1;::::0;;7625:168::o;10944:2004::-;10994:17;11072:21;11096:8;11105:4;11096:14;;;;;;;;:::i;:::-;;;;;;;;;;;11072:38;;11199:4;:20;;;11183:12;:36;11179:75;;-1:-1:-1;11242:1:34;;10944:2004;-1:-1:-1;;10944:2004:34:o;11179:75::-;11348:10;;;;11341:32;;;;;;;;11319:19;;-1:-1:-1;;;;;11348:10:34;;11341:30;;:32;;;;;;;;;;;;;;11348:10;11341:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11319:54;-1:-1:-1;11387:16:34;11383:104;;-1:-1:-1;11442:12:34;11419:20;;;;:35;-1:-1:-1;11475:1:34;;10944:2004;-1:-1:-1;10944:2004:34:o;11383:104::-;11599:21;11638:4;:20;;;11623:12;:35;;;;:::i;:::-;11599:59;;11767:19;11865:15;;11846:4;:15;;;11818:13;;11790;:41;;;;:::i;:::-;:71;;;;:::i;:::-;11789:91;;;;:::i;:::-;11988:24;;11767:113;;-1:-1:-1;;;;;;11988:24:34;11979:4;11971:41;11967:706;;;12172:53;12198:11;12219:4;12172:25;:53::i;:::-;12314:1;12302:13;;11967:706;;;12469:5;;12462:46;;;;;12489:4;12462:46;;;13014:74:127;13104:18;;;13097:34;;;-1:-1:-1;;;;;12469:5:34;;;;12462:18;;12987::127;;12462:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12568:11;12556:23;;12631:31;12652:9;12631:20;:31::i;:::-;12817:11;12794:4;:20;;;:34;;;;:::i;:::-;12771:20;;;:57;-1:-1:-1;;12929:12:34;12906:20;;;;:35;;;;-1:-1:-1;10944:2004:34;;-1:-1:-1;10944:2004:34:o;8199:165::-;8296:7;8326:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8326:24:34;;;;;;;;;:31;8199:165;;;;;:::o;7182:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7341:7:34::1;:18:::0;;;;7369:11:::1;:26:::0;7405:24:::1;:52:::0;;-1:-1:-1;;;;;;7405:52:34::1;-1:-1:-1::0;;;;;7405:52:34;;::::1;::::0;;;::::1;::::0;;7182:282::o;9052:1669::-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;9475:47:::1;9656:30;9664:22:::0;9656:5:::1;:30;:::i;:::-;9607:28;9570:18;9526:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9525:162;;;;:::i;:::-;9475:212;;9820:42;;9766:39;:96;9749:472;;;-1:-1:-1::0;9929:42:34::1;::::0;9749:472:::1;;;10059:42;;10005:39;:96;9988:233;;;-1:-1:-1::0;10168:42:34::1;::::0;9988:233:::1;10701:12;::::0;10668:30:::1;10676:22:::0;10668:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10636:15;::::0;10538:79:::1;10578:39:::0;10538:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10537:177;;;;:::i;:::-;10509:13;:205:::0;-1:-1:-1;;;;;;9052:1669:34:o;1244:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1324:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;1324:34:35;;::::1;::::0;;;::::1;::::0;;1244:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;21421:639:35:-;21600:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;21651::35::1;21675:191;21711:10;21675:191;;;;;;;;;;;::::0;21751:4:::1;21769:10;21793:12;21819:18;21851:5;21675:22;:191::i;:::-;-1:-1:-1::0;21936:17:35::1;::::0;21650:216;;-1:-1:-1;21918:107:35::1;::::0;-1:-1:-1;;;;;21936:17:35::1;21981:10;21650:216:::0;21918:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;22043:10:35;21421:639;-1:-1:-1;;;;;21421:639:35:o;26297:1209::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;26525:22:35::1;26550:21:::0;;;:11:::1;:21;::::0;;;;;;;26572:10:::1;26550:33:::0;;;;;;;:71;;26597:14;;26550:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;26681:21;;;:11:::1;:21:::0;;;;;;26703:10:::1;26681:33:::0;;;;;;;;:71;;26550:96;;-1:-1:-1;26681:33:35;26728:14;;26681:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;26656:111;;26799:20;26825:192;26861:10;26825:192;;;;;;;;;;;::::0;26901:8:::1;26923:14;26951:5;26970:18;27002:5;26825:22;:192::i;:::-;26798:219;;;27063:121;27126:8;27135:6;27126:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;27081:17:::1;::::0;-1:-1:-1;;;;;27081:17:35;;::::1;::::0;27126:22:::1;27162:12:::0;27063:49:::1;:121::i;:::-;27216:203;27249:6;27269:10;27216:203;;;;;;;;;;;::::0;27309:12:::1;27335:14;27363;27391:18;27216:19;:203::i;:::-;27435:64;::::0;27454:10:::1;3738:74:127::0;;27492:6:35;;27476:14;;27466:8;;27435:64:::1;::::0;3726:2:127;3711:18;27435:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;26297:1209:35:o;27617:668::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;27765:19:35::1;27787:31;27801:4:::0;27807:10:::1;27787:13;:31::i;:::-;27765:53;;27833:11;27828:123;27856:11;27850:3;:17;27828:123;;;27890:50;27900:4;27906:10;27890:50;;;;;;;;;;;::::0;27922:3:::1;27927:5;27934::::0;27890:9:::1;:50::i;:::-;-1:-1:-1::0;27869:5:35::1;::::0;::::1;:::i;:::-;;;27828:123;;;;28003:16;28040:8;28049:4;28040:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;28022:85:::1;::::0;;;;28092:4:::1;28022:85;::::0;::::1;3738:74:127::0;-1:-1:-1;;;;;28040:19:35;;::::1;::::0;28022:48:::1;::::0;3711:18:127;;28022:85:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28003:104:::0;-1:-1:-1;28121:12:35;;28117:162:::1;;28149:119;28218:10;28246:8;28167;28176:4;28167:14;;;;;;;;:::i;28149:119::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;27617:668:35:o;13480:334:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;13697:11:::2;::::0;13722:22:::2;::::0;13664:5:::2;::::0;13646:108:::2;::::0;-1:-1:-1;;;;;13664:5:34;;::::2;::::0;13697:11;::::2;::::0;13646:37:::2;:108::i;5252:132::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5339:17:34::1;:38:::0;;-1:-1:-1;;;;;;5339:38:34::1;-1:-1:-1::0;;;;;5339:38:34;;;::::1;::::0;;;::::1;::::0;;5252:132::o;3440:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3440:72:34;;-1:-1:-1;3440:72:34;-1:-1:-1;3440:72:34;;;:::o;29447:561:35:-;995:21:34;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1223:24:::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;29794:11:35::2;::::0;29743:114:::2;::::0;-1:-1:-1;;;;;29794:11:35::2;29819:28;29834:13:::0;29819:12;:28:::2;:::i;:::-;29761:5;::::0;-1:-1:-1;;;;;29761:5:35::2;::::0;29743:114;:37:::2;:114::i;:::-;29983:17;::::0;29942:59:::2;::::0;29968:13;;-1:-1:-1;;;;;29983:17:35::2;29942:25;:59::i;1470:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1550:19:35::1;:31:::0;;-1:-1:-1;;;;;;1550:31:35::1;-1:-1:-1::0;;;;;1550:31:35;;;::::1;::::0;;;::::1;::::0;;1470:118::o;15789:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;15930:5:34::1;::::0;-1:-1:-1;;;;;15920:15:34;;::::1;15930:5:::0;::::1;15920:15;;15899:115;;;::::0;-1:-1:-1;;;;;15899:115:34;;14921:2:127;15899:115:34::1;::::0;::::1;14903:21:127::0;14960:2;14940:18;;;14933:30;14999:34;14979:18;;;14972:62;15070:23;15050:18;;;15043:51;15111:19;;15899:115:34::1;14719:417:127::0;15899:115:34::1;16024:59;-1:-1:-1::0;;;;;16024:38:34;::::1;16063:10;16075:7:::0;16024:38:::1;:59::i;9574:826:35:-:0;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;9902:17:::1;9922:8;9931:4;9922:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;10014:17:::1;::::0;-1:-1:-1;;;;;9922:20:35;;::::1;::::0;-1:-1:-1;9996:133:35::1;::::0;10014:17:::1;10063:10;9922:20:::0;10110:9;9996:53:::1;:133::i;:::-;10182:211;10215:4;10233:8;10255:15;10284:9;10307:15;10336;10365:18;10182:19;:211::i;:::-;9856:544;9574:826:::0;;;;;;;:::o;5905:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;6173:12:34::1;:28:::0;;;6279:17;;6297:1:::1;6279:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;6234:42;:65:::0;-1:-1:-1;6354:17:34;;6372:1:::1;6354:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6309:42;:65:::0;-1:-1:-1;6384:25:34::1;:54:::0;6477:15:::1;:34:::0;-1:-1:-1;;;5905:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;15343:2:127;2238:73:3::1;::::0;::::1;15325:21:127::0;15382:2;15362:18;;;15355:30;15421:34;15401:18;;;15394:62;15492:8;15472:18;;;15465:36;15518:19;;2238:73:3::1;15141:402:127::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4954:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5100:10:34::1;::::0;:15;5092:49:::1;;;::::0;-1:-1:-1;;;;;5092:49:34;;15750:2:127;5092:49:34::1;::::0;::::1;15732:21:127::0;15789:2;15769:18;;;15762:30;15828:23;15808:18;;;15801:51;15869:18;;5092:49:34::1;15548:345:127::0;5092:49:34::1;5151:10;:24:::0;4954:228::o;4674:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;4821:10:::2;:24:::0;;-1:-1:-1;;;;;4821:24:34;;::::2;-1:-1:-1::0;;;;;;4821:24:34;;::::2;;::::0;;;4855:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4674:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;16179:15:127;;;1143:68:12;;;16161:34:127;16231:15;;16211:18;;;16204:43;16263:18;;;16256:34;;;1116:96:12;;1136:5;;1166:27;;16073:18:127;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;3245:2019:35:-;3465:25;3527:21;3551:8;3560:4;3551:14;;;;;;;;:::i;:::-;;;;;;;;;;;3527:38;;3623:1;3612:8;:12;3604:46;;;;-1:-1:-1;;;;;3604:46:35;;16503:2:127;3604:46:35;;;16485:21:127;16542:2;16522:18;;;16515:30;16581:23;16561:18;;;16554:51;16622:18;;3604:46:35;16301:345:127;3604:46:35;3776:16;3787:4;3776:10;:16::i;:::-;3756:36;;3853:21;3877:43;3894:8;3904:15;3877:16;:43::i;:::-;4016:10;;;;3970:9;;3853:67;;-1:-1:-1;3952:106:35;;-1:-1:-1;;;;;3970:9:35;;;;4016:10;4040:8;3952:50;:106::i;:::-;4185:19;4214:8;4223:4;4214:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;4207:77;;;;;;;;481:25:127;;;-1:-1:-1;;;;;4214:20:35;;;;4207:45;;454:18:127;;4207:77:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4389:17;;4365:114;;;;;;;;16819:25:127;;;4456:22:35;;;;;16887:14:127;16880:22;16860:18;;;16853:50;4185:99:35;;-1:-1:-1;4339:23:35;;-1:-1:-1;;;;;4389:17:35;;;;4365:73;;16792:18:127;;4365:114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4662:17;;4638:105;;;;;;;;5556:25:127;;;5597:18;;;5590:34;;;4339:140:35;;-1:-1:-1;4609:26:35;;-1:-1:-1;;;;;4662:17:35;;;;4638:75;;5529:18:127;;4638:105:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4609:134;;4884:18;4850:4;:30;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;4939:217:35;;-1:-1:-1;4967:4:35;4985:13;5012:15;5041:18;5073:15;5102;5131;4939:14;:217::i;:::-;5242:4;5225:15;5202:55;;;;;;:::i;:::-;;;;;;;;5210:13;-1:-1:-1;;;;;5202:55:35;;5248:8;5202:55;;;;481:25:127;;469:2;454:18;;335:177;5202:55:35;;;;;;;;3492:1772;;;;;3245:2019;;;;;;;;:::o;14748:250:34:-;14924:10;;14887:5;;14869:122;;-1:-1:-1;;;;;14887:5:34;;;;14924:10;14948:12;14974:7;14869:41;:122::i;13643:6199:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;14001:27:35;;;:57;;;;;14057:1;14032:15;:22;:26;14001:57;14000:139;;;-1:-1:-1;;;;;;14080:27:35;;;;;;:58;;-1:-1:-1;14111:22:35;;:27;14080:58;13979:215;;;;-1:-1:-1;;;;;13979:215:35;;17658:2:127;13979:215:35;;;17640:21:127;17697:2;17677:18;;;17670:30;17736:31;17716:18;;;17709:59;17785:18;;13979:215:35;17456:353:127;13979:215:35;14260:27;14290:119;14315:4;14333:10;14357:15;14386:13;14290:11;:119::i;:::-;14260:149;;14465:22;14490:8;14499:4;14490:14;;;;;;;;:::i;:::-;;;;;;;;;;;14465:39;;14596:1;14572:8;:21;;;:25;14564:63;;;;-1:-1:-1;;;;;14564:63:35;;18016:2:127;14564:63:35;;;17998:21:127;18055:2;18035:18;;;18028:30;18094:27;18074:18;;;18067:55;18139:18;;14564:63:35;17814:349:127;14564:63:35;14749:1;14715:5;:31;;;:35;14694:112;;;;-1:-1:-1;;;;;14694:112:35;;18370:2:127;14694:112:35;;;18352:21:127;18409:2;18389:18;;;18382:30;18448:32;18428:18;;;18421:60;18498:18;;14694:112:35;18168:354:127;14694:112:35;14880:22;;;;:27;14872:60;;;;-1:-1:-1;;;;;14872:60:35;;18729:2:127;14872:60:35;;;18711:21:127;18768:2;18748:18;;;18741:30;18807:22;18787:18;;;18780:50;18847:18;;14872:60:35;18527:344:127;14872:60:35;15038:16;15049:4;15038:10;:16::i;:::-;;15096:23;15242:8;:19;;;15196:5;:31;;;15159:5;:21;;;15123:8;:21;;;:57;;;;:::i;:::-;15122:105;;;;:::i;:::-;:139;;;;:::i;:::-;15096:165;-1:-1:-1;15337:19:35;;15333:2322;;15547:17;;15523:146;;;;;;19129:13:127;;15523:146:35;;;19111:32:127;19199:4;19187:17;;19181:24;19159:20;;;19152:54;19250:17;;;19244:24;19222:20;;;19215:54;19325:4;19313:17;;19307:24;19285:20;;;19278:54;19388:4;19376:17;;19370:24;19348:20;;;19341:54;19451:4;19439:17;;19433:24;19411:20;;;19404:54;19474:19;;;19467:35;;;15446:19:35;;;;-1:-1:-1;;;;;15547:17:35;;;;15523:61;;19083:19:127;;15523:146:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15428:241;;;;15688:19;15684:1961;;;15770:21;;;:35;;;15839:11;;15828:7;;:22;15824:777;;;16033:19;;16029:213;;16184:17;;16165:54;;-1:-1:-1;;;;;16184:17:35;16203:15;16165:18;:54::i;:::-;15684:1961;;15824:777;16475:19;;16471:112;;16522:38;16544:15;16522:21;:38::i;15684:1961::-;16725:15;;16721:108;;16764:46;16783:13;16798:11;16764:18;:46::i;:::-;16862:11;;16851:7;;:22;16847:784;;;17060:19;;17056:213;;17211:17;;17192:54;;-1:-1:-1;;;;;17211:17:35;17230:15;17192:18;:54::i;16847:784::-;17505:19;;17501:112;;17552:38;17574:15;17552:21;:38::i;:::-;15358:2297;;15333:2322;17742:12;17737:2099;;18015:26;18044:106;18082:13;18117:15;18044:16;:106::i;:::-;18015:135;;18253:18;18274:8;18283:4;18274:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;;;;;;;-1:-1:-1;;;;;18274:20:35;18253:41;;18316:13;18339:10;18316:34;;18604:22;18860:6;-1:-1:-1;;;;;18860:18:35;;:20;;;;;-1:-1:-1;;;18860:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18834:8;:23;;;:46;;;;:::i;:::-;18723:6;-1:-1:-1;;;;;18723:19:35;;:21;;;;;-1:-1:-1;;;18723:21:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18709:120;;;;;-1:-1:-1;;;;;3756:55:127;;;18709:120:35;;;3738:74:127;18709:54:35;;;;;;;3711:18:127;;18709:120:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18630:21;;:52;;18678:4;18630:52;:::i;:::-;:199;;;;:::i;:::-;18629:252;;;;:::i;:::-;18968:40;;;;;;;;481:25:127;;;18604:277:35;;-1:-1:-1;;;;;;18968:24:35;;;;;454:18:127;;18968:40:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;19193:21:35;;19139:31;;;;:75;;-1:-1:-1;19193:21:35;;-1:-1:-1;19139:75:35;:::i;:::-;19085:31;;;;:129;;;;19314:10;;19296:92;;;;;19365:4;19296:92;;;3738:74:127;;;;-1:-1:-1;;;;;19314:10:35;;19296:39;;3711:18:127;;19296:92:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19281:107;;:12;19449:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;19449:37:35;;;;;;;;;:49;;19536:15;;19449:37;19487:10;;19449:49;;;;;;:::i;:::-;;;;;;;;;;;:84;;:102;;;;17949:1617;19749:4;19716:15;19659:166;;;;;;:::i;:::-;;;;;;;;;;19799:12;;5556:25:127;;;5612:2;5597:18;;5590:34;19659:166:35;-1:-1:-1;;;;;19659:166:35;;;;;5529:18:127;19659:166:35;;;;;;;17737:2099;13896:5946;;;13643:6199;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;13032:55:127;;895:58:12;;;13014:74:127;13104:18;;;13097:34;;;868:86:12;;888:5;;918:23;;12987:18:127;;895:58:12;12840:297:127;868:86:12;745:216;;;:::o;24781:1107:35:-;25048:18;25068:25;25135:18;25156:8;25165:4;25156:14;;;;;;;;:::i;:::-;;;;;;;;:20;:14;;;;;:20;;-1:-1:-1;;;;;25156:20:35;;-1:-1:-1;25293:171:35;25316:4;25334:8;25356:15;25385:10;25409:12;25435:19;25293:9;:171::i;:::-;25262:202;;25542:120;25616:10;25640:4;:12;;;25560:8;25569:4;25560:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;25560:19:35;;25542:120;:60;:120::i;:::-;25775:12;;25719:110;;;;;;;;5556:25:127;;;;5597:18;;;5590:34;;;-1:-1:-1;;;;;25719:42:35;;;;;5529:18:127;;25719:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25706:123;;25860:4;:21;;;25840:41;;25095:793;;24781:1107;;;;;;;;;;:::o;11105:982::-;11410:17;11430:8;11439:4;11430:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;11541:106;;;;;;;;5556:25:127;;;5597:18;;;5590:34;;;-1:-1:-1;;;;;11430:20:35;;;;-1:-1:-1;11430:20:35;;11541:41;;5529:18:127;;11541:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11522:125;;11725:115;11799:9;11822:8;11743;11752:4;11743:14;;;;;;;;:::i;11725:115::-;11913:167;11935:4;11953:8;11975:15;12004:8;12026:15;12055;11913:8;:167::i;:::-;;11364:723;;11105:982;;;;;;;:::o;13118:209:34:-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;13306:14:::1;13282:21;;:38;;;;:::i;:::-;13258:21;:62:::0;-1:-1:-1;13118:209:34:o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;20471:2:127;3921:85:12;;;20453:21:127;20510:2;20490:18;;;20483:30;20549:34;20529:18;;;20522:62;20620:12;20600:18;;;20593:40;20650:19;;3921:85:12;20269:406:127;5270:686:35;5494:8;-1:-1:-1;;;;;5574:22:35;;5570:380;;5710:1;5685:15;:22;:26;5660:129;;;;-1:-1:-1;;;;;5660:129:35;;20882:2:127;5660:129:35;;;20864:21:127;20921:2;20901:18;;;20894:30;20960:34;20940:18;;;20933:62;21031:14;21011:18;;;21004:42;21063:19;;5660:129:35;20680:408:127;5660:129:35;5914:24;5922:15;5914:24;:::i;:::-;5906:33;;;;5270:686;-1:-1:-1;;;5270:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;21716:34:127;-1:-1:-1;;;;;21786:15:127;;;21766:18;;;21759:43;2236:20:12;;2301:5;;2259:15;;;;;21628:18:127;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;13032:55:127;;2343:69:12;;;13014:74:127;13104:18;;;13097:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;12987:18:127;;2343:69:12;12840:297:127;6394:1321:35;6699:20;6722:8;6731:4;6722:14;;;;;;;;:::i;:::-;;;;;;;;;6699:37;;;;;;;;;6722:14;;;;;;;6699:37;;-1:-1:-1;;;;;6699:37:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6812:486;;;;;;;;;;;;;;;;7045:30;6984:20;;6699:37;;-1:-1:-1;6812:486:35;;;7045:30;6984:41;;6852:18;;6984:41;:::i;:::-;6983:92;;;;:::i;:::-;6812:486;;;;;;;;;;;;;;;;-1:-1:-1;6812:486:35;;;;;;;7362:17;;;:11;:17;;;;;-1:-1:-1;;;;;7362:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7529:22;;6778:520;;-1:-1:-1;7529:26:35;7525:184;;7685:13;7571:18;:24;7590:4;7571:24;;;;;;;;;;;7596:15;7571:41;;;;;;:::i;:::-;;;;;;;;;;;;;:111;7667:1;7630:34;7644:4;7650:13;7630;:34::i;:::-;:38;;;;:::i;:::-;7571:111;;;;;;;;;;;;:127;;;;;-1:-1:-1;;;;;7571:127:35;;;;;-1:-1:-1;;;;;7571:127:35;;;;;;7525:184;6669:1046;;6394:1321;;;;;;;:::o;20335:605::-;20504:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20504:27:35;-1:-1:-1;;;;;20547:27:35;;;20543:391;;20636:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;20636:32:35;;;;;;;;;:44;;20669:10;;20636:44;;;;;;:::i;:::-;;;;;;;;;;;20625:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20543:391;;;20749:20;20772:24;;;:18;:24;;;;;;:41;;;;20797:15;;20772:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;20880:17;;;:11;:17;;;;;-1:-1:-1;;;;;20772:83:35;;;20880:31;;;;;;:43;;20772:83;;-1:-1:-1;20880:31:35;20772:83;;20880:43;;;;;;:::i;:::-;;;;;;;;;;;20869:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20697:237;20543:391;20335:605;;;;;;:::o;15239:333:34:-;15393:5;;15375:49;;;;;15418:4;15375:49;;;3738:74:127;15337:9:34;;15318:16;;-1:-1:-1;;;;;15393:5:34;;;;15375:34;;3711:18:127;;15375:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15356:68;;15450:8;15438:9;:20;15434:70;;;15485:8;15474:19;;15434:70;15531:5;;15513:52;;-1:-1:-1;;;;;15531:5:34;15551:3;15556:8;15513:37;:52::i;13986:214::-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;14178:15:::1;14153:22;;:40;;;;:::i;:::-;14128:22;:65:::0;-1:-1:-1;13986:214:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;22015:2:127;5148:81:13;;;21997:21:127;22054:2;22034:18;;;22027:30;22093:34;22073:18;;;22066:62;22164:8;22144:18;;;22137:36;22190:19;;5148:81:13;21813:402:127;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;22422:2:127;5239:60:13;;;22404:21:127;22461:2;22441:18;;;22434:30;22500:31;22480:18;;;22473:59;22549:18;;5239:60:13;22220:353:127;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:316:127:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:127;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:127;305:18;;;292:32;;14:316;-1:-1:-1;14:316:127:o;517:154::-;-1:-1:-1;;;;;596:5:127;592:54;585:5;582:65;572:93;;661:1;658;651:12;676:388;744:6;752;805:2;793:9;784:7;780:23;776:32;773:52;;;821:1;818;811:12;773:52;860:9;847:23;879:31;904:5;879:31;:::i;:::-;929:5;-1:-1:-1;986:2:127;971:18;;958:32;999:33;958:32;999:33;:::i;:::-;1051:7;1041:17;;;676:388;;;;;:::o;1069:180::-;1128:6;1181:2;1169:9;1160:7;1156:23;1152:32;1149:52;;;1197:1;1194;1187:12;1149:52;-1:-1:-1;1220:23:127;;1069:180;-1:-1:-1;1069:180:127:o;1899:315::-;1967:6;1975;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2080:9;2067:23;2057:33;;2140:2;2129:9;2125:18;2112:32;2153:31;2178:5;2153:31;:::i;2219:184::-;-1:-1:-1;;;;;2268:1:127;2261:88;2368:4;2365:1;2358:15;2392:4;2389:1;2382:15;2408:718;2450:5;2503:3;2496:4;2488:6;2484:17;2480:27;2470:55;;2521:1;2518;2511:12;2470:55;2557:6;2544:20;2583:18;2620:2;2616;2613:10;2610:36;;;2626:18;;:::i;:::-;2701:2;2695:9;2669:2;2755:13;;-1:-1:-1;;2751:22:127;;;2775:2;2747:31;2743:40;2731:53;;;2799:18;;;2819:22;;;2796:46;2793:72;;;2845:18;;:::i;:::-;2885:10;2881:2;2874:22;2920:2;2912:6;2905:18;2966:3;2959:4;2954:2;2946:6;2942:15;2938:26;2935:35;2932:55;;;2983:1;2980;2973:12;2932:55;3047:2;3040:4;3032:6;3028:17;3021:4;3013:6;3009:17;2996:54;3094:1;3087:4;3082:2;3074:6;3070:15;3066:26;3059:37;3114:6;3105:15;;;;;;2408:718;;;;:::o;3131:456::-;3217:6;3225;3233;3286:2;3274:9;3265:7;3261:23;3257:32;3254:52;;;3302:1;3299;3292:12;3254:52;3338:9;3325:23;3315:33;;3399:2;3388:9;3384:18;3371:32;3426:18;3418:6;3415:30;3412:50;;;3458:1;3455;3448:12;3412:50;3481:49;3522:7;3513:6;3502:9;3498:22;3481:49;:::i;:::-;3471:59;;;3577:2;3566:9;3562:18;3549:32;3539:42;;3131:456;;;;;:::o;3823:118::-;3909:5;3902:13;3895:21;3888:5;3885:32;3875:60;;3931:1;3928;3921:12;3946:377;4020:6;4028;4036;4089:2;4077:9;4068:7;4064:23;4060:32;4057:52;;;4105:1;4102;4095:12;4057:52;4141:9;4128:23;4118:33;;4198:2;4187:9;4183:18;4170:32;4160:42;;4252:2;4241:9;4237:18;4224:32;4265:28;4287:5;4265:28;:::i;:::-;4312:5;4302:15;;;3946:377;;;;;:::o;4328:247::-;4387:6;4440:2;4428:9;4419:7;4415:23;4411:32;4408:52;;;4456:1;4453;4446:12;4408:52;4495:9;4482:23;4514:31;4539:5;4514:31;:::i;4580:797::-;4690:6;4698;4706;4714;4722;4730;4783:3;4771:9;4762:7;4758:23;4754:33;4751:53;;;4800:1;4797;4790:12;4751:53;4839:9;4826:23;4858:31;4883:5;4858:31;:::i;:::-;4908:5;-1:-1:-1;4964:2:127;4949:18;;4936:32;4991:18;4980:30;;4977:50;;;5023:1;5020;5013:12;4977:50;5046:49;5087:7;5078:6;5067:9;5063:22;5046:49;:::i;:::-;5036:59;;;5142:2;5131:9;5127:18;5114:32;5104:42;;5193:2;5182:9;5178:18;5165:32;5155:42;;5249:3;5238:9;5234:19;5221:33;5263:30;5285:7;5263:30;:::i;:::-;5312:7;5302:17;;;5366:3;5355:9;5351:19;5338:33;5328:43;;4580:797;;;;;;;;:::o;5635:385::-;5721:6;5729;5737;5745;5798:3;5786:9;5777:7;5773:23;5769:33;5766:53;;;5815:1;5812;5805:12;5766:53;-1:-1:-1;;5838:23:127;;;5908:2;5893:18;;5880:32;;-1:-1:-1;5959:2:127;5944:18;;5931:32;;6010:2;5995:18;5982:32;;-1:-1:-1;5635:385:127;-1:-1:-1;5635:385:127:o;6025:383::-;6102:6;6110;6118;6171:2;6159:9;6150:7;6146:23;6142:32;6139:52;;;6187:1;6184;6177:12;6139:52;6223:9;6210:23;6200:33;;6280:2;6269:9;6265:18;6252:32;6242:42;;6334:2;6323:9;6319:18;6306:32;6347:31;6372:5;6347:31;:::i;6413:454::-;6508:6;6516;6524;6532;6540;6593:3;6581:9;6572:7;6568:23;6564:33;6561:53;;;6610:1;6607;6600:12;6561:53;-1:-1:-1;;6633:23:127;;;6703:2;6688:18;;6675:32;;-1:-1:-1;6754:2:127;6739:18;;6726:32;;6805:2;6790:18;;6777:32;;-1:-1:-1;6856:3:127;6841:19;6828:33;;-1:-1:-1;6413:454:127;-1:-1:-1;6413:454:127:o;6872:241::-;6928:6;6981:2;6969:9;6960:7;6956:23;6952:32;6949:52;;;6997:1;6994;6987:12;6949:52;7036:9;7023:23;7055:28;7077:5;7055:28;:::i;7118:446::-;7201:6;7209;7217;7225;7278:3;7266:9;7257:7;7253:23;7249:33;7246:53;;;7295:1;7292;7285:12;7246:53;7331:9;7318:23;7308:33;;7388:2;7377:9;7373:18;7360:32;7350:42;;7442:2;7431:9;7427:18;7414:32;7455:28;7477:5;7455:28;:::i;:::-;7118:446;;;;-1:-1:-1;7502:5:127;;7554:2;7539:18;7526:32;;-1:-1:-1;;7118:446:127:o;7761:383::-;7838:6;7846;7854;7907:2;7895:9;7886:7;7882:23;7878:32;7875:52;;;7923:1;7920;7913:12;7875:52;7959:9;7946:23;7936:33;;8019:2;8008:9;8004:18;7991:32;8032:31;8057:5;8032:31;:::i;:::-;7761:383;;8082:5;;-1:-1:-1;;;8134:2:127;8119:18;;;;8106:32;;7761:383::o;8689:248::-;8757:6;8765;8818:2;8806:9;8797:7;8793:23;8789:32;8786:52;;;8834:1;8831;8824:12;8786:52;-1:-1:-1;;8857:23:127;;;8927:2;8912:18;;;8899:32;;-1:-1:-1;8689:248:127:o;8942:315::-;9010:6;9018;9071:2;9059:9;9050:7;9046:23;9042:32;9039:52;;;9087:1;9084;9077:12;9039:52;9126:9;9113:23;9145:31;9170:5;9145:31;:::i;:::-;9195:5;9247:2;9232:18;;;;9219:32;;-1:-1:-1;;;8942:315:127:o;9262:799::-;9384:6;9392;9400;9408;9416;9424;9432;9485:3;9473:9;9464:7;9460:23;9456:33;9453:53;;;9502:1;9499;9492:12;9453:53;9538:9;9525:23;9515:33;;9598:2;9587:9;9583:18;9570:32;9611:31;9636:5;9611:31;:::i;:::-;9661:5;-1:-1:-1;9717:2:127;9702:18;;9689:32;9744:18;9733:30;;9730:50;;;9776:1;9773;9766:12;9730:50;9799:49;9840:7;9831:6;9820:9;9816:22;9799:49;:::i;:::-;9262:799;;;;-1:-1:-1;9789:59:127;;9895:2;9880:18;;9867:32;;-1:-1:-1;9946:3:127;9931:19;;9918:33;;9998:3;9983:19;;9970:33;;-1:-1:-1;10050:3:127;10035:19;;;10022:33;;-1:-1:-1;9262:799:127;-1:-1:-1;;;9262:799:127:o;10066:821::-;10179:6;10187;10195;10203;10211;10264:3;10252:9;10243:7;10239:23;10235:33;10232:53;;;10281:1;10278;10271:12;10232:53;10317:9;10304:23;10294:33;;10378:2;10367:9;10363:18;10350:32;10401:18;10442:2;10434:6;10431:14;10428:34;;;10458:1;10455;10448:12;10428:34;10496:6;10485:9;10481:22;10471:32;;10541:7;10534:4;10530:2;10526:13;10522:27;10512:55;;10563:1;10560;10553:12;10512:55;10603:2;10590:16;10629:2;10621:6;10618:14;10615:34;;;10645:1;10642;10635:12;10615:34;10699:7;10694:2;10688;10680:6;10676:15;10672:2;10668:24;10664:33;10661:46;10658:66;;;10720:1;10717;10710:12;10658:66;10066:821;;10751:2;10743:11;;;;;-1:-1:-1;10773:6:127;;10826:2;10811:18;;10798:32;;-1:-1:-1;10877:2:127;10862:18;10849:32;;-1:-1:-1;10066:821:127;-1:-1:-1;;;10066:821:127:o;10892:355::-;11094:2;11076:21;;;11133:2;11113:18;;;11106:30;11172:33;11167:2;11152:18;;11145:61;11238:2;11223:18;;10892:355::o;11252:184::-;-1:-1:-1;;;;;11301:1:127;11294:88;11401:4;11398:1;11391:15;11425:4;11422:1;11415:15;11441:341;11643:2;11625:21;;;11682:2;11662:18;;;11655:30;11721:19;11716:2;11701:18;;11694:47;11773:2;11758:18;;11441:341::o;11787:347::-;11989:2;11971:21;;;12028:2;12008:18;;;12001:30;12067:25;12062:2;12047:18;;12040:53;12125:2;12110:18;;11787:347::o;12139:356::-;12341:2;12323:21;;;12360:18;;;12353:30;12419:34;12414:2;12399:18;;12392:62;12486:2;12471:18;;12139:356::o;12500:335::-;12702:2;12684:21;;;12741:2;12721:18;;;12714:30;12780:13;12775:2;12760:18;;12753:41;12826:2;12811:18;;12500:335::o;13142:339::-;13344:2;13326:21;;;13383:2;13363:18;;;13356:30;13422:17;13417:2;13402:18;;13395:45;13472:2;13457:18;;13142:339::o;13486:184::-;13556:6;13609:2;13597:9;13588:7;13584:23;13580:32;13577:52;;;13625:1;13622;13615:12;13577:52;-1:-1:-1;13648:16:127;;13486:184;-1:-1:-1;13486:184:127:o;13675:::-;-1:-1:-1;;;;;13724:1:127;13717:88;13824:4;13821:1;13814:15;13848:4;13845:1;13838:15;13864:125;13904:4;13932:1;13929;13926:8;13923:34;;;13937:18;;:::i;:::-;-1:-1:-1;13974:9:127;;13864:125::o;13994:168::-;14034:7;14100:1;14096;14092:6;14088:14;14085:1;14082:21;14077:1;14070:9;14063:17;14059:45;14056:71;;;14107:18;;:::i;:::-;-1:-1:-1;14147:9:127;;13994:168::o;14167:274::-;14207:1;14233;14223:189;;-1:-1:-1;;;;;14265:1:127;14258:88;14369:4;14366:1;14359:15;14397:4;14394:1;14387:15;14223:189;-1:-1:-1;14426:9:127;;14167:274::o;14446:128::-;14486:3;14517:1;14513:6;14510:1;14507:13;14504:39;;;14523:18;;:::i;:::-;-1:-1:-1;14559:9:127;;14446:128::o;14579:135::-;14618:3;-1:-1:-1;;14639:17:127;;14636:43;;;14659:18;;:::i;:::-;-1:-1:-1;14706:1:127;14695:13;;14579:135::o;16914:258::-;16986:1;16996:113;17010:6;17007:1;17004:13;16996:113;;;17086:11;;;17080:18;17067:11;;;17060:39;17032:2;17025:10;16996:113;;;17127:6;17124:1;17121:13;17118:48;;;-1:-1:-1;;17162:1:127;17144:16;;17137:27;16914:258::o;17177:274::-;17306:3;17344:6;17338:13;17360:53;17406:6;17401:3;17394:4;17386:6;17382:17;17360:53;:::i;:::-;17429:16;;;;;17177:274;-1:-1:-1;;17177:274:127:o;19513:245::-;19592:6;19600;19653:2;19641:9;19632:7;19628:23;19624:32;19621:52;;;19669:1;19666;19659:12;19621:52;-1:-1:-1;;19692:16:127;;19748:2;19733:18;;;19727:25;19692:16;;19727:25;;-1:-1:-1;19513:245:127:o;19763:251::-;19833:6;19886:2;19874:9;19865:7;19861:23;19857:32;19854:52;;;19902:1;19899;19892:12;19854:52;19934:9;19928:16;19953:31;19978:5;19953:31;:::i;20019:245::-;20086:6;20139:2;20127:9;20118:7;20114:23;20110:32;20107:52;;;20155:1;20152;20145:12;20107:52;20187:9;20181:16;20206:28;20228:5;20206:28;:::i;21093:383::-;21211:12;;21259:4;21248:16;;21242:23;-1:-1:-1;;21333:11:127;;;;21211:12;21242:23;21367:2;21356:14;;21353:117;;;21457:2;21444:6;21440:2;21436:15;21433:1;21429:23;21426:1;21422:31;21418:2;21414:40;21410:2;21406:49;21402:58;21393:67;;21353:117;;;;21093:383;;;:::o;22578:::-;22727:2;22716:9;22709:21;22690:4;22759:6;22753:13;22802:6;22797:2;22786:9;22782:18;22775:34;22818:66;22877:6;22872:2;22861:9;22857:18;22852:2;22844:6;22840:15;22818:66;:::i;:::-;22945:2;22924:15;-1:-1:-1;;22920:29:127;22905:45;;;;22952:2;22901:54;;22578:383;-1:-1:-1;;22578:383:127:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/Zorro/Vaults/IVault.sol\";\n\nimport \"../interfaces/Zorro/Vaults/Actions/IVaultActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _pid index of pool\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _pid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(pool.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _pid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _pid index of pool\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updatePool(_pid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(pool.want).safeIncreaseAllowance(\n            pool.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(poolInfo[_pid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = IZorroControllerActions(controllerActions)\n            .getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = IZorroControllerActions(controllerActions)\n            .getUserContribution(sharesAdded, _timeMultiplier);\n\n        // Update pool info: Increment the pool's total contributions by the contribution added\n        pool.totalTrancheContributions += _contributionAdded;\n\n        // Create tranche\n        _createTranche(\n            _pid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _pid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _pid Index of pool\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get pool\n        PoolInfo memory pool = poolInfo[_pid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: (pool.accZORRORewards * _contributionAdded) /\n                pool.totalTrancheContributions, // Pro-rata share of accumulated pool rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_pid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_pid][_foreignAccount][\n                trancheLength(_pid, _localAccount) - 1\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _pid index of pool to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _pid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _pid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _pid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _pid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _pid index of pool\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _pid index of pool\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _pid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get pool and current tranche info\n        PoolInfo storage _pool = poolInfo[_pid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _pool.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        updatePool(_pid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (_tranche.contribution *\n            _pool.accZORRORewards) /\n            _pool.totalTrancheContributions -\n            _tranche.rewardDebt;\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = IZorroControllerActions(controllerActions).getAdjustedRewards(\n                    _tranche,\n                    _pendingRewards\n                );\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Separate block to make stack shallow\n            {\n                // Get local (on-chain) account\n                address _resolvedLocalAcct = _getLocalAccount(\n                    _localAccount,\n                    _foreignAccount\n                );\n\n                // Sub block\n                {\n                    // Get vault\n                    address _vaultAddr = poolInfo[_pid].vault;\n                    IVault _vault = IVault(_vaultAddr);\n\n                    // Get staked want tokens\n                    // TODO: Need to call updateSupply() first, or else the currentWantEquity could be out of date\n                    // OR: Do it based on number of shares. Why not? \n                    uint256 _stakedWantAmt = (_tranche.contribution *\n                        1e12 *\n                        IVaultActions(_vault.vaultActions()).currentWantEquity(\n                            _vaultAddr\n                        )) / (_tranche.timeMultiplier * _vault.sharesTotal());\n\n                    // Withdraw the want token for this account\n                    _vault.withdrawWantToken(_stakedWantAmt);\n                }\n\n                // Update shares safely\n                _pool.totalTrancheContributions =\n                    _pool.totalTrancheContributions -\n                    _tranche.contribution;\n\n                // Calculate Want token balance\n                _res.wantAmt = IERC20Upgradeable(_pool.want).balanceOf(\n                    address(this)\n                );\n\n                // Mark tranche as exited\n                trancheInfo[_pid][_resolvedLocalAcct][_trancheId]\n                    .exitedVaultAt = block.timestamp;\n            }\n            \n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _pid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _pid Pool ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _pid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_pid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_pid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_pid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a pool and converts the Want token into USD\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a pool and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = poolInfo[_pid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromPid index of pool FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toPid index of pool TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromPid,\n        uint256 _fromTrancheId,\n        uint256 _toPid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromPid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            poolInfo[_toPid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toPid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromPid, _fromTrancheId, _toPid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a pool\n    /// @param _pid index of pool\n    function withdrawAll(uint256 _pid) public nonReentrant {\n        // Iterate through all tranches for the current user and pool and withdraw\n        uint256 numTranches = trancheLength(_pid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_pid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(poolInfo[_pid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted - _totalSlashed\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        16207
      ],
      "IAMMRouter01": [
        14085
      ],
      "IAMMRouter02": [
        14173
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        16006
      ],
      "IVaultActions": [
        15546
      ],
      "IZorro": [
        15358
      ],
      "IZorroController": [
        15101
      ],
      "IZorroControllerActions": [
        14512
      ],
      "IZorroControllerAnalytics": [
        14900
      ],
      "IZorroControllerBase": [
        14874
      ],
      "IZorroControllerInvestment": [
        15061
      ],
      "IZorroControllerPoolMgmt": [
        15091
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapUni": [
        16458
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10147
      ],
      "ZorroControllerBase": [
        7040
      ],
      "ZorroControllerInvestment": [
        8305
      ]
    },
    "id": 8306,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7042,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 2885,
        "src": "58:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 7041,
        "src": "148:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/IVault.sol",
        "file": "../interfaces/Zorro/Vaults/IVault.sol",
        "id": 7045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 16007,
        "src": "186:47:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "file": "../interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "id": 7046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15547,
        "src": "235:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "file": "../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "id": 7047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 14513,
        "src": "299:77:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol",
        "file": "../interfaces/Zorro/Controllers/IZorroController.sol",
        "id": 7048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15102,
        "src": "378:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 10148,
        "src": "442:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7050,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15061,
              "src": "532:26:35"
            },
            "id": 7051,
            "nodeType": "InheritanceSpecifier",
            "src": "532:26:35"
          },
          {
            "baseName": {
              "id": 7052,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7040,
              "src": "564:19:35"
            },
            "id": 7053,
            "nodeType": "InheritanceSpecifier",
            "src": "564:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8305,
        "linearizedBaseContracts": [
          8305,
          7040,
          1944,
          571,
          3169,
          1774,
          15061,
          14874
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "499:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7057,
            "libraryName": {
              "id": 7054,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "617:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "611:49:35",
            "typeName": {
              "id": 7056,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7055,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "642:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "642:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7059,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "710:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "698:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7058,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "698:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7061,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "814:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "799:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7060,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7073,
              "nodeType": "Block",
              "src": "999:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7065,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "1017:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1017:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7067,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7061,
                          "src": "1033:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1017:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1054:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1009:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7071,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:59:35"
                },
                {
                  "id": 7072,
                  "nodeType": "PlaceholderStatement",
                  "src": "1078:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7062,
              "nodeType": "StructuredDocumentation",
              "src": "896:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7074,
            "name": "onlyZorroXChain",
            "nameLocation": "981:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:35"
            },
            "src": "972:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14945
            ],
            "body": {
              "id": 7086,
              "nodeType": "Block",
              "src": "1314:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7082,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7059,
                      "src": "1324:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7083,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7077,
                      "src": "1349:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1324:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7085,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7075,
              "nodeType": "StructuredDocumentation",
              "src": "1111:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7087,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7079,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1304:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1304:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "1253:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7077,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "1284:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7087,
                  "src": "1279:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:16:35"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:35"
            },
            "scope": 8305,
            "src": "1244:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14950
            ],
            "body": {
              "id": 7099,
              "nodeType": "Block",
              "src": "1540:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7095,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7061,
                      "src": "1550:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7096,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7090,
                      "src": "1572:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1550:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7098,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7088,
              "nodeType": "StructuredDocumentation",
              "src": "1371:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7092,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1530:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1530:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "1479:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7090,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1510:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7100,
                  "src": "1502:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:19:35"
            },
            "returnParameters": {
              "id": 7094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:35"
            },
            "scope": 8305,
            "src": "1470:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14959
            ],
            "body": {
              "id": 7144,
              "nodeType": "Block",
              "src": "1970:494:35",
              "statements": [
                {
                  "assignments": [
                    7114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7114,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "2022:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7144,
                      "src": "2005:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7113,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7112,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "2005:8:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "2005:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7118,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7115,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "2029:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7117,
                    "indexExpression": {
                      "id": 7116,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7103,
                      "src": "2038:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2029:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2005:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2183:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2183:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2215:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2207:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2207:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2207:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7130,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "2234:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7120,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7114,
                              "src": "2142:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "2142:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7119,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2124:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2124:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "2124:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2124:128:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7132,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:128:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7134,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7103,
                        "src": "2323:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2341:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2341:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2365:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7138,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "2381:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7139,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7107,
                        "src": "2403:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7140,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2432:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2432:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7133,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7256,
                      "src": "2301:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7143,
                  "nodeType": "ExpressionStatement",
                  "src": "2301:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7101,
              "nodeType": "StructuredDocumentation",
              "src": "1615:226:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _pid index of pool\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7145,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7109,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "1957:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1957:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "1855:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7103,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1880:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1872:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7105,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "1902:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1894:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7107,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "1928:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1920:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1862:87:35"
            },
            "returnParameters": {
              "id": 7111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1970:0:35"
            },
            "scope": 8305,
            "src": "1846:618:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7255,
              "nodeType": "Block",
              "src": "3492:1772:35",
              "statements": [
                {
                  "assignments": [
                    7165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7165,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3544:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "3527:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7163,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "3527:8:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "3527:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7166,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "3551:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7168,
                    "indexExpression": {
                      "id": 7167,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7148,
                      "src": "3560:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3551:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3527:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7171,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7154,
                          "src": "3612:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3623:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3612:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3626:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3604:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7176,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:46:35"
                },
                {
                  "expression": {
                    "id": 7181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7177,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7161,
                      "src": "3756:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7179,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7148,
                          "src": "3787:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7178,
                        "name": "updatePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6888,
                        "src": "3776:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3776:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3756:36:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7182,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:36:35"
                },
                {
                  "assignments": [
                    7184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7184,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "3861:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "3853:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3853:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7186,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "3894:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7187,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "3904:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7185,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7296,
                      "src": "3877:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3877:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3853:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7195,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7165,
                          "src": "4016:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14769,
                        "src": "4016:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7197,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "4040:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7191,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7165,
                              "src": "3970:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7192,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "3970:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7190,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3952:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "3952:50:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3952:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7199,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:106:35"
                },
                {
                  "assignments": [
                    7201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7201,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "4193:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4185:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4185:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7209,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "4266:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7203,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "4214:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7205,
                              "indexExpression": {
                                "id": 7204,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7148,
                                "src": "4223:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4214:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14769,
                            "src": "4214:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7202,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16006,
                          "src": "4207:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$16006_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4207:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$16006",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15966,
                      "src": "4207:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4207:77:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4185:99:35"
                },
                {
                  "assignments": [
                    7213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7213,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "4347:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4339:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4339:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7218,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "4439:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7219,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7059,
                        "src": "4456:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7215,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4389:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7214,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14512,
                          "src": "4365:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4365:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14502,
                      "src": "4365:73:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4365:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4339:140:35"
                },
                {
                  "assignments": [
                    7223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7223,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "4617:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4609:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4609:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7231,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7228,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "4714:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7229,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7213,
                        "src": "4727:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7225,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4662:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7224,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14512,
                          "src": "4638:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4638:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14511,
                      "src": "4638:75:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4638:105:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4609:134:35"
                },
                {
                  "expression": {
                    "id": 7236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7232,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7165,
                        "src": "4850:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 7234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14767,
                      "src": "4850:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 7235,
                      "name": "_contributionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7223,
                      "src": "4884:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4850:52:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7237,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:52:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7239,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "4967:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7184,
                        "src": "4985:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "5012:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7242,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7223,
                        "src": "5041:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7243,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7213,
                        "src": "5073:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7244,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "5102:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7245,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "5131:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7238,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7371,
                      "src": "4939:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7247,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7249,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7184,
                        "src": "5210:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7250,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "5225:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7251,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "5242:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7252,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "5248:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7248,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14918,
                      "src": "5202:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5202:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7254,
                  "nodeType": "EmitStatement",
                  "src": "5197:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7146,
              "nodeType": "StructuredDocumentation",
              "src": "2470:770:35",
              "text": "@notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _pid index of pool\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3254:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7148,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3280:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3272:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3302:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3294:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "3333:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3320:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7154,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3366:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3358:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7156,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "3392:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3384:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7158,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "3425:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3417:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3262:184:35"
            },
            "returnParameters": {
              "id": 7162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7161,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "3473:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3465:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3465:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3464:27:35"
            },
            "scope": 8305,
            "src": "3245:2019:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7295,
              "nodeType": "Block",
              "src": "5416:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7265,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7263,
                      "src": "5479:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7266,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "5494:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5479:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7268,
                  "nodeType": "ExpressionStatement",
                  "src": "5479:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7269,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "5574:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5594:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5586:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5586:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5586:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5574:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7294,
                  "nodeType": "IfStatement",
                  "src": "5570:380:35",
                  "trueBody": {
                    "id": 7293,
                    "nodeType": "Block",
                    "src": "5598:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7276,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7260,
                                  "src": "5685:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5685:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5710:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5685:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5729:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7275,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5660:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5660:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7282,
                        "nodeType": "ExpressionStatement",
                        "src": "5660:129:35"
                      },
                      {
                        "expression": {
                          "id": 7291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7283,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7263,
                            "src": "5891:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7288,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7260,
                                    "src": "5922:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5914:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7286,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5914:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5914:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5906:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7284,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5906:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5906:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5891:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7292,
                        "nodeType": "ExpressionStatement",
                        "src": "5891:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "5279:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7258,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5304:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5296:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7260,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "5327:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5314:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7259,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5295:48:35"
            },
            "returnParameters": {
              "id": 7264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7263,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "5398:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5390:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5390:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5389:22:35"
            },
            "scope": 8305,
            "src": "5270:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7370,
              "nodeType": "Block",
              "src": "6669:1046:35",
              "statements": [
                {
                  "assignments": [
                    7316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7316,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6715:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7370,
                      "src": "6699:20:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_memory_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7314,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "6699:8:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "6699:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7320,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7317,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "6722:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7319,
                    "indexExpression": {
                      "id": 7318,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7299,
                      "src": "6731:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6722:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6699:37:35"
                },
                {
                  "assignments": [
                    7323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7323,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "6797:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7370,
                      "src": "6778:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7321,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14756,
                          "src": "6778:11:35"
                        },
                        "referencedDeclaration": 14756,
                        "src": "6778:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7339,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7325,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7305,
                        "src": "6852:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7326,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7307,
                        "src": "6942:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7327,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7316,
                                  "src": "6984:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$14770_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo memory"
                                  }
                                },
                                "id": 7328,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14765,
                                "src": "6984:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 7329,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7305,
                                "src": "7007:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6984:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 7331,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6983:43:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 7332,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7316,
                            "src": "7045:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$14770_memory_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo memory"
                            }
                          },
                          "id": 7333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14767,
                          "src": "7045:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6983:92:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7335,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7309,
                        "src": "7187:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7336,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7311,
                        "src": "7242:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7286:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7324,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14756,
                      "src": "6812:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$14756_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6812:486:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6778:520:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7346,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7323,
                        "src": "7400:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7340,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "7362:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7343,
                          "indexExpression": {
                            "id": 7341,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7299,
                            "src": "7374:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7362:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7344,
                        "indexExpression": {
                          "id": 7342,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7301,
                          "src": "7380:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7362:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7362:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$14756_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7362:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7348,
                  "nodeType": "ExpressionStatement",
                  "src": "7362:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7349,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7303,
                        "src": "7529:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7529:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7554:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7529:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7369,
                  "nodeType": "IfStatement",
                  "src": "7525:184:35",
                  "trueBody": {
                    "id": 7368,
                    "nodeType": "Block",
                    "src": "7557:152:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7353,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6488,
                                  "src": "7571:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7362,
                                "indexExpression": {
                                  "id": 7354,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7299,
                                  "src": "7590:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7571:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7363,
                              "indexExpression": {
                                "id": 7355,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7303,
                                "src": "7596:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7571:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7364,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7357,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7299,
                                    "src": "7644:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 7358,
                                    "name": "_localAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7301,
                                    "src": "7650:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7356,
                                  "name": "trancheLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "7630:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address) view returns (uint256)"
                                  }
                                },
                                "id": 7359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7630:34:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7667:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7630:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7571:111:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7365,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7301,
                            "src": "7685:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7571:127:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7367,
                        "nodeType": "ExpressionStatement",
                        "src": "7571:127:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7297,
              "nodeType": "StructuredDocumentation",
              "src": "5962:427:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _pid Index of pool\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "6403:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7299,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "6435:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6427:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6427:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7301,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "6457:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6449:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6449:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7303,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6493:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6480:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7302,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7305,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "6526:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6518:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6518:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7307,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "6562:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6554:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "6595:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6587:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6587:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7311,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6638:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6630:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6630:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6417:242:35"
            },
            "returnParameters": {
              "id": 7313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6669:0:35"
            },
            "scope": 8305,
            "src": "6394:1321:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14970
            ],
            "body": {
              "id": 7414,
              "nodeType": "Block",
              "src": "8369:524:35",
              "statements": [
                {
                  "assignments": [
                    7386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7386,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "8423:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7414,
                      "src": "8415:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8415:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7391,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7387,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "8435:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7389,
                      "indexExpression": {
                        "id": 7388,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "8444:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8435:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7390,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "8435:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8415:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8576:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8576:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7398,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7386,
                        "src": "8600:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7399,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8623:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7393,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "8527:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7392,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "8509:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8509:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "8509:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8509:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7401,
                  "nodeType": "ExpressionStatement",
                  "src": "8509:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7403,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "8719:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7404,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8737:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8737:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8761:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7407,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8777:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7408,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7378,
                        "src": "8800:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7409,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8829:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8829:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7411,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7380,
                        "src": "8858:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7402,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "8686:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8686:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7413,
                  "nodeType": "ExpressionStatement",
                  "src": "8686:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7372,
              "nodeType": "StructuredDocumentation",
              "src": "7721:471:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _pid index of pool to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7415,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7382,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8356:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8356:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "8206:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8242:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8234:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8234:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "8264:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8256:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8256:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7378,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "8291:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8283:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8283:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7380,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "8324:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8316:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8316:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8224:124:35"
            },
            "returnParameters": {
              "id": 7384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8369:0:35"
            },
            "scope": 8305,
            "src": "8197:696:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14987
            ],
            "body": {
              "id": 7462,
              "nodeType": "Block",
              "src": "9856:544:35",
              "statements": [
                {
                  "assignments": [
                    7436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7436,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "9910:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7462,
                      "src": "9902:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7435,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9902:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7441,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7437,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "9922:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7439,
                      "indexExpression": {
                        "id": 7438,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7418,
                        "src": "9931:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9922:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7440,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "9922:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9902:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10063:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10063:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7448,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7436,
                        "src": "10087:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7449,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7424,
                        "src": "10110:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7443,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "10014:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7442,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "9996:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9996:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "9996:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9996:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7451,
                  "nodeType": "ExpressionStatement",
                  "src": "9996:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7453,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7418,
                        "src": "10215:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7454,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7420,
                        "src": "10233:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7455,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7422,
                        "src": "10255:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7456,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7424,
                        "src": "10284:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7457,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7426,
                        "src": "10307:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7458,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7428,
                        "src": "10336:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7459,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7430,
                        "src": "10365:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7452,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "10182:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10182:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7461,
                  "nodeType": "ExpressionStatement",
                  "src": "10182:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7416,
              "nodeType": "StructuredDocumentation",
              "src": "8899:670:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7432,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "9840:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "9840:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "9583:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7418,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9629:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9621:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9621:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7420,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9651:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9643:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9643:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7422,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9682:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9669:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7421,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9669:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7424,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "9715:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9707:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "9742:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9734:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "9775:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9767:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9767:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7430,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "9808:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9800:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9800:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9611:221:35"
            },
            "returnParameters": {
              "id": 7434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9856:0:35"
            },
            "scope": 8305,
            "src": "9574:826:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7518,
              "nodeType": "Block",
              "src": "11364:723:35",
              "statements": [
                {
                  "assignments": [
                    7482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7482,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11418:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7518,
                      "src": "11410:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11410:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7487,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7483,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "11430:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7485,
                      "indexExpression": {
                        "id": 7484,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "11439:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11430:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7486,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "11430:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11410:40:35"
                },
                {
                  "assignments": [
                    7489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7489,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "11530:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7518,
                      "src": "11522:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11522:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7494,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7472,
                        "src": "11596:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7495,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7478,
                        "src": "11619:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7491,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7482,
                            "src": "11548:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7490,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16006,
                          "src": "11541:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$16006_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11541:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$16006",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15959,
                      "src": "11541:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11541:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11522:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7505,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "11799:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7506,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7489,
                        "src": "11822:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7499,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "11743:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7501,
                              "indexExpression": {
                                "id": 7500,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7466,
                                "src": "11752:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11743:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "11743:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7498,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11725:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11725:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11725:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11725:115:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7508,
                  "nodeType": "ExpressionStatement",
                  "src": "11725:115:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7510,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "11935:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7511,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "11953:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7512,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7470,
                        "src": "11975:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7513,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7489,
                        "src": "12004:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7514,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "12026:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7515,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7476,
                        "src": "12055:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7509,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7256,
                      "src": "11913:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11913:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7517,
                  "nodeType": "ExpressionStatement",
                  "src": "11913:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7464,
              "nodeType": "StructuredDocumentation",
              "src": "10406:694:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "11114:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7466,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "11151:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11143:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11143:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "11173:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11165:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11165:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7470,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "11204:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11191:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11191:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7472,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11237:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11229:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11229:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7474,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11264:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11256:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11256:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "11297:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11289:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11289:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7478,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11330:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11322:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11322:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11133:221:35"
            },
            "returnParameters": {
              "id": 7480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11364:0:35"
            },
            "scope": 8305,
            "src": "11105:982:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14998
            ],
            "body": {
              "id": 7562,
              "nodeType": "Block",
              "src": "12514:428:35",
              "statements": [
                {
                  "assignments": [
                    7535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7535,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "12579:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7562,
                      "src": "12555:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7534,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7533,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14908,
                          "src": "12555:16:35"
                        },
                        "referencedDeclaration": 14908,
                        "src": "12555:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7537,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7522,
                        "src": "12609:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7538,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12627:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12627:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12651:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7541,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7524,
                        "src": "12667:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7542,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7526,
                        "src": "12691:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12717:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7536,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "12586:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12586:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12555:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12859:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12859:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7555,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7535,
                          "src": "12883:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "12883:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7547,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "12812:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7549,
                              "indexExpression": {
                                "id": 7548,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7522,
                                "src": "12821:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12812:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "12812:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7546,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "12794:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12794:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "12794:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12794:111:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7558,
                  "nodeType": "ExpressionStatement",
                  "src": "12794:111:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7559,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7535,
                      "src": "12923:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14905,
                    "src": "12923:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7532,
                  "id": 7561,
                  "nodeType": "Return",
                  "src": "12916:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7520,
              "nodeType": "StructuredDocumentation",
              "src": "12093:277:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _pid index of pool\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7563,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7529,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7528,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "12483:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "12483:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12384:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7522,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "12410:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12402:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12402:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7524,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "12432:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12424:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12424:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7526,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "12457:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12452:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12452:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12392:83:35"
            },
            "returnParameters": {
              "id": 7532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12505:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12505:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12504:9:35"
            },
            "scope": 8305,
            "src": "12375:567:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7862,
              "nodeType": "Block",
              "src": "13896:5946:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7583,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "14001:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14026:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14018:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7584,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14018:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14018:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14001:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7589,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7570,
                                    "src": "14032:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14032:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14057:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14032:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14001:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7594,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14000:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7595,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "14080:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14105:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14097:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7596,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14097:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14097:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14080:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7601,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7570,
                                    "src": "14111:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14111:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14137:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14111:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14080:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7606,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14079:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14000:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14153:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13979:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13979:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7610,
                  "nodeType": "ExpressionStatement",
                  "src": "13979:215:35"
                },
                {
                  "assignments": [
                    7613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7613,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "14279:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "14260:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7612,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7611,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14756,
                          "src": "14260:11:35"
                        },
                        "referencedDeclaration": 14756,
                        "src": "14260:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7615,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7566,
                        "src": "14315:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7616,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7572,
                        "src": "14333:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7617,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "14357:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7618,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "14386:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7614,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7918,
                      "src": "14290:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$14756_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14290:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14260:149:35"
                },
                {
                  "assignments": [
                    7623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7623,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nameLocation": "14482:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "14465:22:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7621,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "14465:8:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "14465:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7627,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7624,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "14490:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7626,
                    "indexExpression": {
                      "id": 7625,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "14499:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14490:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14465:39:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7629,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7613,
                            "src": "14572:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7630,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14745,
                          "src": "14572:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14596:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14572:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14599:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14564:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14564:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "14564:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7637,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "14715:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                            }
                          },
                          "id": 7638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14767,
                          "src": "14715:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14749:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14715:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14764:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14694:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14694:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7643,
                  "nodeType": "ExpressionStatement",
                  "src": "14694:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7645,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7613,
                            "src": "14880:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7646,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14755,
                          "src": "14880:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14906:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14880:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14909:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14872:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14872:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7651,
                  "nodeType": "ExpressionStatement",
                  "src": "14872:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7653,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7566,
                        "src": "15049:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7652,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6888,
                      "src": "15038:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15038:16:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7655,
                  "nodeType": "ExpressionStatement",
                  "src": "15038:16:35"
                },
                {
                  "assignments": [
                    7657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7657,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "15104:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "15096:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15096:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7670,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7658,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7613,
                                "src": "15123:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7659,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14745,
                              "src": "15123:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 7660,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7623,
                                "src": "15159:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                }
                              },
                              "id": 7661,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accZORRORewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14765,
                              "src": "15159:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15123:57:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7663,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15122:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 7664,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "15196:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7665,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14767,
                        "src": "15196:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15122:105:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 7667,
                        "name": "_tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7613,
                        "src": "15242:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      },
                      "id": 7668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14749,
                      "src": "15242:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15122:139:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15096:165:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7671,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7657,
                      "src": "15337:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15355:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15337:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7757,
                  "nodeType": "IfStatement",
                  "src": "15333:2322:35",
                  "trueBody": {
                    "id": 7756,
                    "nodeType": "Block",
                    "src": "15358:2297:35",
                    "statements": [
                      {
                        "assignments": [
                          7675,
                          7677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7675,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "15454:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7756,
                            "src": "15446:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7674,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15446:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7677,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "15491:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7756,
                            "src": "15483:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7676,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15483:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7685,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7682,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7613,
                              "src": "15606:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7683,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7657,
                              "src": "15636:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7679,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6492,
                                  "src": "15547:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7678,
                                "name": "IZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14512,
                                "src": "15523:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                                  "typeString": "type(contract IZorroControllerActions)"
                                }
                              },
                              "id": 7680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15523:42:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                                "typeString": "contract IZorroControllerActions"
                              }
                            },
                            "id": 7681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14493,
                            "src": "15523:61:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$14756_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15523:146:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15428:241:35"
                      },
                      {
                        "condition": {
                          "id": 7686,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7576,
                          "src": "15688:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7754,
                          "nodeType": "Block",
                          "src": "16621:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7719,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7675,
                                  "src": "16725:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16739:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16725:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7728,
                              "nodeType": "IfStatement",
                              "src": "16721:108:35",
                              "trueBody": {
                                "id": 7727,
                                "nodeType": "Block",
                                "src": "16742:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7723,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7568,
                                          "src": "16783:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7724,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7675,
                                          "src": "16798:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7722,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7012,
                                        "src": "16764:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16764:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7726,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16764:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7729,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "16851:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7730,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "16862:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16851:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7752,
                                "nodeType": "Block",
                                "src": "17293:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7743,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "17505:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17523:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17505:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7751,
                                    "nodeType": "IfStatement",
                                    "src": "17501:112:35",
                                    "trueBody": {
                                      "id": 7750,
                                      "nodeType": "Block",
                                      "src": "17526:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7747,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "17574:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7746,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6939,
                                              "src": "17552:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7748,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17552:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7749,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17552:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7753,
                              "nodeType": "IfStatement",
                              "src": "16847:784:35",
                              "trueBody": {
                                "id": 7742,
                                "nodeType": "Block",
                                "src": "16875:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7732,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "17060:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17078:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17060:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7741,
                                    "nodeType": "IfStatement",
                                    "src": "17056:213:35",
                                    "trueBody": {
                                      "id": 7740,
                                      "nodeType": "Block",
                                      "src": "17081:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7736,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "17211:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7737,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "17230:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7735,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7012,
                                              "src": "17192:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7738,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17192:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7739,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17192:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 7755,
                        "nodeType": "IfStatement",
                        "src": "15684:1961:35",
                        "trueBody": {
                          "id": 7718,
                          "nodeType": "Block",
                          "src": "15709:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7687,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "15770:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7689,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14907,
                                  "src": "15770:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7690,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7675,
                                  "src": "15794:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15770:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7692,
                              "nodeType": "ExpressionStatement",
                              "src": "15770:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7693,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "15828:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7694,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "15839:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15828:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7716,
                                "nodeType": "Block",
                                "src": "16266:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7707,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "16475:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16493:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16475:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7715,
                                    "nodeType": "IfStatement",
                                    "src": "16471:112:35",
                                    "trueBody": {
                                      "id": 7714,
                                      "nodeType": "Block",
                                      "src": "16496:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7711,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "16544:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7710,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6939,
                                              "src": "16522:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7712,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16522:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7713,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16522:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7717,
                              "nodeType": "IfStatement",
                              "src": "15824:777:35",
                              "trueBody": {
                                "id": 7706,
                                "nodeType": "Block",
                                "src": "15852:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7698,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7696,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "16033:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7697,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16051:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16033:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7705,
                                    "nodeType": "IfStatement",
                                    "src": "16029:213:35",
                                    "trueBody": {
                                      "id": 7704,
                                      "nodeType": "Block",
                                      "src": "16054:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7700,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "16184:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7701,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "16203:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7699,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7012,
                                              "src": "16165:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7702,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16165:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7703,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16165:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17741:13:35",
                    "subExpression": {
                      "id": 7758,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7574,
                      "src": "17742:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7861,
                  "nodeType": "IfStatement",
                  "src": "17737:2099:35",
                  "trueBody": {
                    "id": 7860,
                    "nodeType": "Block",
                    "src": "17756:2080:35",
                    "statements": [
                      {
                        "id": 7850,
                        "nodeType": "Block",
                        "src": "17949:1617:35",
                        "statements": [
                          {
                            "assignments": [
                              7761
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 7761,
                                "mutability": "mutable",
                                "name": "_resolvedLocalAcct",
                                "nameLocation": "18023:18:35",
                                "nodeType": "VariableDeclaration",
                                "scope": 7850,
                                "src": "18015:26:35",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 7760,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18015:7:35",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 7766,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 7763,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "18082:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7764,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7570,
                                  "src": "18117:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 7762,
                                "name": "_getLocalAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7296,
                                "src": "18044:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) pure returns (address)"
                                }
                              },
                              "id": 7765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18044:106:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18015:135:35"
                          },
                          {
                            "id": 7812,
                            "nodeType": "Block",
                            "src": "18198:829:35",
                            "statements": [
                              {
                                "assignments": [
                                  7768
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7768,
                                    "mutability": "mutable",
                                    "name": "_vaultAddr",
                                    "nameLocation": "18261:10:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18253:18:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "typeName": {
                                      "id": 7767,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18253:7:35",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7773,
                                "initialValue": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7769,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "18274:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 7771,
                                    "indexExpression": {
                                      "id": 7770,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7566,
                                      "src": "18283:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18274:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 7772,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "vault",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14769,
                                  "src": "18274:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18253:41:35"
                              },
                              {
                                "assignments": [
                                  7776
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7776,
                                    "mutability": "mutable",
                                    "name": "_vault",
                                    "nameLocation": "18323:6:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18316:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVault_$16006",
                                      "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                      "id": 7775,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 7774,
                                        "name": "IVault",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 16006,
                                        "src": "18316:6:35"
                                      },
                                      "referencedDeclaration": 16006,
                                      "src": "18316:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$16006",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7780,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 7778,
                                      "name": "_vaultAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7768,
                                      "src": "18339:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7777,
                                    "name": "IVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16006,
                                    "src": "18332:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVault_$16006_$",
                                      "typeString": "type(contract IVault)"
                                    }
                                  },
                                  "id": 7779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18332:18:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVault_$16006",
                                    "typeString": "contract IVault"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18316:34:35"
                              },
                              {
                                "assignments": [
                                  7782
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7782,
                                    "mutability": "mutable",
                                    "name": "_stakedWantAmt",
                                    "nameLocation": "18612:14:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18604:22:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 7781,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18604:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7805,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 7804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 7783,
                                              "name": "_tranche",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7613,
                                              "src": "18630:8:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                              }
                                            },
                                            "id": 7784,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "contribution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 14745,
                                            "src": "18630:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "31653132",
                                            "id": 7785,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18678:4:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000_by_1",
                                              "typeString": "int_const 1000000000000"
                                            },
                                            "value": "1e12"
                                          },
                                          "src": "18630:52:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 7793,
                                              "name": "_vaultAddr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7768,
                                              "src": "18793:10:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "arguments": [],
                                                  "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                      "id": 7788,
                                                      "name": "_vault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 7776,
                                                      "src": "18723:6:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVault_$16006",
                                                        "typeString": "contract IVault"
                                                      }
                                                    },
                                                    "id": 7789,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "vaultActions",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15935,
                                                    "src": "18723:19:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                      "typeString": "function () view external returns (address)"
                                                    }
                                                  },
                                                  "id": 7790,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18723:21:35",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 7787,
                                                "name": "IVaultActions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15546,
                                                "src": "18709:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultActions_$15546_$",
                                                  "typeString": "type(contract IVaultActions)"
                                                }
                                              },
                                              "id": 7791,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18709:36:35",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVaultActions_$15546",
                                                "typeString": "contract IVaultActions"
                                              }
                                            },
                                            "id": 7792,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentWantEquity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15536,
                                            "src": "18709:54:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                              "typeString": "function (address) view external returns (uint256)"
                                            }
                                          },
                                          "id": 7794,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18709:120:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18630:199:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7796,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18629:201:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 7797,
                                            "name": "_tranche",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7613,
                                            "src": "18834:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                            }
                                          },
                                          "id": 7798,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timeMultiplier",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14747,
                                          "src": "18834:23:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "id": 7799,
                                              "name": "_vault",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7776,
                                              "src": "18860:6:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVault_$16006",
                                                "typeString": "contract IVault"
                                              }
                                            },
                                            "id": 7800,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sharesTotal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15940,
                                            "src": "18860:18:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view external returns (uint256)"
                                            }
                                          },
                                          "id": 7801,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18860:20:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18834:46:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7803,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18833:48:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18629:252:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18604:277:35"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 7809,
                                      "name": "_stakedWantAmt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7782,
                                      "src": "18993:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 7806,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7776,
                                      "src": "18968:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$16006",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawWantToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15973,
                                    "src": "18968:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) external returns (uint256)"
                                    }
                                  },
                                  "id": 7810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18968:40:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7811,
                                "nodeType": "ExpressionStatement",
                                "src": "18968:40:35"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "id": 7821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7813,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7623,
                                  "src": "19085:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                  }
                                },
                                "id": 7815,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14767,
                                "src": "19085:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7816,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7623,
                                    "src": "19139:5:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 7817,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalTrancheContributions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14767,
                                  "src": "19139:31:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 7818,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7613,
                                    "src": "19193:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 7819,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14745,
                                  "src": "19193:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19139:75:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19085:129:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7822,
                            "nodeType": "ExpressionStatement",
                            "src": "19085:129:35"
                          },
                          {
                            "expression": {
                              "id": 7836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7823,
                                  "name": "_res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7580,
                                  "src": "19281:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                  }
                                },
                                "id": 7825,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "wantAmt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14905,
                                "src": "19281:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7833,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "19365:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      ],
                                      "id": 7832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19357:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7831,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19357:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19357:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 7827,
                                          "name": "_pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7623,
                                          "src": "19314:5:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolInfo_$14770_storage_ptr",
                                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                          }
                                        },
                                        "id": 7828,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "want",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14759,
                                        "src": "19314:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      ],
                                      "id": 7826,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2635,
                                      "src": "19296:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 7829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19296:29:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 7830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2574,
                                  "src": "19296:39:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 7835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19296:92:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19281:107:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7837,
                            "nodeType": "ExpressionStatement",
                            "src": "19281:107:35"
                          },
                          {
                            "expression": {
                              "id": 7848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 7838,
                                        "name": "trancheInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6480,
                                        "src": "19449:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                        }
                                      },
                                      "id": 7842,
                                      "indexExpression": {
                                        "id": 7839,
                                        "name": "_pid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7566,
                                        "src": "19461:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19449:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 7843,
                                    "indexExpression": {
                                      "id": 7840,
                                      "name": "_resolvedLocalAcct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7761,
                                      "src": "19467:18:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19449:37:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 7844,
                                  "indexExpression": {
                                    "id": 7841,
                                    "name": "_trancheId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7572,
                                    "src": "19487:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19449:49:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                  }
                                },
                                "id": 7845,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "exitedVaultAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14755,
                                "src": "19449:84:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 7846,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "19536:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 7847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19536:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19449:102:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7849,
                            "nodeType": "ExpressionStatement",
                            "src": "19449:102:35"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7852,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7568,
                              "src": "19685:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7853,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7570,
                              "src": "19716:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7854,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7566,
                              "src": "19749:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7855,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7572,
                              "src": "19771:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 7856,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7580,
                                "src": "19799:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                  "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 7857,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14905,
                              "src": "19799:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7851,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14930,
                            "src": "19659:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 7858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19659:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7859,
                        "nodeType": "EmitStatement",
                        "src": "19654:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7564,
              "nodeType": "StructuredDocumentation",
              "src": "12948:690:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _pid index of pool\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 7863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "13652:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7566,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13679:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13671:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13671:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7568,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "13701:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13693:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13693:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "13737:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13724:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13724:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "13770:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13762:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13762:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7574,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "13795:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13790:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7573,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13790:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7576,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "13822:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13817:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13817:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13661:186:35"
            },
            "returnParameters": {
              "id": 7581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7580,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "13890:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13866:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7578,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14908,
                      "src": "13866:16:35"
                    },
                    "referencedDeclaration": 14908,
                    "src": "13866:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13865:30:35"
            },
            "scope": 8305,
            "src": "13643:6199:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7917,
              "nodeType": "Block",
              "src": "20533:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7878,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7872,
                      "src": "20547:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20572:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20564:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20564:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20564:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20547:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7915,
                    "nodeType": "Block",
                    "src": "20697:237:35",
                    "statements": [
                      {
                        "assignments": [
                          7896
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7896,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "20757:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7915,
                            "src": "20749:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7895,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20749:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7904,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7897,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6488,
                                "src": "20772:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 7899,
                              "indexExpression": {
                                "id": 7898,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7866,
                                "src": "20791:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20772:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 7901,
                            "indexExpression": {
                              "id": 7900,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7870,
                              "src": "20797:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20772:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 7903,
                          "indexExpression": {
                            "id": 7902,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7868,
                            "src": "20831:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20772:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20749:106:35"
                      },
                      {
                        "expression": {
                          "id": 7913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7905,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "20869:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7906,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20880:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7908,
                                "indexExpression": {
                                  "id": 7907,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "20892:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20880:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7910,
                              "indexExpression": {
                                "id": 7909,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7896,
                                "src": "20898:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20880:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7912,
                            "indexExpression": {
                              "id": 7911,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7868,
                              "src": "20912:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20880:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20869:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7914,
                        "nodeType": "ExpressionStatement",
                        "src": "20869:54:35"
                      }
                    ]
                  },
                  "id": 7916,
                  "nodeType": "IfStatement",
                  "src": "20543:391:35",
                  "trueBody": {
                    "id": 7894,
                    "nodeType": "Block",
                    "src": "20576:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7884,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "20625:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7885,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20636:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7887,
                                "indexExpression": {
                                  "id": 7886,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "20648:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20636:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7889,
                              "indexExpression": {
                                "id": 7888,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7872,
                                "src": "20654:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20636:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7891,
                            "indexExpression": {
                              "id": 7890,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7868,
                              "src": "20669:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20636:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20625:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7893,
                        "nodeType": "ExpressionStatement",
                        "src": "20625:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7864,
              "nodeType": "StructuredDocumentation",
              "src": "19848:482:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _pid Pool ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 7918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "20344:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7866,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "20373:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20365:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20365:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7868,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "20395:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20387:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20387:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7870,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "20428:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20415:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7869,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20415:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7872,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "20461:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20453:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20453:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20355:125:35"
            },
            "returnParameters": {
              "id": 7877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7876,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "20523:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20504:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 7875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7874,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14756,
                      "src": "20504:11:35"
                    },
                    "referencedDeclaration": 14756,
                    "src": "20504:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20503:29:35"
            },
            "scope": 8305,
            "src": "20335:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              15011
            ],
            "body": {
              "id": 7958,
              "nodeType": "Block",
              "src": "21609:451:35",
              "statements": [
                {
                  "assignments": [
                    7935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7935,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "21659:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7958,
                      "src": "21651:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21651:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7946,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7937,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21711:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21711:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21735:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7940,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7921,
                        "src": "21751:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7941,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7923,
                        "src": "21769:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7942,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7925,
                        "src": "21793:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 7943,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7927,
                        "src": "21819:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21851:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7936,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "21675:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 7945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21675:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21650:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21981:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21981:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7953,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7935,
                        "src": "22005:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7948,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "21936:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7947,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "21918:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21918:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "21918:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21918:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "21918:107:35"
                },
                {
                  "expression": {
                    "id": 7956,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7935,
                    "src": "22043:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7933,
                  "id": 7957,
                  "nodeType": "Return",
                  "src": "22036:17:35"
                }
              ]
            },
            "documentation": {
              "id": 7919,
              "nodeType": "StructuredDocumentation",
              "src": "20946:470:35",
              "text": "@notice Withdraws funds from a pool and converts the Want token into USD\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 7959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7929,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "21578:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "21578:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "21430:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7921,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "21469:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21461:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21461:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7923,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "21491:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21483:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21483:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7925,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "21516:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21511:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7924,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21511:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7927,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "21546:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21538:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21538:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21451:119:35"
            },
            "returnParameters": {
              "id": 7933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21600:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21600:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21599:9:35"
            },
            "scope": 8305,
            "src": "21421:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15030
            ],
            "body": {
              "id": 8022,
              "nodeType": "Block",
              "src": "23132:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 7993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7981,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7977,
                          "src": "23188:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7982,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7979,
                          "src": "23200:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7983,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23187:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7985,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7962,
                          "src": "23257:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7986,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7964,
                          "src": "23279:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7987,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7966,
                          "src": "23308:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7988,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7968,
                          "src": "23326:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7989,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7970,
                          "src": "23350:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 7990,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7972,
                          "src": "23376:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23408:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7984,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8093,
                        "src": "23221:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 7992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23221:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23187:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7994,
                  "nodeType": "ExpressionStatement",
                  "src": "23187:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7995,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "23488:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23501:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23488:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8008,
                  "nodeType": "IfStatement",
                  "src": "23484:164:35",
                  "trueBody": {
                    "id": 8007,
                    "nodeType": "Block",
                    "src": "23504:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8002,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "23585:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23585:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8004,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7977,
                              "src": "23613:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7999,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6430,
                                  "src": "23536:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7998,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23518:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23518:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23518:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23518:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8006,
                        "nodeType": "ExpressionStatement",
                        "src": "23518:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8009,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7979,
                      "src": "23777:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23797:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23777:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8021,
                  "nodeType": "IfStatement",
                  "src": "23773:167:35",
                  "trueBody": {
                    "id": 8020,
                    "nodeType": "Block",
                    "src": "23800:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8016,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "23869:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8017,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7979,
                              "src": "23898:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8013,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "23832:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8012,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23814:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23814:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23814:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23814:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8019,
                        "nodeType": "ExpressionStatement",
                        "src": "23814:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7960,
              "nodeType": "StructuredDocumentation",
              "src": "22066:730:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8023,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7974,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "23048:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "23048:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "22810:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "22859:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22851:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22851:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7964,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "22890:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22877:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22877:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7966,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "22923:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22915:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22915:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7968,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "22945:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22937:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22937:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7970,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "22970:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22965:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22965:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7972,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "23000:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22992:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22992:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22841:183:35"
            },
            "returnParameters": {
              "id": 7980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7977,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "23089:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23081:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23081:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7979,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "23109:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23101:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23101:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23080:47:35"
            },
            "scope": 8305,
            "src": "22801:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8092,
              "nodeType": "Block",
              "src": "25095:793:35",
              "statements": [
                {
                  "assignments": [
                    8046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8046,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "25143:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "25135:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8045,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25135:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8051,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8047,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "25156:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8049,
                      "indexExpression": {
                        "id": 8048,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25165:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25156:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 8050,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "25156:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25135:41:35"
                },
                {
                  "assignments": [
                    8054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8054,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "25286:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "25262:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8053,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8052,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14908,
                          "src": "25262:16:35"
                        },
                        "referencedDeclaration": 14908,
                        "src": "25262:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8063,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8056,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25316:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8057,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8026,
                        "src": "25334:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8058,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "25356:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8059,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "25385:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8060,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8034,
                        "src": "25409:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8061,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8038,
                        "src": "25435:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8055,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "25293:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25293:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25262:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8071,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "25616:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8072,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8054,
                          "src": "25640:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "25640:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8065,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "25560:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8067,
                              "indexExpression": {
                                "id": 8066,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8030,
                                "src": "25569:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25560:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "25560:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8064,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "25542:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25542:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "25542:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25542:120:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8075,
                  "nodeType": "ExpressionStatement",
                  "src": "25542:120:35"
                },
                {
                  "expression": {
                    "id": 8085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8076,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "25706:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8081,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8054,
                            "src": "25775:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                              "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8082,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14905,
                          "src": "25775:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8083,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "25801:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8078,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "25726:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8077,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16006,
                            "src": "25719:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$16006_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25719:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$16006",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15982,
                        "src": "25719:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25719:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25706:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8086,
                  "nodeType": "ExpressionStatement",
                  "src": "25706:123:35"
                },
                {
                  "expression": {
                    "id": 8090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8087,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8043,
                      "src": "25840:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8088,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8054,
                        "src": "25860:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14907,
                      "src": "25860:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25840:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8091,
                  "nodeType": "ExpressionStatement",
                  "src": "25840:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8024,
              "nodeType": "StructuredDocumentation",
              "src": "23952:824:35",
              "text": "@notice Private function for withdrawing funds from a pool and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "24790:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8026,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "24830:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24822:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24822:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "24861:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24848:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24848:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "24894:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24886:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24886:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8032,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "24916:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24908:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24908:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8034,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "24941:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24936:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24936:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8036,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "24971:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24963:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24963:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8038,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "25004:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24999:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24999:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24812:217:35"
            },
            "returnParameters": {
              "id": 8044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8041,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "25056:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25048:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25048:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8043,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "25076:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25068:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25068:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25047:47:35"
            },
            "scope": 8305,
            "src": "24781:1107:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              15041
            ],
            "body": {
              "id": 8174,
              "nodeType": "Block",
              "src": "26469:1037:35",
              "statements": [
                {
                  "assignments": [
                    8108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8108,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "26533:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26525:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26525:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8118,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8109,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26550:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8111,
                          "indexExpression": {
                            "id": 8110,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8096,
                            "src": "26562:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26550:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8114,
                        "indexExpression": {
                          "expression": {
                            "id": 8112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26572:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26572:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26550:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8116,
                      "indexExpression": {
                        "id": 8115,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26597:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26550:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8117,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14751,
                    "src": "26550:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26525:121:35"
                },
                {
                  "assignments": [
                    8120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8120,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "26664:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26656:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26656:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8130,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8121,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26681:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8123,
                          "indexExpression": {
                            "id": 8122,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8096,
                            "src": "26693:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26681:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8126,
                        "indexExpression": {
                          "expression": {
                            "id": 8124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26703:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26703:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26681:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8128,
                      "indexExpression": {
                        "id": 8127,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26728:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26681:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8129,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14753,
                    "src": "26681:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26656:111:35"
                },
                {
                  "assignments": [
                    8132,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8132,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "26807:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26799:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26799:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8143,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26861:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26861:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26885:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8137,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "26901:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8138,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26923:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26951:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8140,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8102,
                        "src": "26970:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27002:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8133,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "26825:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26825:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26798:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8148,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6468,
                            "src": "27126:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8150,
                          "indexExpression": {
                            "id": 8149,
                            "name": "_toPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8100,
                            "src": "27135:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27126:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                          }
                        },
                        "id": 8151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14769,
                        "src": "27126:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8152,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8132,
                        "src": "27162:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8145,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "27081:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8144,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "27063:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27063:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "27063:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27063:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8154,
                  "nodeType": "ExpressionStatement",
                  "src": "27063:121:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8156,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8100,
                        "src": "27249:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27269:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27269:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27293:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8160,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8132,
                        "src": "27309:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8161,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8108,
                        "src": "27335:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8162,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8120,
                        "src": "27363:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8163,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8102,
                        "src": "27391:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8155,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "27216:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27216:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8165,
                  "nodeType": "ExpressionStatement",
                  "src": "27216:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27454:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27454:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8169,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "27466:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8170,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "27476:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8171,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8100,
                        "src": "27492:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8166,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14940,
                      "src": "27435:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27435:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8173,
                  "nodeType": "EmitStatement",
                  "src": "27430:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8094,
              "nodeType": "StructuredDocumentation",
              "src": "25894:398:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromPid index of pool FROM\n @param _fromTrancheId index of tranche FROM\n @param _toPid index of pool TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8104,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "26456:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "26456:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "26306:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "_fromPid",
                  "nameLocation": "26342:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26334:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26334:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8098,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "26368:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26360:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26360:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8100,
                  "mutability": "mutable",
                  "name": "_toPid",
                  "nameLocation": "26400:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26392:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26392:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8102,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "26424:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26416:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26416:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26324:124:35"
            },
            "returnParameters": {
              "id": 8106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26469:0:35"
            },
            "scope": 8305,
            "src": "26297:1209:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15046
            ],
            "body": {
              "id": 8245,
              "nodeType": "Block",
              "src": "27672:613:35",
              "statements": [
                {
                  "assignments": [
                    8184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8184,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "27773:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8245,
                      "src": "27765:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27765:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8190,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8186,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8178,
                        "src": "27801:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27807:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27807:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8185,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6699,
                      "src": "27787:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27787:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27765:53:35"
                },
                {
                  "body": {
                    "id": 8211,
                    "nodeType": "Block",
                    "src": "27876:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8202,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8178,
                              "src": "27900:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "27906:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27906:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27918:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8206,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8192,
                              "src": "27922:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27927:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27934:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8201,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7863,
                            "src": "27890:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27890:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8210,
                        "nodeType": "ExpressionStatement",
                        "src": "27890:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8195,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8192,
                      "src": "27850:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8196,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8184,
                      "src": "27856:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27850:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8212,
                  "initializationExpression": {
                    "assignments": [
                      8192
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8192,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "27841:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8212,
                        "src": "27833:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27833:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8194,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27847:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27833:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "27869:5:35",
                      "subExpression": {
                        "id": 8198,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8192,
                        "src": "27871:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8200,
                    "nodeType": "ExpressionStatement",
                    "src": "27869:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "27828:123:35"
                },
                {
                  "assignments": [
                    8214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8214,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "28011:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8245,
                      "src": "28003:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28003:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8227,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8224,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "28092:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28084:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28084:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28084:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8216,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "28040:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8218,
                              "indexExpression": {
                                "id": 8217,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8178,
                                "src": "28049:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28040:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "28040:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8215,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "28022:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28022:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "28022:48:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28022:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28003:104:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8228,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8214,
                      "src": "28121:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28132:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "28121:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8244,
                  "nodeType": "IfStatement",
                  "src": "28117:162:35",
                  "trueBody": {
                    "id": 8243,
                    "nodeType": "Block",
                    "src": "28135:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8238,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "28218:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "28218:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8240,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8214,
                              "src": "28246:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8232,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "28167:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$14770_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8234,
                                    "indexExpression": {
                                      "id": 8233,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8178,
                                      "src": "28176:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28167:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$14770_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 8235,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14759,
                                  "src": "28167:19:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8231,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "28149:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28149:38:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "28149:51:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28149:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8242,
                        "nodeType": "ExpressionStatement",
                        "src": "28149:119:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8176,
              "nodeType": "StructuredDocumentation",
              "src": "27512:100:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a pool\n @param _pid index of pool"
            },
            "functionSelector": "958e2d31",
            "id": 8246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8180,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "27659:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "27659:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "27626:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8178,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "27646:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8246,
                  "src": "27638:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27638:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27637:14:35"
            },
            "returnParameters": {
              "id": 8182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27672:0:35"
            },
            "scope": 8305,
            "src": "27617:668:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15053
            ],
            "body": {
              "id": 8275,
              "nodeType": "Block",
              "src": "28674:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8256,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6460,
                      "src": "28731:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8257,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "28742:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28731:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8273,
                    "nodeType": "Block",
                    "src": "28918:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8269,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8251,
                              "src": "29019:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8270,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8249,
                              "src": "29033:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8266,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "29007:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8265,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15358,
                                "src": "29000:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$15358_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29000:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$15358",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15357,
                            "src": "29000:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29000:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8272,
                        "nodeType": "ExpressionStatement",
                        "src": "29000:45:35"
                      }
                    ]
                  },
                  "id": 8274,
                  "nodeType": "IfStatement",
                  "src": "28727:329:35",
                  "trueBody": {
                    "id": 8264,
                    "nodeType": "Block",
                    "src": "28755:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8260,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8249,
                              "src": "28875:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8261,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8251,
                              "src": "28888:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8259,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6970,
                            "src": "28849:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28849:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8263,
                        "nodeType": "ExpressionStatement",
                        "src": "28849:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8247,
              "nodeType": "StructuredDocumentation",
              "src": "28329:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8253,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "28654:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28654:15:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "28570:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8249,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "28596:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8276,
                  "src": "28588:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28588:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8251,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "28617:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8276,
                  "src": "28609:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28609:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28587:43:35"
            },
            "returnParameters": {
              "id": 8255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28674:0:35"
            },
            "scope": 8305,
            "src": "28561:501:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15060
            ],
            "body": {
              "id": 8303,
              "nodeType": "Block",
              "src": "29604:404:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8292,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6436,
                        "src": "29794:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8293,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8279,
                          "src": "29819:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8294,
                          "name": "_totalSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8281,
                          "src": "29834:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29819:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8289,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6428,
                            "src": "29761:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8288,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "29743:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29743:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "29743:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29743:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "29743:114:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8299,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8281,
                        "src": "29968:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8300,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "29983:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8298,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "29942:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29942:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8302,
                  "nodeType": "ExpressionStatement",
                  "src": "29942:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8277,
              "nodeType": "StructuredDocumentation",
              "src": "29068:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8283,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6399,
                  "src": "29547:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29547:30:35"
              },
              {
                "id": 8286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8285,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6414,
                  "src": "29586:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29586:13:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "29456:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8279,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "29487:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29479:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29479:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8281,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "29509:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29501:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29501:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29478:45:35"
            },
            "returnParameters": {
              "id": 8287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29604:0:35"
            },
            "scope": 8305,
            "src": "29447:561:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8306,
        "src": "490:29520:35",
        "usedErrors": []
      }
    ],
    "src": "33:29978:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-13T02:17:54.371Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_pid": "index of pool",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromPid": "index of pool FROM",
          "_fromTrancheId": "index of tranche FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toPid": "index of pool TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_pid": "index of pool",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_pid": "index of pool"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setControllerActions(address)": {
        "notice": "Setter: Set controller actions contract address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a pool"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a pool and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}