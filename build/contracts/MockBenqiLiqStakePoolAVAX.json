{
  "contractName": "MockBenqiLiqStakePoolAVAX",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "avaxAmount",
          "type": "uint256"
        }
      ],
      "name": "getSharesByPooledAvax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "getPooledAvaxByShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"getPooledAvaxByShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"avaxAmount\",\"type\":\"uint256\"}],\"name\":\"getSharesByPooledAvax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultBenqiLiqStakeLP.sol\":\"MockBenqiLiqStakePoolAVAX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/Benqi/IStakedAvax.sol\":{\"keccak256\":\"0x97447a176aa89794b5a297bfa147a55d85d4b67d1156e4311655b636b3d2e690\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://81436e03d98da09206effeb44b39359e68b6096b9212fbd01a6401bd176a9b04\",\"dweb:/ipfs/QmbNs5CDkByFRkdwHp5THCRqRSKvJJZxVMTSePnhojWqHF\"]},\"project:/contracts/interfaces/IAMMFarm.sol\":{\"keccak256\":\"0x2b2600a84fb56a84ebfbeeadc317c16eed08dd7bbfb19011fb7a76c1093e6504\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8751dd42de042238f176b12a69ec7a5e80e890a8cf6e05bfad4d84532f24c065\",\"dweb:/ipfs/QmbWDH4fwdN6zx61dK6RPkM4bVYUXMBEBfPNzPPJX5vPFa\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xe839aec3aba871f2cfba556079aad58394e3f93bdb6b511f2a4c48006962267b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c16d15a1077b2846bfa3066cdad6685a7e71d83533401df8333fa10549df1219\",\"dweb:/ipfs/Qmdgzi7ijCtfFUmTtZwHNZdDAVj45V2N9zybbFrovERBZU\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xa1a158e676f2b6a24680fbed4f1aec74d08c69719d9bc39a8efeaaa063b15974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://500d6fcba8e6476a539b9351797e2e4646c4e7e3fa72694f7628b871cd669102\",\"dweb:/ipfs/QmeW3gYAh58ebumDgiX1Fa8NDK9ghSCDMG5tNnQjyKG3Hs\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]},\"project:/contracts/vaults/VaultBenqiLiqStakeLP.sol\":{\"keccak256\":\"0x11b2552b4b278f8c90a1319d6cd2e384d68aab0fc173666290f48d64aec66f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edf9a1447d15178be4a33403650f7bcb9fa61eec0fc6611035f3e401a1d2053b\",\"dweb:/ipfs/QmUz2b5rgtEbtEGLfmGWmyWNQ6zVMWWDGwVJhgaiVzegrd\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x29689c796abdd63dcfc82fd3955afb475274843faa5d62911dc7f6bea0547226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4422b41d9cd91c7a8bf37a0eb8374d8dd41e9d299a736315ad3ae2dcb4cd12e\",\"dweb:/ipfs/QmRJsNB7H1HAgpoFJwJJNvywJZzWDY77Xs6t9M6xS3UBrt\"]},\"project:/contracts/vaults/_VaultBaseLiqStakeLP.sol\":{\"keccak256\":\"0xa34c65fe43780c664f2928e91b34f2b52bd6978b37ba1c2a5808bdfeddc95aa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46f0037da471fa0e1b9ece9a16650b4751e637533ac089fd88924d1fa63edaa0\",\"dweb:/ipfs/QmZdQbku4nEr36ao2QwQrvF1wiKbXf64BXJ5xCamXR2pXW\"]},\"project:/contracts/vaults/actions/VaultActionsBenqiLiqStakeLP.sol\":{\"keccak256\":\"0x15bf0f9d18aa46b766daa05dad7b800f1b4be9cf8ac91caf7e600bf5fb606562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51ba2c65e7e9a34f3861c8f19ff2b1146c996ca56a48188afc317914e215c4d8\",\"dweb:/ipfs/QmatAj12FfMSdjQ9jvtXQs8X2AVEgWsiu95ACSgy5fvKEk\"]},\"project:/contracts/vaults/actions/VaultActionsStandardAMM.sol\":{\"keccak256\":\"0x82a27256b68a595e1f009aceb308712b41e84edafe6c62e61489cc161605c85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dd1f9c2e581044a2871b26b336b98ae886fa490f8600563776be7ca946f6c9\",\"dweb:/ipfs/QmSXdYRzUMs7TSugg3o4VGzv58UeizJV6yZnbYFeXSGFBC\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0x0901df17397296f0799eb88cef219660c7cab12739b513d8e7c385773647145c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4aa53a3b877ba11bed6f5fc2b5c2d40cc6165338ebf733558b59450000740b8\",\"dweb:/ipfs/QmQikiDKDDFCCiajG918rKT1Yu3pY2zeMybWdYhv7UEQEe\"]},\"project:/contracts/vaults/actions/_VaultActionsLiqStakeLP.sol\":{\"keccak256\":\"0x65640d46aec331be5a60911ea9f3c768717b89e6e034aea930e564a21f481cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d92914226048997ea47aae6976af1c9c89cf4dec821cf62b479e0b6ab22099\",\"dweb:/ipfs/QmUKAJSHAE2WnzwXZ3VDfWui8AADgM81scHufV9JPGxj8b\"]},\"project:/contracts/vaults/mocks/MockVaultBenqiLiqStakeLP.sol\":{\"keccak256\":\"0x65af60351745d76b4b323b2b8086f804cca850f000a545c58ec97da8fd328195\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://753a82db0c44bd01a6d00d225a53c44b1b20e9fdc2d5363517992a92ba6a451c\",\"dweb:/ipfs/QmWwtD5KjeX5zhp51ykVc33rLbXiYzuZqKCPwsE5JCqyZt\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ad8806100206000396000f3fe608060405260043610610105576000357c0100000000000000000000000000000000000000000000000000000000900480635bcb2fc6116100a7578063a9059cbb11610076578063a9059cbb14610273578063d0e30db014610293578063dd62ed3e14610295578063f1ee8d92146101e057600080fd5b80635bcb2fc61461020157806370a082311461020857806395d89b411461023e578063a457c2d71461025357600080fd5b806323b872dd116100e357806323b872dd14610184578063313ce567146101a457806339509351146101c05780634a36d6c1146101e057600080fd5b806306fdde031461010a578063095ea7b31461013557806318160ddd14610165575b600080fd5b34801561011657600080fd5b5061011f6102db565b60405161012c91906108ca565b60405180910390f35b34801561014157600080fd5b5061015561015036600461093b565b61036d565b604051901515815260200161012c565b34801561017157600080fd5b506035545b60405190815260200161012c565b34801561019057600080fd5b5061015561019f366004610965565b610385565b3480156101b057600080fd5b506040516012815260200161012c565b3480156101cc57600080fd5b506101556101db36600461093b565b6103a9565b3480156101ec57600080fd5b506101766101fb3660046109a1565b50600090565b6000610176565b34801561021457600080fd5b506101766102233660046109ba565b600160a060020a031660009081526033602052604090205490565b34801561024a57600080fd5b5061011f6103e8565b34801561025f57600080fd5b5061015561026e36600461093b565b6103f7565b34801561027f57600080fd5b5061015561028e36600461093b565b6104a9565b005b3480156102a157600080fd5b506101766102b03660046109dc565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546102ea90610a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610a0f565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b60003361037b8185856104b7565b5060019392505050565b600033610393858285610615565b61039e8585856106aa565b506001949350505050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061037b90829086906103e3908790610a63565b6104b7565b6060603780546102ea90610a0f565b336000818152603460209081526040808320600160a060020a03871684529091528120549091908381101561049c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039e82868684036104b7565b60003361037b8185856106aa565b600160a060020a0383166105355760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0382166105b45760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a0383811660009081526034602090815260408083209386168352929052205460001981146106a457818110156106975760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610493565b6106a484848484036104b7565b50505050565b600160a060020a0383166107295760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0382166107a85760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0383166000908152603360205260409020548181101561083a5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610871908490610a63565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108bd91815260200190565b60405180910390a36106a4565b600060208083528351808285015260005b818110156108f7578581018301518582016040015282016108db565b81811115610909576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a038116811461093657600080fd5b919050565b6000806040838503121561094e57600080fd5b6109578361091f565b946020939093013593505050565b60008060006060848603121561097a57600080fd5b6109838461091f565b92506109916020850161091f565b9150604084013590509250925092565b6000602082840312156109b357600080fd5b5035919050565b6000602082840312156109cc57600080fd5b6109d58261091f565b9392505050565b600080604083850312156109ef57600080fd5b6109f88361091f565b9150610a066020840161091f565b90509250929050565b600281046001821680610a2357607f821691505b60208210811415610a5d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115610a9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220b89ed4bc5adb3d618de59a07b0704ce90c1429b98b4e016aff431612cad03af464736f6c634300080a0033",
  "deployedBytecode": "0x608060405260043610610105576000357c0100000000000000000000000000000000000000000000000000000000900480635bcb2fc6116100a7578063a9059cbb11610076578063a9059cbb14610273578063d0e30db014610293578063dd62ed3e14610295578063f1ee8d92146101e057600080fd5b80635bcb2fc61461020157806370a082311461020857806395d89b411461023e578063a457c2d71461025357600080fd5b806323b872dd116100e357806323b872dd14610184578063313ce567146101a457806339509351146101c05780634a36d6c1146101e057600080fd5b806306fdde031461010a578063095ea7b31461013557806318160ddd14610165575b600080fd5b34801561011657600080fd5b5061011f6102db565b60405161012c91906108ca565b60405180910390f35b34801561014157600080fd5b5061015561015036600461093b565b61036d565b604051901515815260200161012c565b34801561017157600080fd5b506035545b60405190815260200161012c565b34801561019057600080fd5b5061015561019f366004610965565b610385565b3480156101b057600080fd5b506040516012815260200161012c565b3480156101cc57600080fd5b506101556101db36600461093b565b6103a9565b3480156101ec57600080fd5b506101766101fb3660046109a1565b50600090565b6000610176565b34801561021457600080fd5b506101766102233660046109ba565b600160a060020a031660009081526033602052604090205490565b34801561024a57600080fd5b5061011f6103e8565b34801561025f57600080fd5b5061015561026e36600461093b565b6103f7565b34801561027f57600080fd5b5061015561028e36600461093b565b6104a9565b005b3480156102a157600080fd5b506101766102b03660046109dc565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546102ea90610a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610a0f565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b60003361037b8185856104b7565b5060019392505050565b600033610393858285610615565b61039e8585856106aa565b506001949350505050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061037b90829086906103e3908790610a63565b6104b7565b6060603780546102ea90610a0f565b336000818152603460209081526040808320600160a060020a03871684529091528120549091908381101561049c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61039e82868684036104b7565b60003361037b8185856106aa565b600160a060020a0383166105355760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0382166105b45760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a0383811660009081526034602090815260408083209386168352929052205460001981146106a457818110156106975760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610493565b6106a484848484036104b7565b50505050565b600160a060020a0383166107295760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0382166107a85760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a0383166000908152603360205260409020548181101561083a5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610493565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610871908490610a63565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108bd91815260200190565b60405180910390a36106a4565b600060208083528351808285015260005b818110156108f7578581018301518582016040015282016108db565b81811115610909576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a038116811461093657600080fd5b919050565b6000806040838503121561094e57600080fd5b6109578361091f565b946020939093013593505050565b60008060006060848603121561097a57600080fd5b6109838461091f565b92506109916020850161091f565b9150604084013590509250925092565b6000602082840312156109b357600080fd5b5035919050565b6000602082840312156109cc57600080fd5b6109d58261091f565b9392505050565b600080604083850312156109ef57600080fd5b6109f88361091f565b9150610a066020840161091f565b90509250929050565b600281046001821680610a2357607f821691505b60208210811415610a5d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115610a9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220b89ed4bc5adb3d618de59a07b0704ce90c1429b98b4e016aff431612cad03af464736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6128:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:123",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:123"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:123",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:123"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:123"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:123"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:123"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:123",
                    "statements": []
                  },
                  "src": "294:140:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:123"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:123"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:123",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:123",
                "type": ""
              }
            ],
            "src": "14:597:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:147:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "790:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "799:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "802:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "792:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "792:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "792:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "744:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "713:93:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:123",
                "type": ""
              }
            ],
            "src": "616:196:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "904:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "950:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "959:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "962:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "952:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "952:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "952:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "925:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "921:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "921:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "946:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "917:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "914:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "975:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1004:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "985:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "975:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1023:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1050:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1061:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1033:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1023:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "862:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "873:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "885:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "893:6:123",
                "type": ""
              }
            ],
            "src": "817:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1171:92:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1181:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1193:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1189:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1181:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1248:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1241:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1241:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1234:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1216:41:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1162:4:123",
                "type": ""
              }
            ],
            "src": "1076:187:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1369:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1379:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1391:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1387:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1379:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1421:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1414:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1338:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1349:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1360:4:123",
                "type": ""
              }
            ],
            "src": "1268:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:224:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1600:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1609:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1612:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1602:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1602:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1602:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1575:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1571:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1571:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1567:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1567:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1564:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1625:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1654:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1635:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1635:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1625:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1673:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1706:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1717:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1702:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1702:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1683:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1673:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1757:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1753:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1753:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1740:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1730:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1504:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1515:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1535:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1543:6:123",
                "type": ""
              }
            ],
            "src": "1450:328:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1880:87:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1890:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1902:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1913:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1898:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1898:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1890:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1932:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1947:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1955:4:123",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1943:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1943:17:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1925:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1925:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1925:36:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1849:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1860:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1871:4:123",
                "type": ""
              }
            ],
            "src": "1783:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2088:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2097:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2100:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2090:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2090:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2090:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2063:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2072:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2059:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2084:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2055:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2052:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2113:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2136:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2123:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2113:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2008:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2019:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2031:6:123",
                "type": ""
              }
            ],
            "src": "1972:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2227:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2282:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2248:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2257:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2240:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2237:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2327:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2308:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2193:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2204:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2216:6:123",
                "type": ""
              }
            ],
            "src": "2157:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2435:173:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2481:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2490:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2493:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2483:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2483:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2483:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2456:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2452:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2448:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2448:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2445:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2506:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2535:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2516:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2506:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2554:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2587:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2598:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2583:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2564:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2554:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2404:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2416:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2424:6:123",
                "type": ""
              }
            ],
            "src": "2348:260:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2668:382:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2678:22:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2692:4:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2698:1:123",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2688:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:12:123"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2678:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2709:38:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2739:4:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:1:123",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2735:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:12:123"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2713:18:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2786:31:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2788:27:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2802:6:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2810:4:123",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2798:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2798:17:123"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2788:6:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2766:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2759:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:26:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2756:61:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2876:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2897:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2900:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2890:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2890:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2890:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2998:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3001:4:123",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2991:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2991:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2991:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3026:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3029:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3019:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3019:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3019:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2832:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2855:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2863:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2852:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:14:123"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2829:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:38:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2826:218:123"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2648:4:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2657:6:123",
                "type": ""
              }
            ],
            "src": "2613:437:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3103:234:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3138:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3159:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3162:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3152:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3152:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3152:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3260:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3263:4:123",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3253:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3253:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3253:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3288:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3291:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3281:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3281:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3281:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3119:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3126:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3122:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3116:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3116:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3113:193:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3315:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3326:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3329:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3322:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3322:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3315:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3086:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3089:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3095:3:123",
                "type": ""
              }
            ],
            "src": "3055:282:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3516:227:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3533:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3544:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3526:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3526:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3526:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3567:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3578:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3563:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3563:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3583:2:123",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3556:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3556:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3606:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3617:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3602:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:18:123"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3622:34:123",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3595:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3595:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3595:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3677:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3688:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3673:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3673:18:123"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3693:7:123",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3666:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3666:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3666:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3710:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3722:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3733:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3718:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3718:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3710:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3493:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3507:4:123",
                "type": ""
              }
            ],
            "src": "3342:401:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3922:226:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3939:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3950:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3932:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3932:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3973:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3984:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3969:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3969:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3989:2:123",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3962:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3962:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4012:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4023:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4008:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4008:18:123"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4028:34:123",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4001:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4001:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4001:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4083:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4094:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4079:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4079:18:123"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4099:6:123",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4072:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4072:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4115:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4127:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4138:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4123:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4123:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4115:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3899:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3913:4:123",
                "type": ""
              }
            ],
            "src": "3748:400:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:224:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4344:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4355:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4337:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4337:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4337:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4378:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4389:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4374:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4374:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4394:2:123",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4367:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4367:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4367:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4417:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4428:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4413:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4413:18:123"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4433:34:123",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4406:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4406:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4406:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4488:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4499:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4484:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4484:18:123"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4504:4:123",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4477:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4477:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4477:32:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4518:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4530:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4541:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4526:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4526:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4518:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4304:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4318:4:123",
                "type": ""
              }
            ],
            "src": "4153:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4730:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4747:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4758:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4740:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4740:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4740:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4781:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4792:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4777:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4777:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4797:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4770:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4770:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4770:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4820:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4831:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4816:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4816:18:123"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4836:31:123",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4809:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4809:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4877:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4889:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4900:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4885:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4877:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4707:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4721:4:123",
                "type": ""
              }
            ],
            "src": "4556:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5088:227:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5105:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5116:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5098:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5098:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5098:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5139:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5150:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5135:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5135:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5155:2:123",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5128:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5128:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5128:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5178:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5189:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5174:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5174:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5194:34:123",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5167:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5167:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5167:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5249:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5260:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5245:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5245:18:123"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5265:7:123",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5238:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5238:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5238:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5282:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5294:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5305:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5290:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5290:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5282:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5065:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5079:4:123",
                "type": ""
              }
            ],
            "src": "4914:401:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5494:225:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5511:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5522:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5504:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5504:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5545:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5556:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5541:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5541:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5561:2:123",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5534:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5534:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5584:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5595:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5580:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5580:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5600:34:123",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5573:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5573:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5573:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5655:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5666:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5651:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:18:123"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5671:5:123",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5644:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5644:33:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5686:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5698:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5694:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5686:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5471:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5485:4:123",
                "type": ""
              }
            ],
            "src": "5320:399:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5898:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5915:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5926:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5908:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5908:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5908:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5949:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5960:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5945:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5945:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5965:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5938:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5938:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5938:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5988:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5999:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5984:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5984:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6004:34:123",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5977:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5977:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6059:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6070:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6055:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6055:18:123"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6075:8:123",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6048:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6048:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6093:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6105:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6116:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6101:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6101:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6093:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5875:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5889:4:123",
                "type": ""
              }
            ],
            "src": "5724:402:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "375:367:119:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "375:367:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;-1:-1:-1;4770:197:9;;;;;:::i;:::-;;:::i;:::-;;;1241:14:123;;1234:22;1216:41;;1204:2;1189:18;4770:197:9;1076:187:123;3581:106:9;;;;;;;;;;-1:-1:-1;3668:12:9;;3581:106;;;1414:25:123;;;1402:2;1387:18;3581:106:9;1268:177:123;5529:286:9;;;;;;;;;;-1:-1:-1;5529:286:9;;;;;:::i;:::-;;:::i;3430:91::-;;;;;;;;;;-1:-1:-1;3430:91:9;;3512:2;1925:36:123;;1913:2;1898:18;3430:91:9;1783:184:123;6210:236:9;;;;;;;;;;-1:-1:-1;6210:236:9;;;;;:::i;:::-;;:::i;540:86:119:-;;;;;;;;;;-1:-1:-1;540:86:119;;;;;:::i;:::-;-1:-1:-1;612:4:119;;540:86;632:58;676:4;632:58;;3745:125:9;;;;;;;;;;-1:-1:-1;3745:125:9;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:9;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;;;;;;;;;;;:::i;6933:429::-;;;;;;;;;;-1:-1:-1;6933:429:9;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:9;;;;;:::i;:::-;;:::i;696:44:119:-;;4313:149:9;;;;;;;;;;-1:-1:-1;4313:149:9;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:9;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:14;4907:32:9;929:10:14;4923:7:9;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:9;;4770:197;-1:-1:-1;;;4770:197:9:o;5529:286::-;5656:4;929:10:14;5712:38:9;5728:4;929:10:14;5743:6:9;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:9;;5529:286;-1:-1:-1;;;;5529:286:9:o;6210:236::-;929:10:14;6298:4:9;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:9;;;;;;;;;;6298:4;;929:10:14;6352:66:9;;929:10:14;;6377:27:9;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:14;7026:4:9;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:9;;;;;;;;;;7026:4;;929:10:14;7152:35:9;;;;7144:85;;;;-1:-1:-1;;;;;7144:85:9;;3544:2:123;7144:85:9;;;3526:21:123;3583:2;3563:18;;;3556:30;3622:34;3602:18;;;3595:62;3693:7;3673:18;;;3666:35;3718:19;;7144:85:9;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:14;4199:28:9;929:10:14;4216:2:9;4220:6;4199:9;:28::i;10460:370::-;-1:-1:-1;;;;;10591:19:9;;10583:68;;;;-1:-1:-1;;;;;10583:68:9;;3950:2:123;10583:68:9;;;3932:21:123;3989:2;3969:18;;;3962:30;4028:34;4008:18;;;4001:62;4099:6;4079:18;;;4072:34;4123:19;;10583:68:9;3748:400:123;10583:68:9;-1:-1:-1;;;;;10669:21:9;;10661:68;;;;-1:-1:-1;;;;;10661:68:9;;4355:2:123;10661:68:9;;;4337:21:123;4394:2;4374:18;;;4367:30;4433:34;4413:18;;;4406:62;4504:4;4484:18;;;4477:32;4526:19;;10661:68:9;4153:398:123;10661:68:9;-1:-1:-1;;;;;10740:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1414:25:123;;;10791:32:9;;1387:18:123;10791:32:9;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:9;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:9;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;;;11356:68:9;;4758:2:123;11356:68:9;;;4740:21:123;4797:2;4777:18;;;4770:30;4836:31;4816:18;;;4809:59;4885:18;;11356:68:9;4556:353:123;11356:68:9;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:9;;7943:68;;;;-1:-1:-1;;;;;7943:68:9;;5116:2:123;7943:68:9;;;5098:21:123;5155:2;5135:18;;;5128:30;5194:34;5174:18;;;5167:62;5265:7;5245:18;;;5238:35;5290:19;;7943:68:9;4914:401:123;7943:68:9;-1:-1:-1;;;;;8029:16:9;;8021:64;;;;-1:-1:-1;;;;;8021:64:9;;5522:2:123;8021:64:9;;;5504:21:123;5561:2;5541:18;;;5534:30;5600:34;5580:18;;;5573:62;5671:5;5651:18;;;5644:33;5694:19;;8021:64:9;5320:399:123;8021:64:9;-1:-1:-1;;;;;8167:15:9;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;;;8192:72:9;;5926:2:123;8192:72:9;;;5908:21:123;5965:2;5945:18;;;5938:30;6004:34;5984:18;;;5977:62;6075:8;6055:18;;;6048:36;6101:19;;8192:72:9;5724:402:123;8192:72:9;-1:-1:-1;;;;;8298:15:9;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:9;8404:4;-1:-1:-1;;;;;8395:26:9;;8414:6;8395:26;;;;1414:25:123;;1402:2;1387:18;;1268:177;8395:26:9;;;;;;;;8432:37;12132:121;14:597:123;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:123;574:15;-1:-1:-1;;570:29:123;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:123:o;616:196::-;684:20;;-1:-1:-1;;;;;733:54:123;;723:65;;713:93;;802:1;799;792:12;713:93;616:196;;;:::o;817:254::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;985:29;1004:9;985:29;:::i;:::-;975:39;1061:2;1046:18;;;;1033:32;;-1:-1:-1;;;817:254:123:o;1450:328::-;1527:6;1535;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1635:29;1654:9;1635:29;:::i;:::-;1625:39;;1683:38;1717:2;1706:9;1702:18;1683:38;:::i;:::-;1673:48;;1768:2;1757:9;1753:18;1740:32;1730:42;;1450:328;;;;;:::o;1972:180::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;-1:-1:-1;2123:23:123;;1972:180;-1:-1:-1;1972:180:123:o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:123:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:437::-;2698:1;2688:12;;2745:1;2735:12;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:218;;;2900:77;2897:1;2890:88;3001:4;2998:1;2991:15;3029:4;3026:1;3019:15;2826:218;;2613:437;;;:::o;3055:282::-;3095:3;3126:1;3122:6;3119:1;3116:13;3113:193;;;3162:77;3159:1;3152:88;3263:4;3260:1;3253:15;3291:4;3288:1;3281:15;3113:193;-1:-1:-1;3322:9:123;;3055:282::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultBenqiLiqStakeLP.sol\";\n\nimport \"../../interfaces/Benqi/IStakedAvax.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\ncontract MockVaultBenqiLiqStakeLP is VaultBenqiLiqStakeLP {\n    // TODO: Fill out any necessary methods for testing here\n}\n\n// TODO: Fill out below\ncontract MockBenqiLiqStakePoolAVAX is IStakedAvax, ERC20Upgradeable {\n    function getSharesByPooledAvax(uint avaxAmount) external view returns (uint) {\n\n    }\n\n    function getPooledAvaxByShares(uint shareAmount) external view returns (uint) {\n\n    }\n\n    function submit() external payable returns (uint) {\n\n    }\n\n    function deposit() external payable {\n\n    }\n}",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultBenqiLiqStakeLP.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultBenqiLiqStakeLP.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMFarm": [
        12853
      ],
      "IAMMRouter01": [
        13161
      ],
      "IAMMRouter02": [
        13249
      ],
      "IAlpacaVault": [
        12597
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12562
      ],
      "ILayerZeroReceiver": [
        14358
      ],
      "IStakedAvax": [
        12772
      ],
      "IStargateReceiver": [
        14605
      ],
      "IVault": [
        13622
      ],
      "IWETH": [
        13642
      ],
      "IZorroControllerXChain": [
        14199
      ],
      "IZorroControllerXChainBase": [
        14040
      ],
      "IZorroControllerXChainDeposit": [
        14074
      ],
      "IZorroControllerXChainEarn": [
        14132
      ],
      "IZorroControllerXChainReceiver": [
        14187
      ],
      "IZorroControllerXChainWithdraw": [
        14175
      ],
      "Initializable": [
        1774
      ],
      "MockBenqiLiqStakePoolAVAX": [
        28417
      ],
      "MockVaultBenqiLiqStakeLP": [
        28386
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15228
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15445
      ],
      "SafeSwapUni": [
        15427
      ],
      "VaultActions": [
        26424
      ],
      "VaultActionsBenqiLiqStakeLP": [
        24754
      ],
      "VaultActionsLiqStakeLP": [
        27509
      ],
      "VaultActionsStandardAMM": [
        25158
      ],
      "VaultBase": [
        21893
      ],
      "VaultBaseLiqStakeLP": [
        22929
      ],
      "VaultBenqiAVAXLiqStakeLP": [
        18446
      ],
      "VaultBenqiLiqStakeLP": [
        18443
      ]
    },
    "id": 28418,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28380,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:119"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultBenqiLiqStakeLP.sol",
        "file": "../VaultBenqiLiqStakeLP.sol",
        "id": 28381,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28418,
        "sourceUnit": 18447,
        "src": "58:37:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Benqi/IStakedAvax.sol",
        "file": "../../interfaces/Benqi/IStakedAvax.sol",
        "id": 28382,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28418,
        "sourceUnit": 12773,
        "src": "97:48:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 28383,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28418,
        "sourceUnit": 2558,
        "src": "147:78:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28384,
              "name": "VaultBenqiLiqStakeLP",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18443,
              "src": "264:20:119"
            },
            "id": 28385,
            "nodeType": "InheritanceSpecifier",
            "src": "264:20:119"
          }
        ],
        "canonicalName": "MockVaultBenqiLiqStakeLP",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28386,
        "linearizedBaseContracts": [
          28386,
          18443,
          22929,
          21893,
          1885,
          1944,
          571,
          3169,
          1774,
          13622
        ],
        "name": "MockVaultBenqiLiqStakeLP",
        "nameLocation": "236:24:119",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28418,
        "src": "227:122:119",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28387,
              "name": "IStakedAvax",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12772,
              "src": "413:11:119"
            },
            "id": 28388,
            "nodeType": "InheritanceSpecifier",
            "src": "413:11:119"
          },
          {
            "baseName": {
              "id": 28389,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2557,
              "src": "426:16:119"
            },
            "id": 28390,
            "nodeType": "InheritanceSpecifier",
            "src": "426:16:119"
          }
        ],
        "canonicalName": "MockBenqiLiqStakePoolAVAX",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28417,
        "linearizedBaseContracts": [
          28417,
          2557,
          2660,
          12772,
          2635,
          3169,
          1774
        ],
        "name": "MockBenqiLiqStakePoolAVAX",
        "nameLocation": "384:25:119",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12756
            ],
            "body": {
              "id": 28397,
              "nodeType": "Block",
              "src": "526:8:119",
              "statements": []
            },
            "functionSelector": "f1ee8d92",
            "id": 28398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSharesByPooledAvax",
            "nameLocation": "458:21:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28392,
                  "mutability": "mutable",
                  "name": "avaxAmount",
                  "nameLocation": "485:10:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28398,
                  "src": "480:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "479:17:119"
            },
            "returnParameters": {
              "id": 28396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28398,
                  "src": "520:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28394,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:6:119"
            },
            "scope": 28417,
            "src": "449:85:119",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12763
            ],
            "body": {
              "id": 28405,
              "nodeType": "Block",
              "src": "618:8:119",
              "statements": []
            },
            "functionSelector": "4a36d6c1",
            "id": 28406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPooledAvaxByShares",
            "nameLocation": "549:21:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28400,
                  "mutability": "mutable",
                  "name": "shareAmount",
                  "nameLocation": "576:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28406,
                  "src": "571:16:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28399,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "570:18:119"
            },
            "returnParameters": {
              "id": 28404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28406,
                  "src": "612:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:6:119"
            },
            "scope": 28417,
            "src": "540:86:119",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12768
            ],
            "body": {
              "id": 28411,
              "nodeType": "Block",
              "src": "682:8:119",
              "statements": []
            },
            "functionSelector": "5bcb2fc6",
            "id": 28412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submit",
            "nameLocation": "641:6:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:119"
            },
            "returnParameters": {
              "id": 28410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28412,
                  "src": "676:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28408,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:6:119"
            },
            "scope": 28417,
            "src": "632:58:119",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12771
            ],
            "body": {
              "id": 28415,
              "nodeType": "Block",
              "src": "732:8:119",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 28416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "705:7:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:2:119"
            },
            "returnParameters": {
              "id": 28414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:119"
            },
            "scope": 28417,
            "src": "696:44:119",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28418,
        "src": "375:367:119",
        "usedErrors": []
      }
    ],
    "src": "33:709:119"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-23T16:17:51.821Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}