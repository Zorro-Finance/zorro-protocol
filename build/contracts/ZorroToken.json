{
  "contractName": "ZorroToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ZorroController.sol\":\"ZorroToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ZorroController.sol\":{\"keccak256\":\"0xa686f947f03923cad95eaace7bd5548390872a48763da37154ba537b1df00404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33174b38c829ef835f5753b4f87e8f736d5b9effa79510009c1277de0ea29167\",\"dweb:/ipfs/QmePNAWasnFJ8CJbgzxUGQzfEWUeYAZjVaX484yVYGtc3h\"]},\"project:/contracts/ZorroControllerAnalytics.sol\":{\"keccak256\":\"0xfcff7ca7209f22ecf12e7e255745bc66298276af32514f918ac926b72d81182d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4845eaa68a16a1f842670456f9da23220403c5112f52f092871be89b887352\",\"dweb:/ipfs/QmRevoUbrnWgt7SMeLAeZLkay8kogsFeP86a6QY9Cqvhor\"]},\"project:/contracts/ZorroControllerBase.sol\":{\"keccak256\":\"0xeedb1116902eaa6e35862770bb6fc24a84c8f0ef1d546358ac534f4ce35125a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6725c5a026899a9e039f152a5331b14d974bd83bc47f028193e91b796d29cb06\",\"dweb:/ipfs/QmP3QeFyWnpwjgZrBE7FH3W7zEvGN6chsUbnm5e1mMRiiw\"]},\"project:/contracts/ZorroControllerInvestment.sol\":{\"keccak256\":\"0xc0f0f4ebae380c9da20e3aabd9b46fb63d34204b9d7381a08702ae1d9990956d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3d13e1334dc62c7c27db9135a6543761f15265cc7cf759aa671a1d684675c1a\",\"dweb:/ipfs/QmVLAGaEbvZyR78dG1nXUDLiGSKQNYwz9zfGxfXjx4sChg\"]},\"project:/contracts/ZorroControllerPoolMgmt.sol\":{\"keccak256\":\"0x9192019509cb0c3185f66e0e8a928eb0b1f76db58f8543baf19d956e4910edef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3943b8364146aa60b38104b46c4f7294f0ec8761600da901979acbaab809ebd\",\"dweb:/ipfs/Qmcs21NuUD51SmAD1wNwXN2eE7vc4sxQUMcSLS2cpDU7eE\"]},\"project:/contracts/helpers/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/helpers/ERC20.sol\":{\"keccak256\":\"0xb97d224cf84ad3a6d04114d07dd1786b002bc8f5f7ca260cc45985fa9be3f30c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69c7e12ddb2c5909e54336e7286cb520b39682bcaba2900643c4fee11672aba9\",\"dweb:/ipfs/QmaBM2q4cawKJTabiLMd9MFbSdm1f424j8bUR1LwsRu3TY\"]},\"project:/contracts/helpers/Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"project:/contracts/helpers/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"project:/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x99b85810d8222d01cffa031cc4e461d22bd77b996d9b7eae5c6c9d0a7d1b989a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6016532fbb1f2b882dea28ba1b520dfb381df77e4ee80dd38e517571e7bf56c2\",\"dweb:/ipfs/QmaCueXgr4EcvbCCvpNbfERM9dsuGNJCroYAf9VpNgZVS6\"]},\"project:/contracts/libraries/Address.sol\":{\"keccak256\":\"0x7e5823057b0af146217b40ff437dc712a29039d066a5a8643e964b473b217377\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0bde962390182f5b5cb2e32d0fb2afa9328d103ed0c511599902114c38b165\",\"dweb:/ipfs/QmRToJ4WdDpimpQT1tHbuAquSTExqUUdScXjm81SPcFFpA\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0xe968a6c02ffacaef1b6dc9cdfef3f777e642cd764edfd7464802f269ccd5e65b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://abc6d6523850322d97648bb5499d9e57af54cff41480a1c764452d3388da0961\",\"dweb:/ipfs/QmRVYGQrBV52Ci8eDE28Q4aMT6t4pSe9qsNbYyh1Yj4Pf6\"]},\"project:/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xe64bbf9b03de70abb3ca9f281758b3a2a399a969beced2666d64d11948258d87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2560c2f51a55ac1e9837a86190d646765f281994859ad4ad8ee293e6ec04038e\",\"dweb:/ipfs/Qmd6KT4jQCDMNUfwPkSZw6A2qiiFj66SnRcDHYtGL5L3Zc\"]},\"project:/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/* Dependencies */\nimport \"./helpers/ERC20.sol\";\n\nimport \"./ZorroControllerBase.sol\";\n\nimport \"./ZorroControllerPoolMgmt.sol\";\n\nimport \"./ZorroControllerInvestment.sol\";\n\nimport \"./ZorroControllerAnalytics.sol\";\n\n/* Zorro ERC20 Token */\nabstract contract ZorroToken is ERC20 {\n    function mint(address _to, uint256 _amount) public virtual;\n}\n\n/* Main Contract */\n/// @title ZorroController: The main controller of the Zorro yield farming protocol. Used for cash flow operations (deposit/withdrawal), managing vaults, and rewards allocations, among other things.\ncontract ZorroController is ZorroControllerBase, ZorroControllerPoolMgmt, ZorroControllerInvestment, ZorroControllerAnalytics {\n    \n}",
  "sourcePath": "/Users/kristophm/workspace/crypto/zorro/zorro-protocol/contracts/ZorroController.sol",
  "ast": {
    "absolutePath": "project:/contracts/ZorroController.sol",
    "exportedSymbols": {
      "Address": [
        3489
      ],
      "Context": [
        2357
      ],
      "ERC20": [
        2903
      ],
      "IERC20": [
        3126
      ],
      "IERC20Metadata": [
        3151
      ],
      "IVault": [
        3194
      ],
      "Math": [
        3545
      ],
      "Ownable": [
        3008
      ],
      "ReentrancyGuard": [
        3048
      ],
      "SafeERC20": [
        3769
      ],
      "SafeMath": [
        4081
      ],
      "ZorroController": [
        26
      ],
      "ZorroControllerAnalytics": [
        285
      ],
      "ZorroControllerBase": [
        823
      ],
      "ZorroControllerInvestment": [
        2181
      ],
      "ZorroControllerPoolMgmt": [
        2335
      ],
      "ZorroToken": [
        16
      ]
    },
    "id": 27,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "project:/contracts/helpers/ERC20.sol",
        "file": "./helpers/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2904,
        "src": "76:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerBase.sol",
        "file": "./ZorroControllerBase.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 824,
        "src": "107:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerPoolMgmt.sol",
        "file": "./ZorroControllerPoolMgmt.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2336,
        "src": "144:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerInvestment.sol",
        "file": "./ZorroControllerInvestment.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2182,
        "src": "185:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerAnalytics.sol",
        "file": "./ZorroControllerAnalytics.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 286,
        "src": "228:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2903,
              "src": "326:5:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "326:5:0"
          }
        ],
        "canonicalName": "ZorroToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 16,
        "linearizedBaseContracts": [
          16,
          2903,
          3151,
          3126,
          2357
        ],
        "name": "ZorroToken",
        "nameLocation": "312:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "347:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "360:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "352:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "373:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "365:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:30:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:0"
            },
            "scope": 16,
            "src": "338:59:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 27,
        "src": "294:105:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 823,
              "src": "648:19:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "648:19:0"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ZorroControllerPoolMgmt",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2335,
              "src": "669:23:0"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "669:23:0"
          },
          {
            "baseName": {
              "id": 22,
              "name": "ZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2181,
              "src": "694:25:0"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "694:25:0"
          },
          {
            "baseName": {
              "id": 24,
              "name": "ZorroControllerAnalytics",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 285,
              "src": "721:24:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "721:24:0"
          }
        ],
        "canonicalName": "ZorroController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17,
          "nodeType": "StructuredDocumentation",
          "src": "421:199:0",
          "text": "@title ZorroController: The main controller of the Zorro yield farming protocol. Used for cash flow operations (deposit/withdrawal), managing vaults, and rewards allocations, among other things."
        },
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          285,
          2181,
          2335,
          823,
          3048,
          3008,
          2357
        ],
        "name": "ZorroController",
        "nameLocation": "629:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 27,
        "src": "620:134:0",
        "usedErrors": []
      }
    ],
    "src": "32:722:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ZorroController.sol",
    "exportedSymbols": {
      "Address": [
        3489
      ],
      "Context": [
        2357
      ],
      "ERC20": [
        2903
      ],
      "IERC20": [
        3126
      ],
      "IERC20Metadata": [
        3151
      ],
      "IVault": [
        3194
      ],
      "Math": [
        3545
      ],
      "Ownable": [
        3008
      ],
      "ReentrancyGuard": [
        3048
      ],
      "SafeERC20": [
        3769
      ],
      "SafeMath": [
        4081
      ],
      "ZorroController": [
        26
      ],
      "ZorroControllerAnalytics": [
        285
      ],
      "ZorroControllerBase": [
        823
      ],
      "ZorroControllerInvestment": [
        2181
      ],
      "ZorroControllerPoolMgmt": [
        2335
      ],
      "ZorroToken": [
        16
      ]
    },
    "id": 27,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "project:/contracts/helpers/ERC20.sol",
        "file": "./helpers/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2904,
        "src": "76:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerBase.sol",
        "file": "./ZorroControllerBase.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 824,
        "src": "107:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerPoolMgmt.sol",
        "file": "./ZorroControllerPoolMgmt.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2336,
        "src": "144:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerInvestment.sol",
        "file": "./ZorroControllerInvestment.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 2182,
        "src": "185:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ZorroControllerAnalytics.sol",
        "file": "./ZorroControllerAnalytics.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 286,
        "src": "228:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2903,
              "src": "326:5:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "326:5:0"
          }
        ],
        "canonicalName": "ZorroToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 16,
        "linearizedBaseContracts": [
          16,
          2903,
          3151,
          3126,
          2357
        ],
        "name": "ZorroToken",
        "nameLocation": "312:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "347:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "360:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "352:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "373:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "365:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:30:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:0"
            },
            "scope": 16,
            "src": "338:59:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 27,
        "src": "294:105:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 823,
              "src": "648:19:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "648:19:0"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ZorroControllerPoolMgmt",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2335,
              "src": "669:23:0"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "669:23:0"
          },
          {
            "baseName": {
              "id": 22,
              "name": "ZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2181,
              "src": "694:25:0"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "694:25:0"
          },
          {
            "baseName": {
              "id": 24,
              "name": "ZorroControllerAnalytics",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 285,
              "src": "721:24:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "721:24:0"
          }
        ],
        "canonicalName": "ZorroController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17,
          "nodeType": "StructuredDocumentation",
          "src": "421:199:0",
          "text": "@title ZorroController: The main controller of the Zorro yield farming protocol. Used for cash flow operations (deposit/withdrawal), managing vaults, and rewards allocations, among other things."
        },
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          285,
          2181,
          2335,
          823,
          3048,
          3008,
          2357
        ],
        "name": "ZorroController",
        "nameLocation": "629:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 27,
        "src": "620:134:0",
        "usedErrors": []
      }
    ],
    "src": "32:722:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-28T22:28:30.546Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}