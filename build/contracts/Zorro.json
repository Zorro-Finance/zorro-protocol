{
  "contractName": "Zorro",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"_account\":\"The address to transfer ZOR from for burning\",\"_amount\":\"The amount of ZOR to transfer and burn\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"The amount to mint\",\"_to\":\"The address to mint to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The Zorro token (cross chain)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Allows authorized burning of the Zorro token from a specified account\"},\"mint(address,uint256)\":{\"notice\":\"Allows authorized minting of the Zorro token to a specified address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ZorroTokens.sol\":\"Zorro\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/tokens/ZorroTokens.sol\":{\"keccak256\":\"0x33db888f58ec04bf7b6f5972af590d96f89565c570bd546e7b5e7fb8308741d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98171af146b7882ac1fde3bda0b3e2d9f6b531be28794f21c65fef5a34f1aa09\",\"dweb:/ipfs/QmajnhCcjmXaz5URWLqW8vHby5nsy5TYHYYSEM6kYRnGJq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f5a4f52524f0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5a4f52000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000137565b508051620000ac90600490602084019062000137565b505050620000db620000cc620000e1640100000000026401000000009004565b640100000000620000e5810204565b62000233565b3390565b60058054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014590620001dd565b90600052602060002090601f016020900481019282620001695760008555620001b4565b82601f106200018457805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b457825182559160200191906001019062000197565b50620001c2929150620001c6565b5090565b5b80821115620001c25760008155600101620001c7565b600281046001821680620001f257607f821691505b602082108114156200022d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610efc80620002436000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100b4578063a457c2d711610083578063a457c2d714610226578063a9059cbb14610239578063dd62ed3e1461024c578063f2fde38b1461028557600080fd5b8063715018a6146101e85780638da5cb5b146101f057806395d89b411461020b5780639dc29fac1461021357600080fd5b8063313ce567116100f0578063313ce56714610188578063395093511461019757806340c10f19146101aa57806370a08231146101bf57600080fd5b806306fdde0314610122578063095ea7b31461014057806318160ddd1461016357806323b872dd14610175575b600080fd5b61012a610298565b6040516101379190610cb3565b60405180910390f35b61015361014e366004610d24565b61032a565b6040519015158152602001610137565b6002545b604051908152602001610137565b610153610183366004610d4e565b610342565b60405160128152602001610137565b6101536101a5366004610d24565b610366565b6101bd6101b8366004610d24565b6103a5565b005b6101676101cd366004610d8a565b600160a060020a031660009081526020819052604090205490565b6101bd6103e9565b600554604051600160a060020a039091168152602001610137565b61012a610422565b6101bd610221366004610d24565b610431565b610153610234366004610d24565b610468565b610153610247366004610d24565b610515565b61016761025a366004610dac565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101bd610293366004610d8a565b610523565b6060600380546102a790610ddf565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610ddf565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b6000336103388185856105db565b5060019392505050565b60003361035085828561073a565b61035b8585856107cf565b506001949350505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490919061033890829086906103a0908790610e62565b6105db565b600554600160a060020a031633146103db5760405160e560020a62461bcd0281526004016103d290610e7a565b60405180910390fd5b6103e582826109ef565b5050565b600554600160a060020a031633146104165760405160e560020a62461bcd0281526004016103d290610e7a565b6104206000610ad1565b565b6060600480546102a790610ddf565b600554600160a060020a0316331461045e5760405160e560020a62461bcd0281526004016103d290610e7a565b6103e58282610b30565b336000818152600160209081526040808320600160a060020a0387168452909152812054909190838110156105085760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103d2565b61035b82868684036105db565b6000336103388185856107cf565b600554600160a060020a031633146105505760405160e560020a62461bcd0281526004016103d290610e7a565b600160a060020a0381166105cf5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d2565b6105d881610ad1565b50565b600160a060020a0383166106595760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0382166106d85760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600160a060020a0383811660009081526001602090815260408083209386168352929052205460001981146107c957818110156107bc5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d2565b6107c984848484036105db565b50505050565b600160a060020a03831661084e5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0382166108cd5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383166000908152602081905260409020548181101561095f5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a03808516600090815260208190526040808220858503905591851681529081208054849290610996908490610e62565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109e291815260200190565b60405180910390a36107c9565b600160a060020a038216610a485760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d2565b8060026000828254610a5a9190610e62565b9091555050600160a060020a03821660009081526020819052604081208054839290610a87908490610e62565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60058054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a038216610baf5760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a03821660009081526020819052604090205481811015610c415760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383166000908152602081905260408120838303905560028054849290610c70908490610eaf565b9091555050604051828152600090600160a060020a038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161072d565b600060208083528351808285015260005b81811015610ce057858101830151858201604001528201610cc4565b81811115610cf2576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a0381168114610d1f57600080fd5b919050565b60008060408385031215610d3757600080fd5b610d4083610d08565b946020939093013593505050565b600080600060608486031215610d6357600080fd5b610d6c84610d08565b9250610d7a60208501610d08565b9150604084013590509250925092565b600060208284031215610d9c57600080fd5b610da582610d08565b9392505050565b60008060408385031215610dbf57600080fd5b610dc883610d08565b9150610dd660208401610d08565b90509250929050565b600281046001821680610df357607f821691505b60208210811415610e2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610e7557610e75610e33565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610ec157610ec1610e33565b50039056fea26469706673582212201032c8c531cd910847463f76a67bfd6a87134dbbf78f524b9bcb93c8dad4e84d64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100b4578063a457c2d711610083578063a457c2d714610226578063a9059cbb14610239578063dd62ed3e1461024c578063f2fde38b1461028557600080fd5b8063715018a6146101e85780638da5cb5b146101f057806395d89b411461020b5780639dc29fac1461021357600080fd5b8063313ce567116100f0578063313ce56714610188578063395093511461019757806340c10f19146101aa57806370a08231146101bf57600080fd5b806306fdde0314610122578063095ea7b31461014057806318160ddd1461016357806323b872dd14610175575b600080fd5b61012a610298565b6040516101379190610cb3565b60405180910390f35b61015361014e366004610d24565b61032a565b6040519015158152602001610137565b6002545b604051908152602001610137565b610153610183366004610d4e565b610342565b60405160128152602001610137565b6101536101a5366004610d24565b610366565b6101bd6101b8366004610d24565b6103a5565b005b6101676101cd366004610d8a565b600160a060020a031660009081526020819052604090205490565b6101bd6103e9565b600554604051600160a060020a039091168152602001610137565b61012a610422565b6101bd610221366004610d24565b610431565b610153610234366004610d24565b610468565b610153610247366004610d24565b610515565b61016761025a366004610dac565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6101bd610293366004610d8a565b610523565b6060600380546102a790610ddf565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610ddf565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b6000336103388185856105db565b5060019392505050565b60003361035085828561073a565b61035b8585856107cf565b506001949350505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490919061033890829086906103a0908790610e62565b6105db565b600554600160a060020a031633146103db5760405160e560020a62461bcd0281526004016103d290610e7a565b60405180910390fd5b6103e582826109ef565b5050565b600554600160a060020a031633146104165760405160e560020a62461bcd0281526004016103d290610e7a565b6104206000610ad1565b565b6060600480546102a790610ddf565b600554600160a060020a0316331461045e5760405160e560020a62461bcd0281526004016103d290610e7a565b6103e58282610b30565b336000818152600160209081526040808320600160a060020a0387168452909152812054909190838110156105085760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103d2565b61035b82868684036105db565b6000336103388185856107cf565b600554600160a060020a031633146105505760405160e560020a62461bcd0281526004016103d290610e7a565b600160a060020a0381166105cf5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d2565b6105d881610ad1565b50565b600160a060020a0383166106595760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0382166106d85760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600160a060020a0383811660009081526001602090815260408083209386168352929052205460001981146107c957818110156107bc5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d2565b6107c984848484036105db565b50505050565b600160a060020a03831661084e5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0382166108cd5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383166000908152602081905260409020548181101561095f5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a03808516600090815260208190526040808220858503905591851681529081208054849290610996908490610e62565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109e291815260200190565b60405180910390a36107c9565b600160a060020a038216610a485760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d2565b8060026000828254610a5a9190610e62565b9091555050600160a060020a03821660009081526020819052604081208054839290610a87908490610e62565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60058054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a038216610baf5760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a03821660009081526020819052604090205481811015610c415760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103d2565b600160a060020a0383166000908152602081905260408120838303905560028054849290610c70908490610eaf565b9091555050604051828152600090600160a060020a038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161072d565b600060208083528351808285015260005b81811015610ce057858101830151858201604001528201610cc4565b81811115610cf2576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a0381168114610d1f57600080fd5b919050565b60008060408385031215610d3757600080fd5b610d4083610d08565b946020939093013593505050565b600080600060608486031215610d6357600080fd5b610d6c84610d08565b9250610d7a60208501610d08565b9150604084013590509250925092565b600060208284031215610d9c57600080fd5b610da582610d08565b9392505050565b60008060408385031215610dbf57600080fd5b610dc883610d08565b9150610dd660208401610d08565b90509250929050565b600281046001821680610df357607f821691505b60208210811415610e2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610e7557610e75610e33565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610ec157610ec1610e33565b50039056fea26469706673582212201032c8c531cd910847463f76a67bfd6a87134dbbf78f524b9bcb93c8dad4e84d64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:453:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:382:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "93:4:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "99:1:63",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:63"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:63",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:63"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:63",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:63"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:63"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:63"
                  },
                  "nodeType": "YulIf",
                  "src": "157:61:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:168:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "301:77:63",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:88:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:88:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "399:1:63",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:4:63",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "392:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "392:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "392:15:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "427:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:4:63",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:15:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:63"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:63"
                  },
                  "nodeType": "YulIf",
                  "src": "227:218:63"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:63",
                "type": ""
              }
            ],
            "src": "14:437:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8272:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:63",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:63"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:63"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:63"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:63",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:63"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:63"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:63",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:63"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:63"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:63"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:63"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:63"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:63"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:63"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:63"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:63"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:63"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:63"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:63"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:63",
                    "statements": []
                  },
                  "src": "294:140:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:63"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:63"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:63",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:63"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:63"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:63"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:63",
                "type": ""
              }
            ],
            "src": "14:597:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:147:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:63"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "790:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "799:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "802:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "792:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "792:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "792:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:63"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "744:42:63",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:54:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:65:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:73:63"
                  },
                  "nodeType": "YulIf",
                  "src": "713:93:63"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:63",
                "type": ""
              }
            ],
            "src": "616:196:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "904:167:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "950:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "959:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "962:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "952:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "952:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "952:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "925:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "921:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "921:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "946:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "917:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "914:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "975:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1004:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "985:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "975:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1023:42:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1050:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1061:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1033:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:32:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1023:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "862:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "873:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "885:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "893:6:63",
                "type": ""
              }
            ],
            "src": "817:254:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1171:92:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1181:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1193:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1189:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1181:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1248:6:63"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1241:6:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1241:14:63"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1234:6:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:22:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:41:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1216:41:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1162:4:63",
                "type": ""
              }
            ],
            "src": "1076:187:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1369:76:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1379:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1391:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1387:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1379:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1421:9:63"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:25:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1414:25:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1338:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1349:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1360:4:63",
                "type": ""
              }
            ],
            "src": "1268:177:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:224:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1600:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1609:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1612:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1602:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1602:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1602:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1575:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1571:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1571:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1567:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1567:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1564:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1625:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1654:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1635:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1635:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1625:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1673:48:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1706:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1717:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1702:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1702:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1683:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:38:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1673:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:42:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1757:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1753:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1753:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1740:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:32:63"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1730:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1504:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1515:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1535:6:63",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1543:6:63",
                "type": ""
              }
            ],
            "src": "1450:328:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1880:87:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1890:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1902:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1913:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1898:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1898:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1890:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1932:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1947:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1955:4:63",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1943:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1943:17:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1925:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1925:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1925:36:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1849:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1860:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1871:4:63",
                "type": ""
              }
            ],
            "src": "1783:184:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:116:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2088:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2097:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2100:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2090:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2090:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2090:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2063:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2072:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2059:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2084:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2055:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2052:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2113:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2142:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2123:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2113:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2008:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2019:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2031:6:63",
                "type": ""
              }
            ],
            "src": "1972:186:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:125:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2274:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2286:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2297:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2282:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2282:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2274:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2316:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2331:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2339:42:63",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2327:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2327:55:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2309:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2309:74:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2309:74:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2233:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2244:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2255:4:63",
                "type": ""
              }
            ],
            "src": "2163:226:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2481:173:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2527:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2536:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2539:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2529:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2529:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2529:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2502:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2511:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2498:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2498:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2523:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2494:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2491:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2552:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2581:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2562:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2552:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2600:48:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2633:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2644:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2629:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2629:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2610:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:38:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2439:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2450:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2462:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2470:6:63",
                "type": ""
              }
            ],
            "src": "2394:260:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2714:382:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:22:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2738:4:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2744:1:63",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2734:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:12:63"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2724:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2755:38:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2785:4:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2791:1:63",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2781:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2781:12:63"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2759:18:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2832:31:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2834:27:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2848:6:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2856:4:63",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2844:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2844:17:63"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2834:6:63"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2812:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2805:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:26:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2802:61:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2922:168:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2943:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2946:77:63",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2936:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2936:88:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2936:88:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3044:1:63",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3047:4:63",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3037:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3037:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3037:15:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3072:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3075:4:63",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3065:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3065:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3065:15:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2878:18:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2901:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2909:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2898:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:14:63"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2875:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:38:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2872:218:63"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2694:4:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2703:6:63",
                "type": ""
              }
            ],
            "src": "2659:437:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3133:152:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3150:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:77:63",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3143:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:88:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3143:88:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3247:1:63",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3250:4:63",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3240:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3240:15:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3271:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3274:4:63",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3264:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3264:15:63"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3101:184:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3338:80:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3365:22:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3367:16:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3367:18:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3367:18:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3354:1:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3361:1:63"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3357:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3357:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3351:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3351:13:63"
                  },
                  "nodeType": "YulIf",
                  "src": "3348:39:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3396:16:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3407:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3410:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3403:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3403:9:63"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3396:3:63"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3321:1:63",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3324:1:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3330:3:63",
                "type": ""
              }
            ],
            "src": "3290:128:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3597:182:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3614:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3625:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3607:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3607:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3607:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3648:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3659:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3644:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3644:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3664:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3637:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3687:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3698:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3683:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3683:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3703:34:63",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3676:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3676:62:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3747:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3759:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3770:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3755:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3747:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3574:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3588:4:63",
                "type": ""
              }
            ],
            "src": "3423:356:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3958:227:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3975:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3986:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3968:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3968:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4009:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4020:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4005:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4005:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4025:2:63",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3998:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3998:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3998:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4048:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4059:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4044:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4044:18:63"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4064:34:63",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4037:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4037:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4037:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4119:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4130:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:18:63"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4135:7:63",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:35:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:35:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4152:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4164:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4175:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4160:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4152:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3935:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3949:4:63",
                "type": ""
              }
            ],
            "src": "3784:401:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4364:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4381:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4392:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4374:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4374:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4374:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4415:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4426:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4411:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4411:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4431:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4404:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4404:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4404:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4454:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4465:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4450:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4450:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4470:34:63",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4443:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4443:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4443:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4525:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4536:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4521:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4521:18:63"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4541:8:63",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4514:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4559:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4571:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4582:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4567:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4567:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4559:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4341:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4355:4:63",
                "type": ""
              }
            ],
            "src": "4190:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4771:226:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4788:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4799:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4781:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4781:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4822:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4833:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4818:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4818:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4838:2:63",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4811:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4811:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4811:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4861:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4872:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4857:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:18:63"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4877:34:63",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4850:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4850:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4850:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4932:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4943:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4928:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4928:18:63"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4948:6:63",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4921:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4921:34:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4964:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4976:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4987:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4972:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4972:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4964:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4748:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4762:4:63",
                "type": ""
              }
            ],
            "src": "4597:400:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5176:224:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5193:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5204:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5186:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5227:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5238:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5223:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5223:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5243:2:63",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5216:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5216:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5216:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5266:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5277:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5262:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5262:18:63"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5282:34:63",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5255:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5255:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5255:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5337:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5348:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5333:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5333:18:63"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5353:4:63",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5326:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5326:32:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5326:32:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5367:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5379:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5390:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5375:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5367:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5153:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5167:4:63",
                "type": ""
              }
            ],
            "src": "5002:398:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5579:179:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5596:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5607:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5589:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5589:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5589:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5630:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5641:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5626:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5626:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:2:63",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5619:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5619:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5619:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5669:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5680:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5665:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5665:18:63"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5685:31:63",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5658:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5658:59:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5658:59:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5726:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5738:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5749:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5734:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5734:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5726:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5556:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5570:4:63",
                "type": ""
              }
            ],
            "src": "5405:353:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5937:227:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5954:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5965:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5947:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5947:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5947:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5988:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5999:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5984:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5984:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6004:2:63",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5977:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5977:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6027:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6038:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6023:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6023:18:63"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6043:34:63",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6016:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6016:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6098:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6109:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6094:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6094:18:63"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6114:7:63",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6087:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:35:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6087:35:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6131:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6143:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6154:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6139:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6139:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6131:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5914:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5928:4:63",
                "type": ""
              }
            ],
            "src": "5763:401:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6343:225:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6360:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6371:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6353:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6353:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6353:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6394:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6405:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6390:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6390:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6410:2:63",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6383:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6383:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6383:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6433:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6444:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6429:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6429:18:63"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6449:34:63",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6422:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6422:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6422:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6504:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6515:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6500:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6500:18:63"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6520:5:63",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6493:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:33:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6493:33:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6535:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6547:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6558:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6543:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6543:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6535:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6320:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6334:4:63",
                "type": ""
              }
            ],
            "src": "6169:399:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6747:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6764:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6775:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6757:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6757:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6757:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6798:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6809:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6794:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6794:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6814:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6787:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6787:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6787:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6837:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6848:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6833:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6833:18:63"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6853:34:63",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6826:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6826:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6826:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6908:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6919:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6904:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6904:18:63"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6924:8:63",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6897:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6897:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6897:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6942:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6954:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6965:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6950:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6950:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6942:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6724:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6738:4:63",
                "type": ""
              }
            ],
            "src": "6573:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7154:181:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7171:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7182:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7164:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7164:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7164:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7205:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7216:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7201:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7201:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7221:2:63",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7194:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7194:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7244:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7255:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7240:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7240:18:63"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7260:33:63",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7233:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7233:61:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7233:61:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7303:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7315:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7326:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7311:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7311:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7303:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7131:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7145:4:63",
                "type": ""
              }
            ],
            "src": "6980:355:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7514:223:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7531:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7542:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7524:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7524:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7565:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7576:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7561:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7561:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7581:2:63",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7554:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7554:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7554:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7604:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7615:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7600:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7600:18:63"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7620:34:63",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7593:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7593:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7593:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7675:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7686:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7671:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7671:18:63"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7691:3:63",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7664:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7664:31:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7664:31:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7704:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7716:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7727:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7712:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7712:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7704:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7491:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7505:4:63",
                "type": ""
              }
            ],
            "src": "7340:397:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7916:224:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7933:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7944:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7926:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7926:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7926:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7967:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7978:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7963:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7963:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7983:2:63",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7956:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7956:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7956:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8006:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8017:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8002:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8002:18:63"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8022:34:63",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7995:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7995:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7995:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8077:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8088:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8073:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8073:18:63"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8093:4:63",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8066:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8066:32:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8066:32:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8107:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8119:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8130:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8115:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8115:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8107:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7893:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7907:4:63",
                "type": ""
              }
            ],
            "src": "7742:398:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8194:76:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8216:22:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8218:16:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8218:18:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8218:18:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8210:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8213:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8207:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8207:8:63"
                  },
                  "nodeType": "YulIf",
                  "src": "8204:34:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8247:17:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8259:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8262:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8255:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8255:9:63"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8247:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8176:1:63",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8179:1:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8185:4:63",
                "type": ""
              }
            ],
            "src": "8145:125:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "329:740:58:-:0;;;;;;;;;;;;;1978:113:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:14;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:11;940:12;:10;;;:12;;;:::i;:::-;921:18;;;;:32;:::i;:::-;329:740:58;;640:96:19;719:10;;640:96::o;2270:187:11:-;2362:6;;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;;;;;2378:17:11;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;329:740:58:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;329:740:58;;;-1:-1:-1;329:740:58;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:437:63;99:1;89:12;;146:1;136:12;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:218;;;301:77;298:1;291:88;402:4;399:1;392:15;430:4;427:1;420:15;227:218;;14:437;;;:::o;:::-;329:740:58;;;;;;",
  "deployedSourceMap": "329:740:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1241:14:63;;1234:22;1216:41;;1204:2;1189:18;4433:197:14;1076:187:63;3244:106:14;3331:12;;3244:106;;;1414:25:63;;;1402:2;1387:18;3244:106:14;1268:177:63;5192:286:14;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1925:36:63;;1913:2;1898:18;3093:91:14;1783:184:63;5873:236:14;;;;;;:::i;:::-;;:::i;552:148:58:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:14;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:14;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:11;;;:::i;1036:85::-;1108:6;;1036:85;;-1:-1:-1;;;;;1108:6:11;;;2309:74:63;;2297:2;2282:18;1036:85:11;2163:226:63;2367:102:14;;;:::i;923:144:58:-;;;;;;:::i;:::-;;:::i;6596:429:14:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:14;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1918:198:11;;;;;;:::i;:::-;;:::i;2156:98:14:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:19;4570:32:14;719:10:19;4586:7:14;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:14;;4433:197;-1:-1:-1;;;4433:197:14:o;5192:286::-;5319:4;719:10:19;5375:38:14;5391:4;719:10:19;5406:6:14;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:14;;5192:286;-1:-1:-1;;;;5192:286:14:o;5873:236::-;719:10:19;5961:4:14;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:14;;;;;;;;;;5961:4;;719:10:19;6015:66:14;;719:10:19;;6040:27:14;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;552:148:58:-;1108:6:11;;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;;;;;;;;;674:19:58::1;680:3;685:7;674:5;:19::i;:::-;552:148:::0;;:::o;1668:101:11:-;1108:6;;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2367:102:14:-;2423:13;2455:7;2448:14;;;;;:::i;923:144:58:-;1108:6:11;;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;1036:24:58::1;1042:8;1052:7;1036:5;:24::i;6596:429:14:-:0;719:10:19;6689:4:14;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:14;;;;;;;;;;6689:4;;719:10:19;6815:35:14;;;;6807:85;;;;-1:-1:-1;;;;;6807:85:14;;3986:2:63;6807:85:14;;;3968:21:63;4025:2;4005:18;;;3998:30;4064:34;4044:18;;;4037:62;4135:7;4115:18;;;4108:35;4160:19;;6807:85:14;3784:401:63;6807:85:14;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:19;3862:28:14;719:10:19;3879:2:14;3883:6;3862:9;:28::i;1918:198:11:-;1108:6;;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;-1:-1:-1;;;;;1998:73:11;;4392:2:63;1998:73:11::1;::::0;::::1;4374:21:63::0;4431:2;4411:18;;;4404:30;4470:34;4450:18;;;4443:62;4541:8;4521:18;;;4514:36;4567:19;;1998:73:11::1;4190:402:63::0;1998:73:11::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10123:370:14:-;-1:-1:-1;;;;;10254:19:14;;10246:68;;;;-1:-1:-1;;;;;10246:68:14;;4799:2:63;10246:68:14;;;4781:21:63;4838:2;4818:18;;;4811:30;4877:34;4857:18;;;4850:62;4948:6;4928:18;;;4921:34;4972:19;;10246:68:14;4597:400:63;10246:68:14;-1:-1:-1;;;;;10332:21:14;;10324:68;;;;-1:-1:-1;;;;;10324:68:14;;5204:2:63;10324:68:14;;;5186:21:63;5243:2;5223:18;;;5216:30;5282:34;5262:18;;;5255:62;5353:4;5333:18;;;5326:32;5375:19;;10324:68:14;5002:398:63;10324:68:14;-1:-1:-1;;;;;10403:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1414:25:63;;;10454:32:14;;1387:18:63;10454:32:14;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:14;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:14;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;;;11019:68:14;;5607:2:63;11019:68:14;;;5589:21:63;5646:2;5626:18;;;5619:30;5685:31;5665:18;;;5658:59;5734:18;;11019:68:14;5405:353:63;11019:68:14;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:14;;7606:68;;;;-1:-1:-1;;;;;7606:68:14;;5965:2:63;7606:68:14;;;5947:21:63;6004:2;5984:18;;;5977:30;6043:34;6023:18;;;6016:62;6114:7;6094:18;;;6087:35;6139:19;;7606:68:14;5763:401:63;7606:68:14;-1:-1:-1;;;;;7692:16:14;;7684:64;;;;-1:-1:-1;;;;;7684:64:14;;6371:2:63;7684:64:14;;;6353:21:63;6410:2;6390:18;;;6383:30;6449:34;6429:18;;;6422:62;6520:5;6500:18;;;6493:33;6543:19;;7684:64:14;6169:399:63;7684:64:14;-1:-1:-1;;;;;7830:15:14;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;;;7855:72:14;;6775:2:63;7855:72:14;;;6757:21:63;6814:2;6794:18;;;6787:30;6853:34;6833:18;;;6826:62;6924:8;6904:18;;;6897:36;6950:19;;7855:72:14;6573:402:63;7855:72:14;-1:-1:-1;;;;;7961:15:14;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:14;8067:4;-1:-1:-1;;;;;8058:26:14;;8077:6;8058:26;;;;1414:25:63;;1402:2;1387:18;;1268:177;8058:26:14;;;;;;;;8095:37;9124:576;8415:389;-1:-1:-1;;;;;8498:21:14;;8490:65;;;;-1:-1:-1;;;;;8490:65:14;;7182:2:63;8490:65:14;;;7164:21:63;7221:2;7201:18;;;7194:30;7260:33;7240:18;;;7233:61;7311:18;;8490:65:14;6980:355:63;8490:65:14;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:14;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:14;;1414:25:63;;;-1:-1:-1;;;;;8701:37:14;;;8718:1;;8701:37;;1402:2:63;1387:18;8701:37:14;;;;;;;552:148:58;;:::o;2270:187:11:-;2362:6;;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;2378:17:11;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:14:-;-1:-1:-1;;;;;9207:21:14;;9199:67;;;;-1:-1:-1;;;;;9199:67:14;;7542:2:63;9199:67:14;;;7524:21:63;7581:2;7561:18;;;7554:30;7620:34;7600:18;;;7593:62;7691:3;7671:18;;;7664:31;7712:19;;9199:67:14;7340:397:63;9199:67:14;-1:-1:-1;;;;;9362:18:14;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;;;9390:71:14;;7944:2:63;9390:71:14;;;7926:21:63;7983:2;7963:18;;;7956:30;8022:34;8002:18;;;7995:62;8093:4;8073:18;;;8066:32;8115:19;;9390:71:14;7742:398:63;9390:71:14;-1:-1:-1;;;;;9495:18:14;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:14;;1414:25:63;;;9623:1:14;;-1:-1:-1;;;;;9597:37:14;;;;;1402:2:63;1387:18;9597:37:14;1268:177:63;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:63;574:15;-1:-1:-1;;570:29:63;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:63:o;616:196::-;684:20;;-1:-1:-1;;;;;733:54:63;;723:65;;713:93;;802:1;799;792:12;713:93;616:196;;;:::o;817:254::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;985:29;1004:9;985:29;:::i;:::-;975:39;1061:2;1046:18;;;;1033:32;;-1:-1:-1;;;817:254:63:o;1450:328::-;1527:6;1535;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1635:29;1654:9;1635:29;:::i;:::-;1625:39;;1683:38;1717:2;1706:9;1702:18;1683:38;:::i;:::-;1673:48;;1768:2;1757:9;1753:18;1740:32;1730:42;;1450:328;;;;;:::o;1972:186::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;2123:29;2142:9;2123:29;:::i;:::-;2113:39;1972:186;-1:-1:-1;;;1972:186:63:o;2394:260::-;2462:6;2470;2523:2;2511:9;2502:7;2498:23;2494:32;2491:52;;;2539:1;2536;2529:12;2491:52;2562:29;2581:9;2562:29;:::i;:::-;2552:39;;2610:38;2644:2;2633:9;2629:18;2610:38;:::i;:::-;2600:48;;2394:260;;;;;:::o;2659:437::-;2744:1;2734:12;;2791:1;2781:12;;;2802:61;;2856:4;2848:6;2844:17;2834:27;;2802:61;2909:2;2901:6;2898:14;2878:18;2875:38;2872:218;;;2946:77;2943:1;2936:88;3047:4;3044:1;3037:15;3075:4;3072:1;3065:15;2872:218;;2659:437;;;:::o;3101:184::-;3153:77;3150:1;3143:88;3250:4;3247:1;3240:15;3274:4;3271:1;3264:15;3290:128;3330:3;3361:1;3357:6;3354:1;3351:13;3348:39;;;3367:18;;:::i;:::-;-1:-1:-1;3403:9:63;;3290:128::o;3423:356::-;3625:2;3607:21;;;3644:18;;;3637:30;3703:34;3698:2;3683:18;;3676:62;3770:2;3755:18;;3423:356::o;8145:125::-;8185:4;8213:1;8210;8207:8;8204:34;;;8218:18;;:::i;:::-;-1:-1:-1;8255:9:63;;8145:125::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title The Zorro token (cross chain)\ncontract Zorro is ERC20(\"ZORRO\", \"ZOR\"), Ownable {\n    /// @notice Allows authorized minting of the Zorro token to a specified address\n    /// @param _to The address to mint to\n    /// @param _amount The amount to mint\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        // TODO: change modifier for this function\n        _mint(_to, _amount);\n    }\n\n    /// @notice Allows authorized burning of the Zorro token from a specified account\n    /// @param _account The address to transfer ZOR from for burning\n    /// @param _amount The amount of ZOR to transfer and burn\n    function burn(address _account, uint256 _amount) public onlyOwner {\n        // TODO change modifier here\n        _burn(_account, _amount);\n    }\n}\n\n/// @title Zorro USD synthetic token (used for bridges)\ncontract ZUSDC is ERC20(\"ZORRO_USDC\", \"ZUSDC\"), Ownable {\n    /// @notice Mints ERC20 tokens\n    /// @dev Can only be called by owner\n    /// @param _to The address to send minted tokens to\n    /// @param _amount The amount of tokens to mint\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    /// @notice Burns ERC20 tokens\n    /// @dev Can only be called by owner\n    /// @param _account The address to burn tokens from\n    /// @param _amount The amount of tokens to burn\n    function burn(address _account, uint256 _amount) public onlyOwner {\n        _burn(_account, _amount);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/ZorroTokens.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ZorroTokens.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "ERC20": [
        3000
      ],
      "IERC20": [
        3078
      ],
      "IERC20Metadata": [
        3103
      ],
      "Ownable": [
        2280
      ],
      "SafeERC20": [
        3327
      ],
      "ZUSDC": [
        15596
      ],
      "Zorro": [
        15556
      ]
    },
    "id": 15597,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15512,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:58"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 15513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3001,
        "src": "57:55:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 15514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3623,
        "src": "114:51:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3328,
        "src": "167:65:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 15516,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 2281,
        "src": "234:52:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 15519,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "353:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 15520,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "362:5:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 15518,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3000,
              "src": "347:5:58"
            },
            "id": 15521,
            "nodeType": "InheritanceSpecifier",
            "src": "347:21:58"
          },
          {
            "baseName": {
              "id": 15522,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "370:7:58"
            },
            "id": 15523,
            "nodeType": "InheritanceSpecifier",
            "src": "370:7:58"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15517,
          "nodeType": "StructuredDocumentation",
          "src": "288:41:58",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 15556,
        "linearizedBaseContracts": [
          15556,
          2280,
          3000,
          3103,
          3078,
          3644
        ],
        "name": "Zorro",
        "nameLocation": "338:5:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15538,
              "nodeType": "Block",
              "src": "613:87:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15534,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15526,
                        "src": "680:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15535,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15528,
                        "src": "685:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15533,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "674:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15537,
                  "nodeType": "ExpressionStatement",
                  "src": "674:19:58"
                }
              ]
            },
            "documentation": {
              "id": 15524,
              "nodeType": "StructuredDocumentation",
              "src": "384:163:58",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 15539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15530,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "603:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "603:9:58"
              }
            ],
            "name": "mint",
            "nameLocation": "561:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15526,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "574:3:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15539,
                  "src": "566:11:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15528,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "587:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15539,
                  "src": "579:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "565:30:58"
            },
            "returnParameters": {
              "id": 15532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:0:58"
            },
            "scope": 15556,
            "src": "552:148:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15554,
              "nodeType": "Block",
              "src": "989:78:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15550,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15542,
                        "src": "1042:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15551,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15544,
                        "src": "1052:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15549,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "1036:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15553,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:24:58"
                }
              ]
            },
            "documentation": {
              "id": 15540,
              "nodeType": "StructuredDocumentation",
              "src": "706:212:58",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 15555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15546,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "979:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "979:9:58"
              }
            ],
            "name": "burn",
            "nameLocation": "932:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15542,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "945:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15555,
                  "src": "937:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15544,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "963:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15555,
                  "src": "955:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "936:35:58"
            },
            "returnParameters": {
              "id": 15548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:58"
            },
            "scope": 15556,
            "src": "923:144:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15597,
        "src": "329:740:58",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f5f55534443",
                "id": 15559,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1151:12:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_11600d18e1e43c96750a6d4ec87ca0d083e6f1b403595a2727e37990d24f2e84",
                  "typeString": "literal_string \"ZORRO_USDC\""
                },
                "value": "ZORRO_USDC"
              },
              {
                "hexValue": "5a55534443",
                "id": 15560,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1165:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_ee82d582c0b069c6fd8da8a05bae1d47ee55e93dbc4e84058bdb382e80588ea4",
                  "typeString": "literal_string \"ZUSDC\""
                },
                "value": "ZUSDC"
              }
            ],
            "baseName": {
              "id": 15558,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3000,
              "src": "1145:5:58"
            },
            "id": 15561,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:28:58"
          },
          {
            "baseName": {
              "id": 15562,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "1175:7:58"
            },
            "id": 15563,
            "nodeType": "InheritanceSpecifier",
            "src": "1175:7:58"
          }
        ],
        "canonicalName": "ZUSDC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15557,
          "nodeType": "StructuredDocumentation",
          "src": "1071:56:58",
          "text": "@title Zorro USD synthetic token (used for bridges)"
        },
        "fullyImplemented": true,
        "id": 15596,
        "linearizedBaseContracts": [
          15596,
          2280,
          3000,
          3103,
          3078,
          3644
        ],
        "name": "ZUSDC",
        "nameLocation": "1136:5:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15578,
              "nodeType": "Block",
              "src": "1434:36:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15574,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15566,
                        "src": "1450:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15575,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15568,
                        "src": "1455:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15573,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "1444:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15577,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:19:58"
                }
              ]
            },
            "documentation": {
              "id": 15564,
              "nodeType": "StructuredDocumentation",
              "src": "1189:179:58",
              "text": "@notice Mints ERC20 tokens\n @dev Can only be called by owner\n @param _to The address to send minted tokens to\n @param _amount The amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 15579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15570,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1424:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:9:58"
              }
            ],
            "name": "mint",
            "nameLocation": "1382:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15566,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1395:3:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15579,
                  "src": "1387:11:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15568,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1408:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15579,
                  "src": "1400:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:30:58"
            },
            "returnParameters": {
              "id": 15572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:58"
            },
            "scope": 15596,
            "src": "1373:97:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15594,
              "nodeType": "Block",
              "src": "1726:41:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15590,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15582,
                        "src": "1742:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15591,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15584,
                        "src": "1752:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15589,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "1736:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15593,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:24:58"
                }
              ]
            },
            "documentation": {
              "id": 15580,
              "nodeType": "StructuredDocumentation",
              "src": "1476:179:58",
              "text": "@notice Burns ERC20 tokens\n @dev Can only be called by owner\n @param _account The address to burn tokens from\n @param _amount The amount of tokens to burn"
            },
            "functionSelector": "9dc29fac",
            "id": 15595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15587,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15586,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1716:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1716:9:58"
              }
            ],
            "name": "burn",
            "nameLocation": "1669:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15582,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1682:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15595,
                  "src": "1674:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15584,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1700:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15595,
                  "src": "1692:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:35:58"
            },
            "returnParameters": {
              "id": 15588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:58"
            },
            "scope": 15596,
            "src": "1660:107:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15597,
        "src": "1127:642:58",
        "usedErrors": []
      }
    ],
    "src": "32:1738:58"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/ZorroTokens.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "ERC20": [
        3000
      ],
      "IERC20": [
        3078
      ],
      "IERC20Metadata": [
        3103
      ],
      "Ownable": [
        2280
      ],
      "SafeERC20": [
        3327
      ],
      "ZUSDC": [
        15596
      ],
      "Zorro": [
        15556
      ]
    },
    "id": 15597,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15512,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:58"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 15513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3001,
        "src": "57:55:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 15514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3623,
        "src": "114:51:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 3328,
        "src": "167:65:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 15516,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15597,
        "sourceUnit": 2281,
        "src": "234:52:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 15519,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "353:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 15520,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "362:5:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 15518,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3000,
              "src": "347:5:58"
            },
            "id": 15521,
            "nodeType": "InheritanceSpecifier",
            "src": "347:21:58"
          },
          {
            "baseName": {
              "id": 15522,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "370:7:58"
            },
            "id": 15523,
            "nodeType": "InheritanceSpecifier",
            "src": "370:7:58"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15517,
          "nodeType": "StructuredDocumentation",
          "src": "288:41:58",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 15556,
        "linearizedBaseContracts": [
          15556,
          2280,
          3000,
          3103,
          3078,
          3644
        ],
        "name": "Zorro",
        "nameLocation": "338:5:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15538,
              "nodeType": "Block",
              "src": "613:87:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15534,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15526,
                        "src": "680:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15535,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15528,
                        "src": "685:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15533,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "674:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15537,
                  "nodeType": "ExpressionStatement",
                  "src": "674:19:58"
                }
              ]
            },
            "documentation": {
              "id": 15524,
              "nodeType": "StructuredDocumentation",
              "src": "384:163:58",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 15539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15530,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "603:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "603:9:58"
              }
            ],
            "name": "mint",
            "nameLocation": "561:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15526,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "574:3:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15539,
                  "src": "566:11:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15528,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "587:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15539,
                  "src": "579:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "565:30:58"
            },
            "returnParameters": {
              "id": 15532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:0:58"
            },
            "scope": 15556,
            "src": "552:148:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15554,
              "nodeType": "Block",
              "src": "989:78:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15550,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15542,
                        "src": "1042:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15551,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15544,
                        "src": "1052:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15549,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "1036:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15553,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:24:58"
                }
              ]
            },
            "documentation": {
              "id": 15540,
              "nodeType": "StructuredDocumentation",
              "src": "706:212:58",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 15555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15546,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "979:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "979:9:58"
              }
            ],
            "name": "burn",
            "nameLocation": "932:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15542,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "945:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15555,
                  "src": "937:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15544,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "963:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15555,
                  "src": "955:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "936:35:58"
            },
            "returnParameters": {
              "id": 15548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:58"
            },
            "scope": 15556,
            "src": "923:144:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15597,
        "src": "329:740:58",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f5f55534443",
                "id": 15559,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1151:12:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_11600d18e1e43c96750a6d4ec87ca0d083e6f1b403595a2727e37990d24f2e84",
                  "typeString": "literal_string \"ZORRO_USDC\""
                },
                "value": "ZORRO_USDC"
              },
              {
                "hexValue": "5a55534443",
                "id": 15560,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1165:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_ee82d582c0b069c6fd8da8a05bae1d47ee55e93dbc4e84058bdb382e80588ea4",
                  "typeString": "literal_string \"ZUSDC\""
                },
                "value": "ZUSDC"
              }
            ],
            "baseName": {
              "id": 15558,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3000,
              "src": "1145:5:58"
            },
            "id": 15561,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:28:58"
          },
          {
            "baseName": {
              "id": 15562,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "1175:7:58"
            },
            "id": 15563,
            "nodeType": "InheritanceSpecifier",
            "src": "1175:7:58"
          }
        ],
        "canonicalName": "ZUSDC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15557,
          "nodeType": "StructuredDocumentation",
          "src": "1071:56:58",
          "text": "@title Zorro USD synthetic token (used for bridges)"
        },
        "fullyImplemented": true,
        "id": 15596,
        "linearizedBaseContracts": [
          15596,
          2280,
          3000,
          3103,
          3078,
          3644
        ],
        "name": "ZUSDC",
        "nameLocation": "1136:5:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15578,
              "nodeType": "Block",
              "src": "1434:36:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15574,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15566,
                        "src": "1450:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15575,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15568,
                        "src": "1455:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15573,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "1444:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15577,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:19:58"
                }
              ]
            },
            "documentation": {
              "id": 15564,
              "nodeType": "StructuredDocumentation",
              "src": "1189:179:58",
              "text": "@notice Mints ERC20 tokens\n @dev Can only be called by owner\n @param _to The address to send minted tokens to\n @param _amount The amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 15579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15570,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1424:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:9:58"
              }
            ],
            "name": "mint",
            "nameLocation": "1382:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15566,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1395:3:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15579,
                  "src": "1387:11:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15568,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1408:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15579,
                  "src": "1400:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:30:58"
            },
            "returnParameters": {
              "id": 15572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:58"
            },
            "scope": 15596,
            "src": "1373:97:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15594,
              "nodeType": "Block",
              "src": "1726:41:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15590,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15582,
                        "src": "1742:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15591,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15584,
                        "src": "1752:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15589,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "1736:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15593,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:24:58"
                }
              ]
            },
            "documentation": {
              "id": 15580,
              "nodeType": "StructuredDocumentation",
              "src": "1476:179:58",
              "text": "@notice Burns ERC20 tokens\n @dev Can only be called by owner\n @param _account The address to burn tokens from\n @param _amount The amount of tokens to burn"
            },
            "functionSelector": "9dc29fac",
            "id": 15595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15587,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15586,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1716:9:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1716:9:58"
              }
            ],
            "name": "burn",
            "nameLocation": "1669:4:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15582,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1682:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15595,
                  "src": "1674:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15584,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1700:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 15595,
                  "src": "1692:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:35:58"
            },
            "returnParameters": {
              "id": 15588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:58"
            },
            "scope": 15596,
            "src": "1660:107:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15597,
        "src": "1127:642:58",
        "usedErrors": []
      }
    ],
    "src": "32:1738:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x11ad01A960ACe4d3dA81Ca1844B843682Df2f8f8",
      "transactionHash": "0xff596c69ff9be6e5c330ff17ea9d70d6d8c01bf30acfe4337a3f26b8d89befeb"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-01T15:24:52.995Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "_account": "The address to transfer ZOR from for burning",
          "_amount": "The amount of ZOR to transfer and burn"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "The amount to mint",
          "_to": "The address to mint to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "The Zorro token (cross chain)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(address,uint256)": {
        "notice": "Allows authorized burning of the Zorro token from a specified account"
      },
      "mint(address,uint256)": {
        "notice": "Allows authorized minting of the Zorro token to a specified address"
      }
    },
    "version": 1
  }
}