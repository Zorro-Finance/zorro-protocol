{
  "contractName": "Zorro",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroController",
          "type": "address"
        }
      ],
      "name": "setZorroController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroController\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroController\",\"type\":\"address\"}],\"name\":\"setZorroController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"_account\":\"The address to transfer ZOR from for burning\",\"_amount\":\"The amount of ZOR to transfer and burn\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"The amount to mint\",\"_to\":\"The address to mint to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The Zorro token (cross chain)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Allows authorized burning of the Zorro token from a specified account\"},\"mint(address,uint256)\":{\"notice\":\"Allows authorized minting of the Zorro token to a specified address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ZorroToken.sol\":\"Zorro\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/interfaces/IZorro.sol\":{\"keccak256\":\"0x0bc5c8ba8e537c2800d4bfa81f60537eb063dccb880c18464a0e4717bbba40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91193eef46fa3d9831fd5c084fef34206d3fa4b6e7c439d82c15bf69d3707c8\",\"dweb:/ipfs/QmfFuPXAk6p8ZvHMbitFuY6fLPqmG9XQHaQzifDbieeY9D\"]},\"project:/contracts/tokens/ZorroToken.sol\":{\"keccak256\":\"0x2d9fe5d62701a1276af697744d9aebde62d11381af7faf6bec011e4e831b2fe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca99910ae8115c287f30bcb707df179a2675f47b47fd83b610142cc76051c3f\",\"dweb:/ipfs/QmWfB8WfoWWinuyzKwanpGffYrVuFJmuWSmqLUR8iSt6Ri\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010d0380380620010d08339810160408190526200003491620001db565b604051806040016040528060058152602001645a4f52524f60d81b815250604051806040016040528060038152602001622d27a960e91b81525081600390805190602001906200008692919062000135565b5080516200009c90600490602084019062000135565b505050620000b9620000b3620000df60201b60201c565b620000e3565b600680546001600160a01b0319166001600160a01b03929092169190911790556200024a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000143906200020d565b90600052602060002090601f016020900481019282620001675760008555620001b2565b82601f106200018257805160ff1916838001178555620001b2565b82800160010185558215620001b2579182015b82811115620001b257825182559160200191906001019062000195565b50620001c0929150620001c4565b5090565b5b80821115620001c05760008155600101620001c5565b600060208284031215620001ee57600080fd5b81516001600160a01b03811681146200020657600080fd5b9392505050565b600181811c908216806200022257607f821691505b602082108114156200024457634e487b7160e01b600052602260045260246000fd5b50919050565b610e76806200025a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d71461023c578063a9059cbb1461024f578063b1414dbb14610262578063dd62ed3e14610275578063f2fde38b146102ae57600080fd5b8063715018a6146101f45780638da5cb5b146101fc57806395d89b41146102215780639dc29fac1461022957600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806364f6c7b8146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102c1565b6040516101309190610c5f565b60405180910390f35b61014c610147366004610cd0565b610353565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610cfa565b61036b565b60405160128152602001610130565b61014c61019e366004610cd0565b61038f565b6101b66101b1366004610cd0565b6103ce565b005b6101b66101c6366004610d36565b610437565b6101606101d9366004610d36565b6001600160a01b031660009081526020819052604090205490565b6101b6610483565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6101236104b9565b6101b6610237366004610cd0565b6104c8565b61014c61024a366004610cd0565b610528565b61014c61025d366004610cd0565b6105ba565b600654610209906001600160a01b031681565b610160610283366004610d58565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102bc366004610d36565b6105c8565b6060600380546102d090610d8b565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc90610d8b565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b600033610361818585610663565b5060019392505050565b600033610379858285610788565b61038485858561081a565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061036190829086906103c9908790610ddc565b610663565b6006546001600160a01b0316336001600160a01b0316146104295760405162461bcd60e51b815260206004820152601060248201526f10bd37b93937a1b7b73a3937b63632b960811b60448201526064015b60405180910390fd5b61043382826109e8565b5050565b6005546001600160a01b031633146104615760405162461bcd60e51b815260040161042090610df4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146104ad5760405162461bcd60e51b815260040161042090610df4565b6104b76000610ac7565b565b6060600480546102d090610d8b565b6006546001600160a01b0316336001600160a01b03161461051e5760405162461bcd60e51b815260206004820152601060248201526f10bd37b93937a1b7b73a3937b63632b960811b6044820152606401610420565b6104338282610b19565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610420565b6103848286868403610663565b60003361036181858561081a565b6005546001600160a01b031633146105f25760405162461bcd60e51b815260040161042090610df4565b6001600160a01b0381166106575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610420565b61066081610ac7565b50565b6001600160a01b0383166106c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610420565b6001600160a01b0382166107265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461081457818110156108075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610420565b6108148484848403610663565b50505050565b6001600160a01b03831661087e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610420565b6001600160a01b0382166108e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b038316600090815260208190526040902054818110156109585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061098f908490610ddc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109db91815260200190565b60405180910390a3610814565b6001600160a01b038216610a3e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610420565b8060026000828254610a509190610ddc565b90915550506001600160a01b03821660009081526020819052604081208054839290610a7d908490610ddc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610420565b6001600160a01b03821660009081526020819052604090205481811015610bed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610420565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c1c908490610e29565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161077b565b600060208083528351808285015260005b81811015610c8c57858101830151858201604001528201610c70565b81811115610c9e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ccb57600080fd5b919050565b60008060408385031215610ce357600080fd5b610cec83610cb4565b946020939093013593505050565b600080600060608486031215610d0f57600080fd5b610d1884610cb4565b9250610d2660208501610cb4565b9150604084013590509250925092565b600060208284031215610d4857600080fd5b610d5182610cb4565b9392505050565b60008060408385031215610d6b57600080fd5b610d7483610cb4565b9150610d8260208401610cb4565b90509250929050565b600181811c90821680610d9f57607f821691505b60208210811415610dc057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610def57610def610dc6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610e3b57610e3b610dc6565b50039056fea264697066735822122054aa0d04abc014fa6ca05b234f79b559ee992a3856b4c17bb4708d368ba8be5a64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d71461023c578063a9059cbb1461024f578063b1414dbb14610262578063dd62ed3e14610275578063f2fde38b146102ae57600080fd5b8063715018a6146101f45780638da5cb5b146101fc57806395d89b41146102215780639dc29fac1461022957600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806364f6c7b8146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102c1565b6040516101309190610c5f565b60405180910390f35b61014c610147366004610cd0565b610353565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610cfa565b61036b565b60405160128152602001610130565b61014c61019e366004610cd0565b61038f565b6101b66101b1366004610cd0565b6103ce565b005b6101b66101c6366004610d36565b610437565b6101606101d9366004610d36565b6001600160a01b031660009081526020819052604090205490565b6101b6610483565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6101236104b9565b6101b6610237366004610cd0565b6104c8565b61014c61024a366004610cd0565b610528565b61014c61025d366004610cd0565b6105ba565b600654610209906001600160a01b031681565b610160610283366004610d58565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102bc366004610d36565b6105c8565b6060600380546102d090610d8b565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc90610d8b565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b600033610361818585610663565b5060019392505050565b600033610379858285610788565b61038485858561081a565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061036190829086906103c9908790610ddc565b610663565b6006546001600160a01b0316336001600160a01b0316146104295760405162461bcd60e51b815260206004820152601060248201526f10bd37b93937a1b7b73a3937b63632b960811b60448201526064015b60405180910390fd5b61043382826109e8565b5050565b6005546001600160a01b031633146104615760405162461bcd60e51b815260040161042090610df4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146104ad5760405162461bcd60e51b815260040161042090610df4565b6104b76000610ac7565b565b6060600480546102d090610d8b565b6006546001600160a01b0316336001600160a01b03161461051e5760405162461bcd60e51b815260206004820152601060248201526f10bd37b93937a1b7b73a3937b63632b960811b6044820152606401610420565b6104338282610b19565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610420565b6103848286868403610663565b60003361036181858561081a565b6005546001600160a01b031633146105f25760405162461bcd60e51b815260040161042090610df4565b6001600160a01b0381166106575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610420565b61066081610ac7565b50565b6001600160a01b0383166106c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610420565b6001600160a01b0382166107265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461081457818110156108075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610420565b6108148484848403610663565b50505050565b6001600160a01b03831661087e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610420565b6001600160a01b0382166108e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b038316600090815260208190526040902054818110156109585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061098f908490610ddc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109db91815260200190565b60405180910390a3610814565b6001600160a01b038216610a3e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610420565b8060026000828254610a509190610ddc565b90915550506001600160a01b03821660009081526020819052604081208054839290610a7d908490610ddc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610420565b6001600160a01b03821660009081526020819052604090205481811015610bed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610420565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c1c908490610e29565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161077b565b600060208083528351808285015260005b81811015610c8c57858101830151858201604001528201610c70565b81811115610c9e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ccb57600080fd5b919050565b60008060408385031215610ce357600080fd5b610cec83610cb4565b946020939093013593505050565b600080600060608486031215610d0f57600080fd5b610d1884610cb4565b9250610d2660208501610cb4565b9150604084013590509250925092565b600060208284031215610d4857600080fd5b610d5182610cb4565b9392505050565b60008060408385031215610d6b57600080fd5b610d7483610cb4565b9150610d8260208401610cb4565b90509250929050565b600181811c90821680610d9f57607f821691505b60208210811415610dc057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610def57610def610dc6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610e3b57610e3b610dc6565b50039056fea264697066735822122054aa0d04abc014fa6ca05b234f79b559ee992a3856b4c17bb4708d368ba8be5a64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:691:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:46"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:46"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:46",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:46",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:46"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:46"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:46",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:46",
                "type": ""
              }
            ],
            "src": "14:290:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "364:325:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "374:22:46",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "388:1:46",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "391:4:46"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:12:46"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "374:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "405:38:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "435:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:1:46",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "431:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:12:46"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "409:18:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "482:31:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "484:27:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "498:6:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "506:4:46",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "494:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "494:17:46"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "484:6:46"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "462:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:26:46"
                  },
                  "nodeType": "YulIf",
                  "src": "452:61:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:111:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "600:3:46",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "605:10:46",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "596:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "596:20:46"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:31:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:31:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "637:1:46",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "640:4:46",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "630:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "630:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "630:15:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "665:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "668:4:46",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "658:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "658:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "658:15:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "528:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "548:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "548:14:46"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "525:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:38:46"
                  },
                  "nodeType": "YulIf",
                  "src": "522:161:46"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "344:4:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "353:6:46",
                "type": ""
              }
            ],
            "src": "309:380:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8457:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:46",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:46",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:46",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:46"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:46"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:46"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:46"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:46",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:46",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:46"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:46"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:46"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:46"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:46"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:46"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:46"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:46"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:46"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:46"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:46"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:46",
                    "statements": []
                  },
                  "src": "294:140:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:46"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:46",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:46",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:46"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:46",
                "type": ""
              }
            ],
            "src": "14:597:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:46"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:46"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:46"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:46",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:46",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:46"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:46"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:46"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:46",
                "type": ""
              }
            ],
            "src": "616:173:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:46"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:46",
                "type": ""
              }
            ],
            "src": "794:254:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:46",
                "type": ""
              }
            ],
            "src": "1053:187:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:76:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:46"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:25:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:25:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:46",
                "type": ""
              }
            ],
            "src": "1245:177:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:224:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1577:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1579:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1579:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1561:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1612:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:48:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1660:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:38:46"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1707:42:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1717:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:46"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1481:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1492:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1504:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:46",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1520:6:46",
                "type": ""
              }
            ],
            "src": "1427:328:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1857:87:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1867:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1867:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1909:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:4:46",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1920:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:17:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:36:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:36:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1826:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:46",
                "type": ""
              }
            ],
            "src": "1760:184:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:116:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2065:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2074:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2077:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2067:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2067:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2040:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2049:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2036:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2032:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2029:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2100:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1985:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1996:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2008:6:46",
                "type": ""
              }
            ],
            "src": "1949:186:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2241:102:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2263:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2274:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2259:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2251:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2293:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2308:6:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2324:3:46",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2329:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2320:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2320:11:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2333:1:46",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2316:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2316:19:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2304:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2304:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:51:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2286:51:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2210:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2221:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2232:4:46",
                "type": ""
              }
            ],
            "src": "2140:203:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2435:173:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2481:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2490:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2493:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2483:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2483:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2483:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2456:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2452:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2448:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2448:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2445:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2506:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2535:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2516:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2506:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2554:48:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2587:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2598:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2583:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2564:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:38:46"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2554:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2404:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2416:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2424:6:46",
                "type": ""
              }
            ],
            "src": "2348:260:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2668:325:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2678:22:46",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2692:1:46",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2695:4:46"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2688:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:12:46"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2678:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2709:38:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2739:4:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:1:46",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2735:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:12:46"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2713:18:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2786:31:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2788:27:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2802:6:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2810:4:46",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2798:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2798:17:46"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2788:6:46"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2766:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2759:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:26:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2756:61:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2876:111:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2897:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2904:3:46",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2909:10:46",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2900:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2900:20:46"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2890:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2890:31:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2890:31:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2941:1:46",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2944:4:46",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2934:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2934:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2934:15:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2969:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2972:4:46",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2962:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2962:15:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2962:15:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2832:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2855:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2863:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2852:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:14:46"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2829:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:38:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2826:161:46"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2648:4:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2657:6:46",
                "type": ""
              }
            ],
            "src": "2613:380:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3030:95:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3047:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3054:3:46",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3059:10:46",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3050:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3050:20:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3040:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3040:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3040:31:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3087:1:46",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3090:4:46",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3080:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3080:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3080:15:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3114:4:46",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3104:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3104:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3104:15:46"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2998:127:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3178:80:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3205:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3207:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3207:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3207:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3194:1:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3201:1:46"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3197:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3197:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3191:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3191:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "3188:39:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3236:16:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3247:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3250:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3243:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3243:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3236:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3161:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3164:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3170:3:46",
                "type": ""
              }
            ],
            "src": "3130:128:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3437:166:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3454:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3465:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3447:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3447:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3488:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3499:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3504:2:46",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3477:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3477:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:18:46"
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3543:18:46",
                        "type": "",
                        "value": "!zorroController"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3516:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:46:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3516:46:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3571:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3583:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3594:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3579:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3571:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3414:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3428:4:46",
                "type": ""
              }
            ],
            "src": "3263:340:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3782:182:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3799:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3810:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3792:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3792:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3792:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3833:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3844:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3829:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3829:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3849:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3822:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3822:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3822:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3872:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3883:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3868:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3868:18:46"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3888:34:46",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3861:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3861:62:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3932:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3944:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3955:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3940:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3940:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3932:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3759:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3773:4:46",
                "type": ""
              }
            ],
            "src": "3608:356:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4143:227:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4160:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4171:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4153:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4153:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4194:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4205:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4190:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4190:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4210:2:46",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4183:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4183:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4233:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4244:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:18:46"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4249:34:46",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4222:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4222:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4304:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4315:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4300:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4300:18:46"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4320:7:46",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4293:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4293:35:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4293:35:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4337:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4349:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4360:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4337:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4120:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4134:4:46",
                "type": ""
              }
            ],
            "src": "3969:401:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4549:228:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4566:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4577:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4559:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4559:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4559:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4600:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4611:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4596:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4596:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4616:2:46",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4589:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4639:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4650:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4635:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:18:46"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4655:34:46",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4628:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4628:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4628:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4710:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4721:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4706:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4706:18:46"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4726:8:46",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4699:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4699:36:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4699:36:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4744:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4756:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4767:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4752:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4744:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4526:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4540:4:46",
                "type": ""
              }
            ],
            "src": "4375:402:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4956:226:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4973:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4984:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4966:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4966:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4966:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5007:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5018:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5003:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5003:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5023:2:46",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4996:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4996:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4996:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5046:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5057:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5042:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5042:18:46"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5062:34:46",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5035:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5035:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5035:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5117:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5128:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5113:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5113:18:46"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5133:6:46",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5106:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5106:34:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5149:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5161:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5172:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5157:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5157:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5149:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4933:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4947:4:46",
                "type": ""
              }
            ],
            "src": "4782:400:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5361:224:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5378:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5389:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5371:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5371:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5371:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5412:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5423:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5408:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5408:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5428:2:46",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5401:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5401:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5451:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5462:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5447:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5447:18:46"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5467:34:46",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5440:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5440:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5522:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5533:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5518:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5518:18:46"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5538:4:46",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5511:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5511:32:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5511:32:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5552:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5564:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5575:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5560:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5560:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5552:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5338:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5352:4:46",
                "type": ""
              }
            ],
            "src": "5187:398:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5764:179:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5781:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5774:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5774:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5815:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5826:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5811:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5811:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5831:2:46",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5804:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5854:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5865:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5850:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5850:18:46"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5870:31:46",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5843:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5843:59:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5843:59:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5911:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5923:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5934:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5919:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5919:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5911:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5741:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5755:4:46",
                "type": ""
              }
            ],
            "src": "5590:353:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6122:227:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6139:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6150:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6132:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6132:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6173:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6184:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6169:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6169:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6189:2:46",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6162:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6162:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6212:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6223:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6208:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6208:18:46"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6228:34:46",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6201:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6201:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6201:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6283:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6294:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6279:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6279:18:46"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6299:7:46",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6272:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:35:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6272:35:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6316:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6328:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6339:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6324:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6324:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6316:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6099:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6113:4:46",
                "type": ""
              }
            ],
            "src": "5948:401:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6528:225:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6545:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6556:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6538:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6538:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6538:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6579:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6590:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6575:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6575:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6595:2:46",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6568:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6568:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6568:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6618:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6629:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6614:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6614:18:46"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6634:34:46",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6607:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6607:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6607:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6689:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6700:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6685:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6685:18:46"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6705:5:46",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6678:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6678:33:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6678:33:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6720:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6732:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6743:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6728:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6728:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6720:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6505:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6519:4:46",
                "type": ""
              }
            ],
            "src": "6354:399:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6932:228:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6949:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6960:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6942:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6942:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6942:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6983:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6994:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6979:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6979:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6999:2:46",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6972:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6972:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6972:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7022:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7033:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7018:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7018:18:46"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7038:34:46",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7011:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7011:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7011:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7093:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7104:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7089:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7089:18:46"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7109:8:46",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7082:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7082:36:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7082:36:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7127:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7139:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7150:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7135:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7135:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7127:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6909:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6923:4:46",
                "type": ""
              }
            ],
            "src": "6758:402:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7339:181:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7356:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7367:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7349:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7349:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7349:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7390:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7401:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7386:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7386:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7406:2:46",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7379:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7379:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7379:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7429:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7440:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7425:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7425:18:46"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7445:33:46",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7418:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7418:61:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7418:61:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7488:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7500:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7496:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7488:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7316:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7330:4:46",
                "type": ""
              }
            ],
            "src": "7165:355:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7699:223:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7716:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7727:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7750:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7761:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7746:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7746:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7766:2:46",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7739:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7739:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7739:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7789:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7800:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7785:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7785:18:46"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7805:34:46",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7778:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7778:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7778:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7860:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7871:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7856:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7856:18:46"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7876:3:46",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7849:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7849:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7849:31:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7889:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7901:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7912:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7889:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7676:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7690:4:46",
                "type": ""
              }
            ],
            "src": "7525:397:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8101:224:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8118:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8129:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8111:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8111:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8111:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8152:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8163:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8148:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8148:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8168:2:46",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8141:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8141:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8141:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8191:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8202:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8187:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8187:18:46"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8207:34:46",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8180:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8180:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8180:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8262:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8273:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8258:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8258:18:46"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8278:4:46",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8251:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8251:32:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8251:32:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8292:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8304:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8315:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8300:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8292:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8078:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8092:4:46",
                "type": ""
              }
            ],
            "src": "7927:398:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8379:76:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8401:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8403:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8403:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8403:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8395:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8398:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8392:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8392:8:46"
                  },
                  "nodeType": "YulIf",
                  "src": "8389:34:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8432:17:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8444:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8447:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8440:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8440:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8432:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8361:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8364:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8370:4:46",
                "type": ""
              }
            ],
            "src": "8330:125:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"!zorroController\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "366:1215:45:-:0;;;451:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:11;;;;;;;;;;;;;-1:-1:-1;;;1978:113:11;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:11;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:11;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:10;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;499:22:45;:41;;-1:-1:-1;;;;;;499:41:45;-1:-1:-1;;;;;499:41:45;;;;;;;;;;366:1215;;640:96:16;719:10;;640:96::o;2270:187:10:-;2362:6;;;-1:-1:-1;;;;;2378:17:10;;;-1:-1:-1;;;;;;2378:17:10;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;366:1215:45:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;366:1215:45;;;-1:-1:-1;366:1215:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:46;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:46;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:46:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;366:1215:45;;;;;;",
  "deployedSourceMap": "366:1215:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:46;;1211:22;1193:41;;1181:2;1166:18;4433:197:11;1053:187:46;3244:106:11;3331:12;;3244:106;;;1391:25:46;;;1379:2;1364:18;3244:106:11;1245:177:46;5192:286:11;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:46;;1890:2;1875:18;3093:91:11;1760:184:46;5873:236:11;;;;;;:::i;:::-;;:::i;1112:107:45:-;;;;;;:::i;:::-;;:::i;:::-;;783:131;;;;;;:::i;:::-;;:::i;3408:125:11:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:11;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:10;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:10;1036:85;;;-1:-1:-1;;;;;2304:32:46;;;2286:51;;2274:2;2259:18;1036:85:10;2140:203:46;2367:102:11;;;:::i;1442:137:45:-;;;;;;:::i;:::-;;:::i;6596:429:11:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;721:37:45:-;;;;;-1:-1:-1;;;;;721:37:45;;;3976:149:11;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:11;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1918:198:10;;;;;;:::i;:::-;;:::i;2156:98:11:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:16;4570:32:11;719:10:16;4586:7:11;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:11;;4433:197;-1:-1:-1;;;4433:197:11:o;5192:286::-;5319:4;719:10:16;5375:38:11;5391:4;719:10:16;5406:6:11;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:11;;5192:286;-1:-1:-1;;;;5192:286:11:o;5873:236::-;719:10:16;5961:4:11;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:11;;;;;;;;;;5961:4;;719:10:16;6015:66:11;;719:10:16;;6040:27:11;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;1112:107:45:-;638:22;;-1:-1:-1;;;;;638:22:45;719:10:16;-1:-1:-1;;;;;622:38:45;;614:67;;;;-1:-1:-1;;;614:67:45;;3465:2:46;614:67:45;;;3447:21:46;3504:2;3484:18;;;3477:30;-1:-1:-1;;;3523:18:46;;;3516:46;3579:18;;614:67:45;;;;;;;;;1193:19:::1;1199:3;1204:7;1193:5;:19::i;:::-;1112:107:::0;;:::o;783:131::-;1108:6:10;;-1:-1:-1;;;;;1108:6:10;719:10:16;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;866:22:45::1;:41:::0;;-1:-1:-1;;;;;;866:41:45::1;-1:-1:-1::0;;;;;866:41:45;;;::::1;::::0;;;::::1;::::0;;783:131::o;1668:101:10:-;1108:6;;-1:-1:-1;;;;;1108:6:10;719:10:16;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2367:102:11:-;2423:13;2455:7;2448:14;;;;;:::i;1442:137:45:-;638:22;;-1:-1:-1;;;;;638:22:45;719:10:16;-1:-1:-1;;;;;622:38:45;;614:67;;;;-1:-1:-1;;;614:67:45;;3465:2:46;614:67:45;;;3447:21:46;3504:2;3484:18;;;3477:30;-1:-1:-1;;;3523:18:46;;;3516:46;3579:18;;614:67:45;3263:340:46;614:67:45;1548:24:::1;1554:8;1564:7;1548:5;:24::i;6596:429:11:-:0;719:10:16;6689:4:11;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:11;;;;;;;;;;6689:4;;719:10:16;6815:35:11;;;;6807:85;;;;-1:-1:-1;;;6807:85:11;;4171:2:46;6807:85:11;;;4153:21:46;4210:2;4190:18;;;4183:30;4249:34;4229:18;;;4222:62;-1:-1:-1;;;4300:18:46;;;4293:35;4345:19;;6807:85:11;3969:401:46;6807:85:11;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:16;3862:28:11;719:10:16;3879:2:11;3883:6;3862:9;:28::i;1918:198:10:-;1108:6;;-1:-1:-1;;;;;1108:6:10;719:10:16;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:10;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:10;;4577:2:46;1998:73:10::1;::::0;::::1;4559:21:46::0;4616:2;4596:18;;;4589:30;4655:34;4635:18;;;4628:62;-1:-1:-1;;;4706:18:46;;;4699:36;4752:19;;1998:73:10::1;4375:402:46::0;1998:73:10::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10123:370:11:-;-1:-1:-1;;;;;10254:19:11;;10246:68;;;;-1:-1:-1;;;10246:68:11;;4984:2:46;10246:68:11;;;4966:21:46;5023:2;5003:18;;;4996:30;5062:34;5042:18;;;5035:62;-1:-1:-1;;;5113:18:46;;;5106:34;5157:19;;10246:68:11;4782:400:46;10246:68:11;-1:-1:-1;;;;;10332:21:11;;10324:68;;;;-1:-1:-1;;;10324:68:11;;5389:2:46;10324:68:11;;;5371:21:46;5428:2;5408:18;;;5401:30;5467:34;5447:18;;;5440:62;-1:-1:-1;;;5518:18:46;;;5511:32;5560:19;;10324:68:11;5187:398:46;10324:68:11;-1:-1:-1;;;;;10403:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1391:25:46;;;10454:32:11;;1364:18:46;10454:32:11;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:11;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:11;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:11;;5792:2:46;11019:68:11;;;5774:21:46;5831:2;5811:18;;;5804:30;5870:31;5850:18;;;5843:59;5919:18;;11019:68:11;5590:353:46;11019:68:11;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:11;;7606:68;;;;-1:-1:-1;;;7606:68:11;;6150:2:46;7606:68:11;;;6132:21:46;6189:2;6169:18;;;6162:30;6228:34;6208:18;;;6201:62;-1:-1:-1;;;6279:18:46;;;6272:35;6324:19;;7606:68:11;5948:401:46;7606:68:11;-1:-1:-1;;;;;7692:16:11;;7684:64;;;;-1:-1:-1;;;7684:64:11;;6556:2:46;7684:64:11;;;6538:21:46;6595:2;6575:18;;;6568:30;6634:34;6614:18;;;6607:62;-1:-1:-1;;;6685:18:46;;;6678:33;6728:19;;7684:64:11;6354:399:46;7684:64:11;-1:-1:-1;;;;;7830:15:11;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:11;;6960:2:46;7855:72:11;;;6942:21:46;6999:2;6979:18;;;6972:30;7038:34;7018:18;;;7011:62;-1:-1:-1;;;7089:18:46;;;7082:36;7135:19;;7855:72:11;6758:402:46;7855:72:11;-1:-1:-1;;;;;7961:15:11;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:11;8067:4;-1:-1:-1;;;;;8058:26:11;;8077:6;8058:26;;;;1391:25:46;;1379:2;1364:18;;1245:177;8058:26:11;;;;;;;;8095:37;9124:576;8415:389;-1:-1:-1;;;;;8498:21:11;;8490:65;;;;-1:-1:-1;;;8490:65:11;;7367:2:46;8490:65:11;;;7349:21:46;7406:2;7386:18;;;7379:30;7445:33;7425:18;;;7418:61;7496:18;;8490:65:11;7165:355:46;8490:65:11;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:11;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:11;;1391:25:46;;;-1:-1:-1;;;;;8701:37:11;;;8718:1;;8701:37;;1379:2:46;1364:18;8701:37:11;;;;;;;1112:107:45;;:::o;2270:187:10:-;2362:6;;;-1:-1:-1;;;;;2378:17:10;;;-1:-1:-1;;;;;;2378:17:10;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:11:-;-1:-1:-1;;;;;9207:21:11;;9199:67;;;;-1:-1:-1;;;9199:67:11;;7727:2:46;9199:67:11;;;7709:21:46;7766:2;7746:18;;;7739:30;7805:34;7785:18;;;7778:62;-1:-1:-1;;;7856:18:46;;;7849:31;7897:19;;9199:67:11;7525:397:46;9199:67:11;-1:-1:-1;;;;;9362:18:11;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:11;;8129:2:46;9390:71:11;;;8111:21:46;8168:2;8148:18;;;8141:30;8207:34;8187:18;;;8180:62;-1:-1:-1;;;8258:18:46;;;8251:32;8300:19;;9390:71:11;7927:398:46;9390:71:11;-1:-1:-1;;;;;9495:18:11;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:11;;1391:25:46;;;9623:1:11;;-1:-1:-1;;;;;9597:37:11;;;;;1379:2:46;1364:18;9597:37:11;1245:177:46;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:46;574:15;-1:-1:-1;;570:29:46;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:46:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:46;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:46:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:46:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;2998:127::-;3059:10;3054:3;3050:20;3047:1;3040:31;3090:4;3087:1;3080:15;3114:4;3111:1;3104:15;3130:128;3170:3;3201:1;3197:6;3194:1;3191:13;3188:39;;;3207:18;;:::i;:::-;-1:-1:-1;3243:9:46;;3130:128::o;3608:356::-;3810:2;3792:21;;;3829:18;;;3822:30;3888:34;3883:2;3868:18;;3861:62;3955:2;3940:18;;3608:356::o;8330:125::-;8370:4;8398:1;8395;8392:8;8389:34;;;8403:18;;:::i;:::-;-1:-1:-1;8440:9:46;;8330:125::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../interfaces/IZorro.sol\";\n\n\n/// @title The Zorro token (cross chain)\ncontract Zorro is IZorro, ERC20(\"ZORRO\", \"ZOR\"), Ownable {\n    /* Constructor */\n    constructor(address _zorroController) {\n        zorroControllerAddress = _zorroController;\n    }\n\n    /* Modifiers */\n    modifier onlyZorroController() {\n        require(_msgSender() == zorroControllerAddress, \"!zorroController\");\n        _;\n    }\n\n    /* State */\n    address public zorroControllerAddress;\n\n    /* Setters */\n    function setZorroController(address _zorroController) external onlyOwner {\n        zorroControllerAddress = _zorroController;\n    }\n    \n    /* Functions */\n    /// @notice Allows authorized minting of the Zorro token to a specified address\n    /// @param _to The address to mint to\n    /// @param _amount The amount to mint\n    function mint(address _to, uint256 _amount) public onlyZorroController {\n        _mint(_to, _amount);\n    }\n\n    /// @notice Allows authorized burning of the Zorro token from a specified account\n    /// @param _account The address to transfer ZOR from for burning\n    /// @param _amount The amount of ZOR to transfer and burn\n    function burn(address _account, uint256 _amount)\n        public\n        onlyZorroController\n    {\n        _burn(_account, _amount);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/ZorroToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ZorroToken.sol",
    "exportedSymbols": {
      "Address": [
        2604
      ],
      "Context": [
        2626
      ],
      "ERC20": [
        1982
      ],
      "IERC20": [
        2060
      ],
      "IERC20Metadata": [
        2085
      ],
      "IERC20Upgradeable": [
        380
      ],
      "IZorro": [
        9096
      ],
      "Ownable": [
        1394
      ],
      "SafeERC20": [
        2309
      ],
      "Zorro": [
        10150
      ]
    },
    "id": 10151,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10067,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 1983,
        "src": "57:55:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 10069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 2605,
        "src": "114:51:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 2310,
        "src": "167:65:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 1395,
        "src": "234:52:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorro.sol",
        "file": "../interfaces/IZorro.sol",
        "id": 10072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 9097,
        "src": "288:34:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10074,
              "name": "IZorro",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9096,
              "src": "384:6:45"
            },
            "id": 10075,
            "nodeType": "InheritanceSpecifier",
            "src": "384:6:45"
          },
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 10077,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "398:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 10078,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "407:5:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 10076,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1982,
              "src": "392:5:45"
            },
            "id": 10079,
            "nodeType": "InheritanceSpecifier",
            "src": "392:21:45"
          },
          {
            "baseName": {
              "id": 10080,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1394,
              "src": "415:7:45"
            },
            "id": 10081,
            "nodeType": "InheritanceSpecifier",
            "src": "415:7:45"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10073,
          "nodeType": "StructuredDocumentation",
          "src": "325:41:45",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 10150,
        "linearizedBaseContracts": [
          10150,
          1394,
          1982,
          2085,
          2060,
          2626,
          9096
        ],
        "name": "Zorro",
        "nameLocation": "375:5:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "489:58:45",
              "statements": [
                {
                  "expression": {
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10086,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10105,
                      "src": "499:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10087,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10083,
                      "src": "524:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "499:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10089,
                  "nodeType": "ExpressionStatement",
                  "src": "499:41:45"
                }
              ]
            },
            "id": 10091,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10083,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "471:16:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "463:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "462:26:45"
            },
            "returnParameters": {
              "id": 10085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:45"
            },
            "scope": 10150,
            "src": "451:96:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "604:95:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10094,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2616,
                            "src": "622:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "622:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10096,
                          "name": "zorroControllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10105,
                          "src": "638:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "622:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "id": 10098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "662:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        },
                        "value": "!zorroController"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        }
                      ],
                      "id": 10093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "614:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:67:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10100,
                  "nodeType": "ExpressionStatement",
                  "src": "614:67:45"
                },
                {
                  "id": 10101,
                  "nodeType": "PlaceholderStatement",
                  "src": "691:1:45"
                }
              ]
            },
            "id": 10103,
            "name": "onlyZorroController",
            "nameLocation": "582:19:45",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:45"
            },
            "src": "573:126:45",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b1414dbb",
            "id": 10105,
            "mutability": "mutable",
            "name": "zorroControllerAddress",
            "nameLocation": "736:22:45",
            "nodeType": "VariableDeclaration",
            "scope": 10150,
            "src": "721:37:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "721:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9081
            ],
            "body": {
              "id": 10116,
              "nodeType": "Block",
              "src": "856:58:45",
              "statements": [
                {
                  "expression": {
                    "id": 10114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10112,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10105,
                      "src": "866:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10113,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10107,
                      "src": "891:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "866:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10115,
                  "nodeType": "ExpressionStatement",
                  "src": "866:41:45"
                }
              ]
            },
            "functionSelector": "64f6c7b8",
            "id": 10117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10109,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1336,
                  "src": "846:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "846:9:45"
              }
            ],
            "name": "setZorroController",
            "nameLocation": "792:18:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10107,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "819:16:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10117,
                  "src": "811:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:26:45"
            },
            "returnParameters": {
              "id": 10111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:45"
            },
            "scope": 10150,
            "src": "783:131:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9088
            ],
            "body": {
              "id": 10132,
              "nodeType": "Block",
              "src": "1183:36:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10128,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10120,
                        "src": "1199:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10129,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10122,
                        "src": "1204:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10127,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1799,
                      "src": "1193:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10131,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:19:45"
                }
              ]
            },
            "documentation": {
              "id": 10118,
              "nodeType": "StructuredDocumentation",
              "src": "944:163:45",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 10133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10124,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10103,
                  "src": "1163:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1163:19:45"
              }
            ],
            "name": "mint",
            "nameLocation": "1121:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10120,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1134:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10133,
                  "src": "1126:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10122,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1147:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10133,
                  "src": "1139:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:30:45"
            },
            "returnParameters": {
              "id": 10126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:0:45"
            },
            "scope": 10150,
            "src": "1112:107:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9095
            ],
            "body": {
              "id": 10148,
              "nodeType": "Block",
              "src": "1538:41:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10144,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10136,
                        "src": "1554:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10145,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "1564:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10143,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "1548:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:24:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10147,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:24:45"
                }
              ]
            },
            "documentation": {
              "id": 10134,
              "nodeType": "StructuredDocumentation",
              "src": "1225:212:45",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 10149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10140,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10103,
                  "src": "1514:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:19:45"
              }
            ],
            "name": "burn",
            "nameLocation": "1451:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10136,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1464:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10149,
                  "src": "1456:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10138,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1482:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10149,
                  "src": "1474:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:35:45"
            },
            "returnParameters": {
              "id": 10142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:45"
            },
            "scope": 10150,
            "src": "1442:137:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10151,
        "src": "366:1215:45",
        "usedErrors": []
      }
    ],
    "src": "32:1550:45"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/ZorroToken.sol",
    "exportedSymbols": {
      "Address": [
        2604
      ],
      "Context": [
        2626
      ],
      "ERC20": [
        1982
      ],
      "IERC20": [
        2060
      ],
      "IERC20Metadata": [
        2085
      ],
      "IERC20Upgradeable": [
        380
      ],
      "IZorro": [
        9096
      ],
      "Ownable": [
        1394
      ],
      "SafeERC20": [
        2309
      ],
      "Zorro": [
        10150
      ]
    },
    "id": 10151,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10067,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 1983,
        "src": "57:55:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 10069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 2605,
        "src": "114:51:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 2310,
        "src": "167:65:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 1395,
        "src": "234:52:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorro.sol",
        "file": "../interfaces/IZorro.sol",
        "id": 10072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10151,
        "sourceUnit": 9097,
        "src": "288:34:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10074,
              "name": "IZorro",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9096,
              "src": "384:6:45"
            },
            "id": 10075,
            "nodeType": "InheritanceSpecifier",
            "src": "384:6:45"
          },
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 10077,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "398:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 10078,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "407:5:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 10076,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1982,
              "src": "392:5:45"
            },
            "id": 10079,
            "nodeType": "InheritanceSpecifier",
            "src": "392:21:45"
          },
          {
            "baseName": {
              "id": 10080,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1394,
              "src": "415:7:45"
            },
            "id": 10081,
            "nodeType": "InheritanceSpecifier",
            "src": "415:7:45"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10073,
          "nodeType": "StructuredDocumentation",
          "src": "325:41:45",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 10150,
        "linearizedBaseContracts": [
          10150,
          1394,
          1982,
          2085,
          2060,
          2626,
          9096
        ],
        "name": "Zorro",
        "nameLocation": "375:5:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "489:58:45",
              "statements": [
                {
                  "expression": {
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10086,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10105,
                      "src": "499:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10087,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10083,
                      "src": "524:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "499:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10089,
                  "nodeType": "ExpressionStatement",
                  "src": "499:41:45"
                }
              ]
            },
            "id": 10091,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10083,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "471:16:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "463:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "462:26:45"
            },
            "returnParameters": {
              "id": 10085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:45"
            },
            "scope": 10150,
            "src": "451:96:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "604:95:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10094,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2616,
                            "src": "622:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "622:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10096,
                          "name": "zorroControllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10105,
                          "src": "638:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "622:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "id": 10098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "662:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        },
                        "value": "!zorroController"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        }
                      ],
                      "id": 10093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "614:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:67:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10100,
                  "nodeType": "ExpressionStatement",
                  "src": "614:67:45"
                },
                {
                  "id": 10101,
                  "nodeType": "PlaceholderStatement",
                  "src": "691:1:45"
                }
              ]
            },
            "id": 10103,
            "name": "onlyZorroController",
            "nameLocation": "582:19:45",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:45"
            },
            "src": "573:126:45",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b1414dbb",
            "id": 10105,
            "mutability": "mutable",
            "name": "zorroControllerAddress",
            "nameLocation": "736:22:45",
            "nodeType": "VariableDeclaration",
            "scope": 10150,
            "src": "721:37:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "721:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9081
            ],
            "body": {
              "id": 10116,
              "nodeType": "Block",
              "src": "856:58:45",
              "statements": [
                {
                  "expression": {
                    "id": 10114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10112,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10105,
                      "src": "866:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10113,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10107,
                      "src": "891:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "866:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10115,
                  "nodeType": "ExpressionStatement",
                  "src": "866:41:45"
                }
              ]
            },
            "functionSelector": "64f6c7b8",
            "id": 10117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10109,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1336,
                  "src": "846:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "846:9:45"
              }
            ],
            "name": "setZorroController",
            "nameLocation": "792:18:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10107,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "819:16:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10117,
                  "src": "811:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:26:45"
            },
            "returnParameters": {
              "id": 10111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:45"
            },
            "scope": 10150,
            "src": "783:131:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9088
            ],
            "body": {
              "id": 10132,
              "nodeType": "Block",
              "src": "1183:36:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10128,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10120,
                        "src": "1199:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10129,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10122,
                        "src": "1204:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10127,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1799,
                      "src": "1193:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10131,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:19:45"
                }
              ]
            },
            "documentation": {
              "id": 10118,
              "nodeType": "StructuredDocumentation",
              "src": "944:163:45",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 10133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10124,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10103,
                  "src": "1163:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1163:19:45"
              }
            ],
            "name": "mint",
            "nameLocation": "1121:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10120,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1134:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10133,
                  "src": "1126:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10122,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1147:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10133,
                  "src": "1139:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:30:45"
            },
            "returnParameters": {
              "id": 10126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:0:45"
            },
            "scope": 10150,
            "src": "1112:107:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9095
            ],
            "body": {
              "id": 10148,
              "nodeType": "Block",
              "src": "1538:41:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10144,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10136,
                        "src": "1554:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10145,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "1564:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10143,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1871,
                      "src": "1548:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:24:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10147,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:24:45"
                }
              ]
            },
            "documentation": {
              "id": 10134,
              "nodeType": "StructuredDocumentation",
              "src": "1225:212:45",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 10149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10140,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10103,
                  "src": "1514:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:19:45"
              }
            ],
            "name": "burn",
            "nameLocation": "1451:4:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10136,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1464:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10149,
                  "src": "1456:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10138,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1482:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 10149,
                  "src": "1474:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:35:45"
            },
            "returnParameters": {
              "id": 10142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:45"
            },
            "scope": 10150,
            "src": "1442:137:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10151,
        "src": "366:1215:45",
        "usedErrors": []
      }
    ],
    "src": "32:1550:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x75478Fe20283F76379Fd24114E9b38373f47C473",
      "transactionHash": "0x6538bcc998560855e2c1de9eb340e5453bd0bb4f0d651fb02c6260f6c8f36915"
    },
    "1649550273938": {
      "events": {},
      "links": {},
      "address": "0xfF1Aa590E3c0b52ae75b46e0B002550DeCd86076",
      "transactionHash": "0x198fc1b597aacd3db0823a6fd301cbdb950317c93665c9e96d7f8f9382fac993"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-14T13:27:30.908Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "_account": "The address to transfer ZOR from for burning",
          "_amount": "The amount of ZOR to transfer and burn"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "The amount to mint",
          "_to": "The address to mint to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "The Zorro token (cross chain)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(address,uint256)": {
        "notice": "Allows authorized burning of the Zorro token from a specified account"
      },
      "mint(address,uint256)": {
        "notice": "Allows authorized minting of the Zorro token to a specified address"
      }
    },
    "version": 1
  }
}