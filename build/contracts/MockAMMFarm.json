{
  "contractName": "MockAMMFarm",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrew",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wantToken",
          "type": "address"
        }
      ],
      "name": "setWantAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingCake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "enterStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "leaveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wantToken\",\"type\":\"address\"}],\"name\":\"setWantAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultStandardAMM.sol\":\"MockAMMFarm\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/IAMMFarm.sol\":{\"keccak256\":\"0x2b2600a84fb56a84ebfbeeadc317c16eed08dd7bbfb19011fb7a76c1093e6504\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8751dd42de042238f176b12a69ec7a5e80e890a8cf6e05bfad4d84532f24c065\",\"dweb:/ipfs/QmbWDH4fwdN6zx61dK6RPkM4bVYUXMBEBfPNzPPJX5vPFa\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xa1a158e676f2b6a24680fbed4f1aec74d08c69719d9bc39a8efeaaa063b15974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://500d6fcba8e6476a539b9351797e2e4646c4e7e3fa72694f7628b871cd669102\",\"dweb:/ipfs/QmeW3gYAh58ebumDgiX1Fa8NDK9ghSCDMG5tNnQjyKG3Hs\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]},\"project:/contracts/vaults/VaultStandardAMM.sol\":{\"keccak256\":\"0x44b221f05b8653b52746df6bbd7aa54ac85d574bcff6d79c3622d0df3c34979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fa1fd2d5bc2035ef6cdde33a6b97d1f99a42b0f75661d8484208f57b3cf9c0\",\"dweb:/ipfs/Qme4dPNpc2AWaBcGm9Up2sFUrk1hHhm76Eu4eszgptRfvF\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x29689c796abdd63dcfc82fd3955afb475274843faa5d62911dc7f6bea0547226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4422b41d9cd91c7a8bf37a0eb8374d8dd41e9d299a736315ad3ae2dcb4cd12e\",\"dweb:/ipfs/QmRJsNB7H1HAgpoFJwJJNvywJZzWDY77Xs6t9M6xS3UBrt\"]},\"project:/contracts/vaults/actions/VaultActionsStandardAMM.sol\":{\"keccak256\":\"0x82a27256b68a595e1f009aceb308712b41e84edafe6c62e61489cc161605c85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dd1f9c2e581044a2871b26b336b98ae886fa490f8600563776be7ca946f6c9\",\"dweb:/ipfs/QmSXdYRzUMs7TSugg3o4VGzv58UeizJV6yZnbYFeXSGFBC\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0x0901df17397296f0799eb88cef219660c7cab12739b513d8e7c385773647145c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4aa53a3b877ba11bed6f5fc2b5c2d40cc6165338ebf733558b59450000740b8\",\"dweb:/ipfs/QmQikiDKDDFCCiajG918rKT1Yu3pY2zeMybWdYhv7UEQEe\"]},\"project:/contracts/vaults/mocks/MockVaultStandardAMM.sol\":{\"keccak256\":\"0xeafd8fc0bd39be4f6df62a295251599d330b52b027109434523297c2bcdb1874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://762558c3fd4e8f03a642de41615b3ec77ccafe50e9420852c619c84330835953\",\"dweb:/ipfs/QmNuKN3fjwJwa6kYpR3vGmi28DA2aUJfpt2LuqsqS43CBb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611171806100206000396000f3fe608060405234801561001057600080fd5b5060043610610190576000357c010000000000000000000000000000000000000000000000000000000090048063441a3e70116100fb5780638dbb1e3a116100b4578063a9059cbb1161008e578063a9059cbb1461036a578063d23e04801461037d578063dd62ed3e14610390578063e2bbb158146103c957600080fd5b80638dbb1e3a1461034157806395d89b411461034f578063a457c2d71461035757600080fd5b8063441a3e70146102605780634b0e7216146102735780635312ea8e146101e75780636183e804146102b057806370a08231146102ed57806370d5ae051461031657600080fd5b806323b872dd1161014d57806323b872dd14610218578063313ce5671461022b578063395093511461023a57806340c10f191461024d57806341441d3b146101e757806343a6f4ee146101b357600080fd5b806306fdde0314610195578063081e3eda146101b3578063095ea7b3146101c45780631058d281146101e75780631175a1dd146101fa57806318160ddd14610210575b600080fd5b61019d6103dc565b6040516101aa9190610f09565b60405180910390f35b60005b6040519081526020016101aa565b6101d76101d2366004610f58565b61046e565b60405190151581526020016101aa565b6101f86101f5366004610f82565b50565b005b6101b6610208366004610f9b565b600092915050565b6035546101b6565b6101d7610226366004610fc7565b610486565b604051601281526020016101aa565b6101d7610248366004610f58565b6104ac565b6101f861025b366004610f58565b6104eb565b6101f861026e366004611003565b6104f9565b6101f8610281366004611025565b6065805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6101f86102be366004611025565b6066805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6101b66102fb366004611025565b600160a060020a031660009081526033602052604090205490565b60655461032990600160a060020a031681565b604051600160a060020a0390911681526020016101aa565b6101b6610208366004611003565b61019d6105a7565b6101d7610365366004610f58565b6105b6565b6101d7610378366004610f58565b610673565b60665461032990600160a060020a031681565b6101b661039e366004611040565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b6101f86103d7366004611003565b610681565b6060603680546103eb9061106a565b80601f01602080910402602001604051908101604052809291908181526020018280546104179061106a565b80156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b5050505050905090565b60003361047c8185856106d1565b5060019392505050565b60003361049485828561082f565b61049f8585856108c4565b60019150505b9392505050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061047c90829086906104e69087906110be565b6106d1565b6104f58282610ae4565b5050565b6066546040517f40c10f1900000000000000000000000000000000000000000000000000000000815233600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b15801561055e57600080fd5b505af1158015610572573d6000803e3d6000fd5b50506040518392508491507fe30055f80fbe7b2543e52870ba638ff9e75c7471da9cb6d9eb5a97379195b1ac90600090a35050565b6060603780546103eb9061106a565b336000818152603460209081526040808320600160a060020a03871684529091528120549091908381101561065b5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61066882868684036106d1565b506001949350505050565b60003361047c8185856108c4565b6065546066546106a091600160a060020a039182169133911684610bc6565b604051819083907f06da3309189fa49284f335d2c2bcb4cb0b8ad2a59ad92a9bdebeeb8f1ceba51190600090a35050565b600160a060020a03831661074f5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0382166107ce5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a0383811660009081526034602090815260408083209386168352929052205460001981146108be57818110156108b15760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610652565b6108be84848484036106d1565b50505050565b600160a060020a0383166109435760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0382166109c25760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a03831660009081526033602052604090205481811015610a545760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610a8b9084906110be565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad791815260200190565b60405180910390a36108be565b600160a060020a038216610b3d5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610652565b8060356000828254610b4f91906110be565b9091555050600160a060020a03821660009081526033602052604081208054839290610b7c9084906110be565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526108be908590610c53565b505050565b6000610ca8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316610d3b9092919063ffffffff16565b805190915015610c4e5780806020019051810190610cc691906110fd565b610c4e5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610652565b6060610d4a8484600085610d52565b949350505050565b60603031831115610dce5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0385163b610e285760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610652565b60008086600160a060020a03168587604051610e44919061111f565b60006040518083038185875af1925050503d8060008114610e81576040519150601f19603f3d011682016040523d82523d6000602084013e610e86565b606091505b5091509150610e96828286610ea1565b979650505050505050565b60608315610eb05750816104a5565b825115610ec05782518084602001fd5b8160405160e560020a62461bcd0281526004016106529190610f09565b60005b83811015610ef8578181015183820152602001610ee0565b838111156108be5750506000910152565b6020815260008251806020840152610f28816040850160208701610edd565b601f01601f19169190910160400192915050565b8035600160a060020a0381168114610f5357600080fd5b919050565b60008060408385031215610f6b57600080fd5b610f7483610f3c565b946020939093013593505050565b600060208284031215610f9457600080fd5b5035919050565b60008060408385031215610fae57600080fd5b82359150610fbe60208401610f3c565b90509250929050565b600080600060608486031215610fdc57600080fd5b610fe584610f3c565b9250610ff360208501610f3c565b9150604084013590509250925092565b6000806040838503121561101657600080fd5b50508035926020909101359150565b60006020828403121561103757600080fd5b6104a582610f3c565b6000806040838503121561105357600080fd5b61105c83610f3c565b9150610fbe60208401610f3c565b60028104600182168061107e57607f821691505b602082108114156110b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082198211156110f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60006020828403121561110f57600080fd5b815180151581146104a557600080fd5b60008251611131818460208701610edd565b919091019291505056fea2646970667358221220e971156ec3151c0bc808b6f21d3c6b49d03c809a000a9e172f749517accc8f0564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610190576000357c010000000000000000000000000000000000000000000000000000000090048063441a3e70116100fb5780638dbb1e3a116100b4578063a9059cbb1161008e578063a9059cbb1461036a578063d23e04801461037d578063dd62ed3e14610390578063e2bbb158146103c957600080fd5b80638dbb1e3a1461034157806395d89b411461034f578063a457c2d71461035757600080fd5b8063441a3e70146102605780634b0e7216146102735780635312ea8e146101e75780636183e804146102b057806370a08231146102ed57806370d5ae051461031657600080fd5b806323b872dd1161014d57806323b872dd14610218578063313ce5671461022b578063395093511461023a57806340c10f191461024d57806341441d3b146101e757806343a6f4ee146101b357600080fd5b806306fdde0314610195578063081e3eda146101b3578063095ea7b3146101c45780631058d281146101e75780631175a1dd146101fa57806318160ddd14610210575b600080fd5b61019d6103dc565b6040516101aa9190610f09565b60405180910390f35b60005b6040519081526020016101aa565b6101d76101d2366004610f58565b61046e565b60405190151581526020016101aa565b6101f86101f5366004610f82565b50565b005b6101b6610208366004610f9b565b600092915050565b6035546101b6565b6101d7610226366004610fc7565b610486565b604051601281526020016101aa565b6101d7610248366004610f58565b6104ac565b6101f861025b366004610f58565b6104eb565b6101f861026e366004611003565b6104f9565b6101f8610281366004611025565b6065805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6101f86102be366004611025565b6066805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6101b66102fb366004611025565b600160a060020a031660009081526033602052604090205490565b60655461032990600160a060020a031681565b604051600160a060020a0390911681526020016101aa565b6101b6610208366004611003565b61019d6105a7565b6101d7610365366004610f58565b6105b6565b6101d7610378366004610f58565b610673565b60665461032990600160a060020a031681565b6101b661039e366004611040565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b6101f86103d7366004611003565b610681565b6060603680546103eb9061106a565b80601f01602080910402602001604051908101604052809291908181526020018280546104179061106a565b80156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b5050505050905090565b60003361047c8185856106d1565b5060019392505050565b60003361049485828561082f565b61049f8585856108c4565b60019150505b9392505050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061047c90829086906104e69087906110be565b6106d1565b6104f58282610ae4565b5050565b6066546040517f40c10f1900000000000000000000000000000000000000000000000000000000815233600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b15801561055e57600080fd5b505af1158015610572573d6000803e3d6000fd5b50506040518392508491507fe30055f80fbe7b2543e52870ba638ff9e75c7471da9cb6d9eb5a97379195b1ac90600090a35050565b6060603780546103eb9061106a565b336000818152603460209081526040808320600160a060020a03871684529091528120549091908381101561065b5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61066882868684036106d1565b506001949350505050565b60003361047c8185856108c4565b6065546066546106a091600160a060020a039182169133911684610bc6565b604051819083907f06da3309189fa49284f335d2c2bcb4cb0b8ad2a59ad92a9bdebeeb8f1ceba51190600090a35050565b600160a060020a03831661074f5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0382166107ce5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a0383811660009081526034602090815260408083209386168352929052205460001981146108be57818110156108b15760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610652565b6108be84848484036106d1565b50505050565b600160a060020a0383166109435760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0382166109c25760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a03831660009081526033602052604090205481811015610a545760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610a8b9084906110be565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad791815260200190565b60405180910390a36108be565b600160a060020a038216610b3d5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610652565b8060356000828254610b4f91906110be565b9091555050600160a060020a03821660009081526033602052604081208054839290610b7c9084906110be565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526108be908590610c53565b505050565b6000610ca8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316610d3b9092919063ffffffff16565b805190915015610c4e5780806020019051810190610cc691906110fd565b610c4e5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610652565b6060610d4a8484600085610d52565b949350505050565b60603031831115610dce5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610652565b600160a060020a0385163b610e285760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610652565b60008086600160a060020a03168587604051610e44919061111f565b60006040518083038185875af1925050503d8060008114610e81576040519150601f19603f3d011682016040523d82523d6000602084013e610e86565b606091505b5091509150610e96828286610ea1565b979650505050505050565b60608315610eb05750816104a5565b825115610ec05782518084602001fd5b8160405160e560020a62461bcd0281526004016106529190610f09565b60005b83811015610ef8578181015183820152602001610ee0565b838111156108be5750506000910152565b6020815260008251806020840152610f28816040850160208701610edd565b601f01601f19169190910160400192915050565b8035600160a060020a0381168114610f5357600080fd5b919050565b60008060408385031215610f6b57600080fd5b610f7483610f3c565b946020939093013593505050565b600060208284031215610f9457600080fd5b5035919050565b60008060408385031215610fae57600080fd5b82359150610fbe60208401610f3c565b90509250929050565b600080600060608486031215610fdc57600080fd5b610fe584610f3c565b9250610ff360208501610f3c565b9150604084013590509250925092565b6000806040838503121561101657600080fd5b50508035926020909101359150565b60006020828403121561103757600080fd5b6104a582610f3c565b6000806040838503121561105357600080fd5b61105c83610f3c565b9150610fbe60208401610f3c565b60028104600182168061107e57607f821691505b602082108114156110b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082198211156110f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60006020828403121561110f57600080fd5b815180151581146104a557600080fd5b60008251611131818460208701610edd565b919091019291505056fea2646970667358221220e971156ec3151c0bc808b6f21d3c6b49d03c809a000a9e172f749517accc8f0564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9722:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:123"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:123",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:123",
                    "statements": []
                  },
                  "src": "96:113:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:123"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:123"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:123",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:123",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:123",
                "type": ""
              }
            ],
            "src": "14:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:123",
                "type": ""
              }
            ],
            "src": "277:383:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "766:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "776:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "776:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "818:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "829:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "746:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "757:4:123",
                "type": ""
              }
            ],
            "src": "665:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "896:147:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "906:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "928:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "915:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "915:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "906:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1021:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1030:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1023:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1023:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1023:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "957:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "968:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "975:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "964:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "964:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "954:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "944:93:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "875:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:123",
                "type": ""
              }
            ],
            "src": "847:196:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1135:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1181:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1193:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1183:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1183:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1183:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1156:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1177:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1145:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1235:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1216:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1254:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1264:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1254:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1093:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1104:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1116:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1124:6:123",
                "type": ""
              }
            ],
            "src": "1048:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1402:92:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1424:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1420:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1412:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1454:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1479:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1472:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1472:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1465:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1447:41:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1371:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:123",
                "type": ""
              }
            ],
            "src": "1307:187:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1569:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1615:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1624:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1627:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1617:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1617:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1617:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1590:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1599:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1586:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1586:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1611:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1582:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1579:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1640:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1663:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1650:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1535:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1546:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1558:6:123",
                "type": ""
              }
            ],
            "src": "1499:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1771:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1817:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1826:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1829:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1792:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1801:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1788:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1784:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1781:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1842:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1865:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1852:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1884:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1917:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1928:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1913:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1913:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1894:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1729:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1740:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1752:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1760:6:123",
                "type": ""
              }
            ],
            "src": "1684:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2047:224:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2093:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2102:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2105:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2095:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2095:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2095:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2068:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2077:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2064:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2089:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2060:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2060:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2057:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2118:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2147:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2128:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2118:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2199:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2210:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2195:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2195:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2176:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2250:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2233:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1997:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2008:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2020:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2028:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2036:6:123",
                "type": ""
              }
            ],
            "src": "1943:328:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2373:87:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2383:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2395:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2383:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2425:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2440:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2448:4:123",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2436:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2436:17:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:36:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2342:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2353:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2364:4:123",
                "type": ""
              }
            ],
            "src": "2276:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2552:161:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2598:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2607:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2610:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2600:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2600:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2600:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2573:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2582:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2569:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2569:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2594:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2565:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2565:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2562:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2623:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2646:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2633:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2633:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2623:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2665:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2692:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2703:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2688:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2688:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2675:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2665:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2510:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2521:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2533:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2541:6:123",
                "type": ""
              }
            ],
            "src": "2465:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2788:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2834:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2843:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2846:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2836:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2836:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2836:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2809:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2818:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2805:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2805:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2830:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2801:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2801:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2798:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2859:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2888:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2869:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2869:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2859:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2754:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2765:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2777:6:123",
                "type": ""
              }
            ],
            "src": "2718:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3010:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3020:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3032:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3043:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3028:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3028:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3020:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3062:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3077:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3085:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3073:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3073:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3055:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3055:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3055:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2979:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2990:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3001:4:123",
                "type": ""
              }
            ],
            "src": "2909:226:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3227:173:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3273:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3282:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3285:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3275:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3275:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3275:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3248:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3257:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3240:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3237:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3298:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3327:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3308:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3308:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3298:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3346:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3379:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3390:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3375:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3375:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3356:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3346:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3185:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3196:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3208:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3216:6:123",
                "type": ""
              }
            ],
            "src": "3140:260:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3460:382:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3470:22:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3484:4:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3490:1:123",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3480:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3480:12:123"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3470:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3501:38:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3531:4:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3537:1:123",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3527:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3527:12:123"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3505:18:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3578:31:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3580:27:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3594:6:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3602:4:123",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3590:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3590:17:123"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3580:6:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3558:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3551:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:26:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:61:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3668:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3689:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3692:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3682:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3682:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3682:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3793:4:123",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3783:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3783:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3783:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3818:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3821:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3811:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3811:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3811:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3624:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3647:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3655:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3644:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3644:14:123"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3621:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3621:38:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3618:218:123"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3440:4:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3449:6:123",
                "type": ""
              }
            ],
            "src": "3405:437:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3895:234:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3930:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3951:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3954:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3944:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3944:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3944:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4052:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4055:4:123",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4045:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4045:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4045:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4080:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4083:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4073:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4073:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4073:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3911:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3918:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3914:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3908:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3908:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3905:193:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4107:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4118:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4121:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4114:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4107:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3878:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3881:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3887:3:123",
                "type": ""
              }
            ],
            "src": "3847:282:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4263:168:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4273:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4285:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4281:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4273:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4315:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4330:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4338:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4308:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4308:74:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4402:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4413:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4398:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4398:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4418:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4391:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4391:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4224:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4235:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4243:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4254:4:123",
                "type": ""
              }
            ],
            "src": "4134:297:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:227:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4627:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4638:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4620:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4620:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4661:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4672:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4677:2:123",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4650:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4650:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4700:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4711:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4696:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4696:18:123"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4716:34:123",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4689:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4689:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4689:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4771:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4782:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4767:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4767:18:123"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4787:7:123",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4760:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4760:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4760:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4804:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4816:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4827:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4812:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4812:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4804:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4587:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4601:4:123",
                "type": ""
              }
            ],
            "src": "4436:401:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5016:226:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5033:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5044:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5026:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5026:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5026:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5067:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5078:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5063:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5063:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5083:2:123",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5056:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5056:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5056:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5106:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5117:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5102:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5102:18:123"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5122:34:123",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5095:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5095:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5177:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5188:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5173:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5173:18:123"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5193:6:123",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5166:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5166:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5166:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5209:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5221:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5232:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5217:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5217:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5209:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4993:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5007:4:123",
                "type": ""
              }
            ],
            "src": "4842:400:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5421:224:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5438:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5449:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5431:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5431:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5431:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5472:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5483:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5468:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5468:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5488:2:123",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5461:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5461:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5461:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5511:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5522:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5507:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5507:18:123"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5527:34:123",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5500:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5500:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5500:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5582:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5593:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5578:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5578:18:123"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5598:4:123",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5571:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5571:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5571:32:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5612:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5624:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5635:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5620:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5620:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5612:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5398:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5412:4:123",
                "type": ""
              }
            ],
            "src": "5247:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5824:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5841:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5852:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5834:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5834:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5834:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5875:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5886:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5871:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5891:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5864:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5864:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5914:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5925:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5910:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5910:18:123"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5930:31:123",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5903:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5903:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5971:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5983:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5994:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5979:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5979:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5971:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5801:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5815:4:123",
                "type": ""
              }
            ],
            "src": "5650:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6182:227:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6199:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6210:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6192:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6192:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6249:2:123",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6222:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6222:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6222:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6272:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6283:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6268:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6268:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6288:34:123",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6261:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6261:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6261:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6343:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6354:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6339:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6339:18:123"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6359:7:123",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6332:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6332:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6332:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6376:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6388:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6399:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6384:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6384:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6376:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6159:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6173:4:123",
                "type": ""
              }
            ],
            "src": "6008:401:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6588:225:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6605:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6616:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6598:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6598:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6598:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6639:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6650:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6635:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6635:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6655:2:123",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6628:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6628:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6678:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6689:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6674:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6694:34:123",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6667:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6667:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6749:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6760:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6745:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6745:18:123"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6765:5:123",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6738:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6738:33:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6780:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6792:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6803:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6788:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6788:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6780:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6565:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6579:4:123",
                "type": ""
              }
            ],
            "src": "6414:399:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6992:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7009:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7020:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7002:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7043:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7054:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7039:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7039:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7059:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7032:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7032:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7032:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7082:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7093:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7078:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7078:18:123"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7098:34:123",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7071:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7071:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7071:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7153:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7164:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7149:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7149:18:123"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7169:8:123",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7142:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7142:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7142:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7187:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7199:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7210:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7195:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7195:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7187:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6969:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6983:4:123",
                "type": ""
              }
            ],
            "src": "6818:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7399:181:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7416:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7427:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7409:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7409:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7409:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7450:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7461:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7446:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7446:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7466:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7439:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7489:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7500:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7485:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7485:18:123"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7505:33:123",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7478:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7478:61:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7478:61:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7548:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7560:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7571:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7556:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7556:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7548:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7376:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7390:4:123",
                "type": ""
              }
            ],
            "src": "7225:355:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7742:241:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7752:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7764:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7775:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7760:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7760:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7752:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7787:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7797:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7791:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7855:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7870:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7878:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7866:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7866:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7848:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7848:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7848:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7902:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7913:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7898:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7898:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7922:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7930:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7918:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7918:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7891:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7891:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7891:43:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7954:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7965:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7950:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7950:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7970:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7943:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7943:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7943:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7695:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7706:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7714:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7722:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7733:4:123",
                "type": ""
              }
            ],
            "src": "7585:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8066:199:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8112:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8121:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8124:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8114:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8114:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8114:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8087:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8096:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8083:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8083:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8108:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8079:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8079:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8076:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8137:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8156:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8150:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8150:16:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8141:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8219:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8228:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8231:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8221:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8221:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8221:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8188:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8209:5:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8202:6:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8202:13:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8195:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8195:21:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8185:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8185:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8178:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8178:40:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8175:60:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8244:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8254:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8244:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8032:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8043:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8055:6:123",
                "type": ""
              }
            ],
            "src": "7988:277:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8444:232:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8461:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8472:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8454:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8454:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8454:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8495:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8506:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8491:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8491:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8511:2:123",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8484:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8484:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8484:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8534:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8545:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8530:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8530:18:123"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8550:34:123",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8523:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8523:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8523:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8605:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8616:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:18:123"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8621:12:123",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8594:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8594:40:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8594:40:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8643:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8655:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8666:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8651:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8643:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8421:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8435:4:123",
                "type": ""
              }
            ],
            "src": "8270:406:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8855:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8872:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8883:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8865:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8865:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8865:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8906:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8917:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8902:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8902:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8922:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8895:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8895:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8945:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8956:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8941:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8941:18:123"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8961:34:123",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8934:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8934:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8934:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9016:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9027:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9012:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9012:18:123"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9032:8:123",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9005:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9005:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9005:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9050:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9062:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9073:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9058:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9058:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9050:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8832:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8846:4:123",
                "type": ""
              }
            ],
            "src": "8681:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9262:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9279:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9290:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9272:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9272:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9272:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9313:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9324:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9309:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9309:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9329:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9302:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9302:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9302:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9352:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9363:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9348:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9348:18:123"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9368:31:123",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9341:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9341:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9341:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9409:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9421:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9432:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9417:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9417:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9409:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9239:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9253:4:123",
                "type": ""
              }
            ],
            "src": "9088:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9583:137:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9593:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9613:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9607:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9607:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9597:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9655:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9663:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9651:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9651:17:123"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9670:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9675:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9629:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9629:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9691:23:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9702:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9707:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9698:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9698:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9691:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9559:3:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9564:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9575:3:123",
                "type": ""
              }
            ],
            "src": "9446:274:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "352:1782:120:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "352:1782:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:56:120;774:7;729:56;;;811:25:123;;;799:2;784:18;729:56:120;665:177:123;4770:197:9;;;;;;:::i;:::-;;:::i;:::-;;;1472:14:123;;1465:22;1447:41;;1435:2;1420:18;4770:197:9;1307:187:123;1962:50:120;;;;;;:::i;:::-;;;;;1092:112;;;;;;:::i;:::-;1189:7;1092:112;;;;;3581:106:9;3668:12;;3581:106;;5529:286;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;2418:36:123;;2406:2;2391:18;3430:91:9;2276:184:123;6210:236:9;;;;;;:::i;:::-;;:::i;419:97:90:-;;;;;;:::i;:::-;;:::i;1648:171:120:-;;;;;;:::i;:::-;;:::i;627:96::-;;;;;;:::i;:::-;690:11;:26;;-1:-1:-1;;690:26:120;-1:-1:-1;;;;;690:26:120;;;;;;;;;;627:96;531:90;;;;;;:::i;:::-;592:9;:22;;-1:-1:-1;;592:22:120;-1:-1:-1;;;;;592:22:120;;;;;;;;;;531:90;3745:125:9;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:9;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;468:26:120;;;;;-1:-1:-1;;;;;468:26:120;;;;;;-1:-1:-1;;;;;3073:55:123;;;3055:74;;3043:2;3028:18;468:26:120;2909:226:123;918:113:120;;;;;;:::i;2704:102:9:-;;;:::i;6933:429::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;500:24:120:-;;;;;-1:-1:-1;;;;;500:24:120;;;4313:149:9;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:9;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;1339:192:120;;;;;;:::i;:::-;;:::i;2493:98:9:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:14;4907:32:9;929:10:14;4923:7:9;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:9;;4770:197;-1:-1:-1;;;4770:197:9:o;5529:286::-;5656:4;929:10:14;5712:38:9;5728:4;929:10:14;5743:6:9;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;6210:236::-;929:10:14;6298:4:9;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:9;;;;;;;;;;6298:4;;929:10:14;6352:66:9;;929:10:14;;6377:27:9;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;419:97:90:-;485:24;491:8;501:7;485:5;:24::i;:::-;419:97;;:::o;1648:171:120:-;1738:9;;1716:58;;;;;1754:10;1716:58;;;4308:74:123;4398:18;;;4391:34;;;-1:-1:-1;;;;;1738:9:120;;;;1716:37;;4281:18:123;;1716:58:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1789:23:120;;1804:7;;-1:-1:-1;1798:4:120;;-1:-1:-1;1789:23:120;;;;;1648:171;;:::o;2704:102:9:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:14;7026:4:9;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:9;;;;;;;;;;7026:4;;929:10:14;7152:35:9;;;;7144:85;;;;-1:-1:-1;;;;;7144:85:9;;4638:2:123;7144:85:9;;;4620:21:123;4677:2;4657:18;;;4650:30;4716:34;4696:18;;;4689:62;4787:7;4767:18;;;4760:35;4812:19;;7144:85:9;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;:::-;-1:-1:-1;7351:4:9;;6933:429;-1:-1:-1;;;;6933:429:9:o;4066:189::-;4145:4;929:10:14;4199:28:9;929:10:14;4216:2:9;4220:6;4199:9;:28::i;1339:192:120:-;1464:11;;1424:9;;1406:79;;-1:-1:-1;;;;;1424:9:120;;;;1452:10;;1464:11;1477:7;1406:45;:79::i;:::-;1500:24;;1516:7;;1510:4;;1500:24;;;;;1339:192;;:::o;10460:370:9:-;-1:-1:-1;;;;;10591:19:9;;10583:68;;;;-1:-1:-1;;;;;10583:68:9;;5044:2:123;10583:68:9;;;5026:21:123;5083:2;5063:18;;;5056:30;5122:34;5102:18;;;5095:62;5193:6;5173:18;;;5166:34;5217:19;;10583:68:9;4842:400:123;10583:68:9;-1:-1:-1;;;;;10669:21:9;;10661:68;;;;-1:-1:-1;;;;;10661:68:9;;5449:2:123;10661:68:9;;;5431:21:123;5488:2;5468:18;;;5461:30;5527:34;5507:18;;;5500:62;5598:4;5578:18;;;5571:32;5620:19;;10661:68:9;5247:398:123;10661:68:9;-1:-1:-1;;;;;10740:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;811:25:123;;;10791:32:9;;784:18:123;10791:32:9;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:9;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:9;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;;;11356:68:9;;5852:2:123;11356:68:9;;;5834:21:123;5891:2;5871:18;;;5864:30;5930:31;5910:18;;;5903:59;5979:18;;11356:68:9;5650:353:123;11356:68:9;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:9;;7943:68;;;;-1:-1:-1;;;;;7943:68:9;;6210:2:123;7943:68:9;;;6192:21:123;6249:2;6229:18;;;6222:30;6288:34;6268:18;;;6261:62;6359:7;6339:18;;;6332:35;6384:19;;7943:68:9;6008:401:123;7943:68:9;-1:-1:-1;;;;;8029:16:9;;8021:64;;;;-1:-1:-1;;;;;8021:64:9;;6616:2:123;8021:64:9;;;6598:21:123;6655:2;6635:18;;;6628:30;6694:34;6674:18;;;6667:62;6765:5;6745:18;;;6738:33;6788:19;;8021:64:9;6414:399:123;8021:64:9;-1:-1:-1;;;;;8167:15:9;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;;;8192:72:9;;7020:2:123;8192:72:9;;;7002:21:123;7059:2;7039:18;;;7032:30;7098:34;7078:18;;;7071:62;7169:8;7149:18;;;7142:36;7195:19;;8192:72:9;6818:402:123;8192:72:9;-1:-1:-1;;;;;8298:15:9;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:9;8404:4;-1:-1:-1;;;;;8395:26:9;;8414:6;8395:26;;;;811:25:123;;799:2;784:18;;665:177;8395:26:9;;;;;;;;8432:37;12132:121;8752:389;-1:-1:-1;;;;;8835:21:9;;8827:65;;;;-1:-1:-1;;;;;8827:65:9;;7427:2:123;8827:65:9;;;7409:21:123;7466:2;7446:18;;;7439:30;7505:33;7485:18;;;7478:61;7556:18;;8827:65:9;7225:355:123;8827:65:9;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:9;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:9;;811:25:123;;;-1:-1:-1;;;;;9038:37:9;;;9055:1;;9038:37;;799:2:123;784:18;9038:37:9;;;;;;;419:97:90;;:::o;967:252:12:-;1143:68;;;-1:-1:-1;;;;;7866:15:123;;;1143:68:12;;;7848:34:123;7918:15;;7898:18;;;7891:43;7950:18;;;;7943:34;;;1143:68:12;;;;;;;;;;7760:18:123;;;;1143:68:12;;;;;;;;;;1166:27;1143:68;;;1116:96;;1136:5;;1116:19;:96::i;12132:121:9:-;;;;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;8472:2:123;3921:85:12;;;8454:21:123;8511:2;8491:18;;;8484:30;8550:34;8530:18;;;8523:62;8621:12;8601:18;;;8594:40;8651:19;;3921:85:12;8270:406:123;3872:223:13;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:13:o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;8883:2:123;5148:81:13;;;8865:21:123;8922:2;8902:18;;;8895:30;8961:34;8941:18;;;8934:62;9032:8;9012:18;;;9005:36;9058:19;;5148:81:13;8681:402:123;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;9290:2:123;5239:60:13;;;9272:21:123;9329:2;9309:18;;;9302:30;9368:31;9348:18;;;9341:59;9417:18;;5239:60:13;9088:353:123;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:258:123:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:123;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:123;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:123:o;847:196::-;915:20;;-1:-1:-1;;;;;964:54:123;;954:65;;944:93;;1033:1;1030;1023:12;944:93;847:196;;;:::o;1048:254::-;1116:6;1124;1177:2;1165:9;1156:7;1152:23;1148:32;1145:52;;;1193:1;1190;1183:12;1145:52;1216:29;1235:9;1216:29;:::i;:::-;1206:39;1292:2;1277:18;;;;1264:32;;-1:-1:-1;;;1048:254:123:o;1499:180::-;1558:6;1611:2;1599:9;1590:7;1586:23;1582:32;1579:52;;;1627:1;1624;1617:12;1579:52;-1:-1:-1;1650:23:123;;1499:180;-1:-1:-1;1499:180:123:o;1684:254::-;1752:6;1760;1813:2;1801:9;1792:7;1788:23;1784:32;1781:52;;;1829:1;1826;1819:12;1781:52;1865:9;1852:23;1842:33;;1894:38;1928:2;1917:9;1913:18;1894:38;:::i;:::-;1884:48;;1684:254;;;;;:::o;1943:328::-;2020:6;2028;2036;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2128:29;2147:9;2128:29;:::i;:::-;2118:39;;2176:38;2210:2;2199:9;2195:18;2176:38;:::i;:::-;2166:48;;2261:2;2250:9;2246:18;2233:32;2223:42;;1943:328;;;;;:::o;2465:248::-;2533:6;2541;2594:2;2582:9;2573:7;2569:23;2565:32;2562:52;;;2610:1;2607;2600:12;2562:52;-1:-1:-1;;2633:23:123;;;2703:2;2688:18;;;2675:32;;-1:-1:-1;2465:248:123:o;2718:186::-;2777:6;2830:2;2818:9;2809:7;2805:23;2801:32;2798:52;;;2846:1;2843;2836:12;2798:52;2869:29;2888:9;2869:29;:::i;3140:260::-;3208:6;3216;3269:2;3257:9;3248:7;3244:23;3240:32;3237:52;;;3285:1;3282;3275:12;3237:52;3308:29;3327:9;3308:29;:::i;:::-;3298:39;;3356:38;3390:2;3379:9;3375:18;3356:38;:::i;3405:437::-;3490:1;3480:12;;3537:1;3527:12;;;3548:61;;3602:4;3594:6;3590:17;3580:27;;3548:61;3655:2;3647:6;3644:14;3624:18;3621:38;3618:218;;;3692:77;3689:1;3682:88;3793:4;3790:1;3783:15;3821:4;3818:1;3811:15;3618:218;;3405:437;;;:::o;3847:282::-;3887:3;3918:1;3914:6;3911:1;3908:13;3905:193;;;3954:77;3951:1;3944:88;4055:4;4052:1;4045:15;4083:4;4080:1;4073:15;3905:193;-1:-1:-1;4114:9:123;;3847:282::o;7988:277::-;8055:6;8108:2;8096:9;8087:7;8083:23;8079:32;8076:52;;;8124:1;8121;8114:12;8076:52;8156:9;8150:16;8209:5;8202:13;8195:21;8188:5;8185:32;8175:60;;8231:1;8228;8221:12;9446:274;9575:3;9613:6;9607:13;9629:53;9675:6;9670:3;9663:4;9655:6;9651:17;9629:53;:::i;:::-;9698:16;;;;;9446:274;-1:-1:-1;;9446:274:123:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultStandardAMM.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"../../tokens/mocks/MockToken.sol\";\n\ncontract MockVaultStandardAMM is VaultStandardAMM {\n    function unfarm(uint256 _wantAmt) public {\n        _unfarm(_wantAmt);\n    }\n}\n\ncontract MockAMMFarm is IAMMFarm, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    address public burnAddress;\n    address public wantToken;\n\n    function setWantAddress(address _wantToken) public {\n        wantToken = _wantToken;\n    }\n\n    function setBurnAddress(address _burnAddress) public {\n        burnAddress = _burnAddress;\n    }\n\n    function poolLength() external view returns (uint256) {}\n\n    function userInfo() external view returns (uint256) {}\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        external\n        view\n        returns (uint256)\n    {}\n\n    // View function to see pending CAKEs on frontend.\n    function pendingCake(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {}\n\n    event Deposited(uint256 indexed _pid, uint256 indexed _amount);\n\n    // Deposit LP tokens to MasterChef for CAKE allocation.\n    function deposit(uint256 _pid, uint256 _amount) external {\n        IERC20Upgradeable(wantToken).safeTransferFrom(msg.sender, burnAddress, _amount);\n        emit Deposited(_pid, _amount);\n    }\n\n    event Withdrew(uint256 indexed _pid, uint256 indexed _amount);\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) external {\n        IMockERC20Upgradeable(wantToken).mint(msg.sender, _amount);\n        emit Withdrew(_pid, _amount);\n    }\n\n    // Stake CAKE tokens to MasterChef\n    function enterStaking(uint256 _amount) external {}\n\n    // Withdraw CAKE tokens from STAKING.\n    function leaveStaking(uint256 _amount) external {}\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) external {}\n}\n\ncontract MockAMMToken0 is MockERC20Upgradeable {}\ncontract MockAMMToken1 is MockERC20Upgradeable {}\ncontract MockAMMOtherLPToken is MockERC20Upgradeable {}\ncontract MockLPPool is MockERC20Upgradeable {}\ncontract MockLPPool1 is MockLPPool {}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultStandardAMM.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultStandardAMM.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMFarm": [
        12853
      ],
      "IAMMRouter01": [
        13161
      ],
      "IAMMRouter02": [
        13249
      ],
      "IAlpacaVault": [
        12597
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12562
      ],
      "ILayerZeroReceiver": [
        14358
      ],
      "IMockERC20Upgradeable": [
        17294
      ],
      "IStargateReceiver": [
        14605
      ],
      "IVault": [
        13622
      ],
      "IZorroControllerXChain": [
        14199
      ],
      "IZorroControllerXChainBase": [
        14040
      ],
      "IZorroControllerXChainDeposit": [
        14074
      ],
      "IZorroControllerXChainEarn": [
        14132
      ],
      "IZorroControllerXChainReceiver": [
        14187
      ],
      "IZorroControllerXChainWithdraw": [
        14175
      ],
      "Initializable": [
        1774
      ],
      "MockAMMFarm": [
        28575
      ],
      "MockAMMOtherLPToken": [
        28584
      ],
      "MockAMMToken0": [
        28578
      ],
      "MockAMMToken1": [
        28581
      ],
      "MockERC20Upgradeable": [
        17312
      ],
      "MockLPPool": [
        28587
      ],
      "MockLPPool1": [
        28590
      ],
      "MockUSDC": [
        17315
      ],
      "MockVaultStandardAMM": [
        28435
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15228
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15445
      ],
      "SafeSwapUni": [
        15427
      ],
      "TraderJoe_WAVAX_USDC": [
        19391
      ],
      "TraderJoe_ZOR_WAVAX": [
        19388
      ],
      "VaultActions": [
        26424
      ],
      "VaultActionsStandardAMM": [
        25158
      ],
      "VaultBase": [
        21893
      ],
      "VaultStandardAMM": [
        19385
      ]
    },
    "id": 28591,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28419,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:120"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultStandardAMM.sol",
        "file": "../VaultStandardAMM.sol",
        "id": 28420,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28591,
        "sourceUnit": 19392,
        "src": "58:33:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 28421,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28591,
        "sourceUnit": 2558,
        "src": "93:78:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 28422,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28591,
        "sourceUnit": 17316,
        "src": "173:42:120",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28423,
              "name": "VaultStandardAMM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19385,
              "src": "250:16:120"
            },
            "id": 28424,
            "nodeType": "InheritanceSpecifier",
            "src": "250:16:120"
          }
        ],
        "canonicalName": "MockVaultStandardAMM",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28435,
        "linearizedBaseContracts": [
          28435,
          19385,
          21893,
          1885,
          1944,
          571,
          3169,
          1774,
          13622
        ],
        "name": "MockVaultStandardAMM",
        "nameLocation": "226:20:120",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 28433,
              "nodeType": "Block",
              "src": "314:34:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28430,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28426,
                        "src": "332:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28429,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18978,
                      "src": "324:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "324:17:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28432,
                  "nodeType": "ExpressionStatement",
                  "src": "324:17:120"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 28434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "282:6:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28426,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "297:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28434,
                  "src": "289:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "288:18:120"
            },
            "returnParameters": {
              "id": 28428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:0:120"
            },
            "scope": 28435,
            "src": "273:75:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 28591,
        "src": "217:133:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28436,
              "name": "IAMMFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12853,
              "src": "376:8:120"
            },
            "id": 28437,
            "nodeType": "InheritanceSpecifier",
            "src": "376:8:120"
          },
          {
            "baseName": {
              "id": 28438,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17312,
              "src": "386:20:120"
            },
            "id": 28439,
            "nodeType": "InheritanceSpecifier",
            "src": "386:20:120"
          }
        ],
        "canonicalName": "MockAMMFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28575,
        "linearizedBaseContracts": [
          28575,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774,
          12853
        ],
        "name": "MockAMMFarm",
        "nameLocation": "361:11:120",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 28443,
            "libraryName": {
              "id": 28440,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "419:20:120"
            },
            "nodeType": "UsingForDirective",
            "src": "413:49:120",
            "typeName": {
              "id": 28442,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28441,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "444:17:120"
              },
              "referencedDeclaration": 2635,
              "src": "444:17:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 28445,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "483:11:120",
            "nodeType": "VariableDeclaration",
            "scope": 28575,
            "src": "468:26:120",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28444,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:120",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 28447,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "515:9:120",
            "nodeType": "VariableDeclaration",
            "scope": 28575,
            "src": "500:24:120",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28446,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "500:7:120",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28456,
              "nodeType": "Block",
              "src": "582:39:120",
              "statements": [
                {
                  "expression": {
                    "id": 28454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28452,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28447,
                      "src": "592:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28453,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28449,
                      "src": "604:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "592:22:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28455,
                  "nodeType": "ExpressionStatement",
                  "src": "592:22:120"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 28457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "540:14:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28449,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "563:10:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28457,
                  "src": "555:18:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "554:20:120"
            },
            "returnParameters": {
              "id": 28451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:120"
            },
            "scope": 28575,
            "src": "531:90:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28466,
              "nodeType": "Block",
              "src": "680:43:120",
              "statements": [
                {
                  "expression": {
                    "id": 28464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28462,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28445,
                      "src": "690:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28463,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28459,
                      "src": "704:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "690:26:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28465,
                  "nodeType": "ExpressionStatement",
                  "src": "690:26:120"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 28467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "636:14:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28459,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "659:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28467,
                  "src": "651:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "650:22:120"
            },
            "returnParameters": {
              "id": 28461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:120"
            },
            "scope": 28575,
            "src": "627:96:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12800
            ],
            "body": {
              "id": 28472,
              "nodeType": "Block",
              "src": "783:2:120",
              "statements": []
            },
            "functionSelector": "081e3eda",
            "id": 28473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "738:10:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:2:120"
            },
            "returnParameters": {
              "id": 28471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28473,
                  "src": "774:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:9:120"
            },
            "scope": 28575,
            "src": "729:56:120",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12805
            ],
            "body": {
              "id": 28478,
              "nodeType": "Block",
              "src": "843:2:120",
              "statements": []
            },
            "functionSelector": "43a6f4ee",
            "id": 28479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInfo",
            "nameLocation": "800:8:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:2:120"
            },
            "returnParameters": {
              "id": 28477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28479,
                  "src": "834:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:9:120"
            },
            "scope": 28575,
            "src": "791:54:120",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12814
            ],
            "body": {
              "id": 28488,
              "nodeType": "Block",
              "src": "1029:2:120",
              "statements": []
            },
            "functionSelector": "8dbb1e3a",
            "id": 28489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nameLocation": "927:13:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28481,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "949:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "941:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28483,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "964:3:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "956:11:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:28:120"
            },
            "returnParameters": {
              "id": 28487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "1016:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:9:120"
            },
            "scope": 28575,
            "src": "918:113:120",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12823
            ],
            "body": {
              "id": 28498,
              "nodeType": "Block",
              "src": "1202:2:120",
              "statements": []
            },
            "functionSelector": "1175a1dd",
            "id": 28499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingCake",
            "nameLocation": "1101:11:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28491,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1121:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "1113:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28493,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1135:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "1127:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:29:120"
            },
            "returnParameters": {
              "id": 28497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "1189:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:9:120"
            },
            "scope": 28575,
            "src": "1092:112:120",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 28505,
            "name": "Deposited",
            "nameLocation": "1216:9:120",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28501,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1242:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28505,
                  "src": "1226:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28503,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1264:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28505,
                  "src": "1248:23:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1225:47:120"
            },
            "src": "1210:63:120"
          },
          {
            "baseFunctions": [
              12830
            ],
            "body": {
              "id": 28527,
              "nodeType": "Block",
              "src": "1396:135:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28516,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1452:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1452:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28518,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28445,
                        "src": "1464:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28519,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28509,
                        "src": "1477:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28513,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28447,
                            "src": "1424:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28512,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1406:17:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 28514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:28:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 28515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "1406:45:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 28520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:79:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28521,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:79:120"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 28523,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28507,
                        "src": "1510:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28524,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28509,
                        "src": "1516:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28522,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28505,
                      "src": "1500:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:24:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28526,
                  "nodeType": "EmitStatement",
                  "src": "1495:29:120"
                }
              ]
            },
            "functionSelector": "e2bbb158",
            "id": 28528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1348:7:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28507,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1364:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28528,
                  "src": "1356:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28509,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1378:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28528,
                  "src": "1370:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:31:120"
            },
            "returnParameters": {
              "id": 28511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:0:120"
            },
            "scope": 28575,
            "src": "1339:192:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 28534,
            "name": "Withdrew",
            "nameLocation": "1543:8:120",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28530,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1568:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28534,
                  "src": "1552:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28532,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1590:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28534,
                  "src": "1574:23:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1551:47:120"
            },
            "src": "1537:62:120"
          },
          {
            "baseFunctions": [
              12837
            ],
            "body": {
              "id": 28555,
              "nodeType": "Block",
              "src": "1706:113:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1754:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1754:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28547,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28538,
                        "src": "1766:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28542,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28447,
                            "src": "1738:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28541,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17294,
                          "src": "1716:21:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$17294_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 28543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1716:32:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$17294",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 28544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17293,
                      "src": "1716:37:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 28548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:58:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28549,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:58:120"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 28551,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28536,
                        "src": "1798:4:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28552,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28538,
                        "src": "1804:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28550,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28534,
                      "src": "1789:8:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28554,
                  "nodeType": "EmitStatement",
                  "src": "1784:28:120"
                }
              ]
            },
            "functionSelector": "441a3e70",
            "id": 28556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1657:8:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28536,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1674:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28556,
                  "src": "1666:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28538,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1688:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28556,
                  "src": "1680:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:31:120"
            },
            "returnParameters": {
              "id": 28540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1706:0:120"
            },
            "scope": 28575,
            "src": "1648:171:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12842
            ],
            "body": {
              "id": 28561,
              "nodeType": "Block",
              "src": "1912:2:120",
              "statements": []
            },
            "functionSelector": "41441d3b",
            "id": 28562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterStaking",
            "nameLocation": "1873:12:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28558,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1894:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28562,
                  "src": "1886:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1885:17:120"
            },
            "returnParameters": {
              "id": 28560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1912:0:120"
            },
            "scope": 28575,
            "src": "1864:50:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12847
            ],
            "body": {
              "id": 28567,
              "nodeType": "Block",
              "src": "2010:2:120",
              "statements": []
            },
            "functionSelector": "1058d281",
            "id": 28568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStaking",
            "nameLocation": "1971:12:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28564,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1992:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28568,
                  "src": "1984:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1983:17:120"
            },
            "returnParameters": {
              "id": 28566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2010:0:120"
            },
            "scope": 28575,
            "src": "1962:50:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12852
            ],
            "body": {
              "id": 28573,
              "nodeType": "Block",
              "src": "2130:2:120",
              "statements": []
            },
            "functionSelector": "5312ea8e",
            "id": 28574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "2089:17:120",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28570,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2115:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 28574,
                  "src": "2107:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:14:120"
            },
            "returnParameters": {
              "id": 28572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2130:0:120"
            },
            "scope": 28575,
            "src": "2080:52:120",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28591,
        "src": "352:1782:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28576,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17312,
              "src": "2162:20:120"
            },
            "id": 28577,
            "nodeType": "InheritanceSpecifier",
            "src": "2162:20:120"
          }
        ],
        "canonicalName": "MockAMMToken0",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28578,
        "linearizedBaseContracts": [
          28578,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774
        ],
        "name": "MockAMMToken0",
        "nameLocation": "2145:13:120",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28591,
        "src": "2136:49:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28579,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17312,
              "src": "2212:20:120"
            },
            "id": 28580,
            "nodeType": "InheritanceSpecifier",
            "src": "2212:20:120"
          }
        ],
        "canonicalName": "MockAMMToken1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28581,
        "linearizedBaseContracts": [
          28581,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774
        ],
        "name": "MockAMMToken1",
        "nameLocation": "2195:13:120",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28591,
        "src": "2186:49:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28582,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17312,
              "src": "2268:20:120"
            },
            "id": 28583,
            "nodeType": "InheritanceSpecifier",
            "src": "2268:20:120"
          }
        ],
        "canonicalName": "MockAMMOtherLPToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28584,
        "linearizedBaseContracts": [
          28584,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774
        ],
        "name": "MockAMMOtherLPToken",
        "nameLocation": "2245:19:120",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28591,
        "src": "2236:55:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28585,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17312,
              "src": "2315:20:120"
            },
            "id": 28586,
            "nodeType": "InheritanceSpecifier",
            "src": "2315:20:120"
          }
        ],
        "canonicalName": "MockLPPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28587,
        "linearizedBaseContracts": [
          28587,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774
        ],
        "name": "MockLPPool",
        "nameLocation": "2301:10:120",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28591,
        "src": "2292:46:120",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28588,
              "name": "MockLPPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28587,
              "src": "2363:10:120"
            },
            "id": 28589,
            "nodeType": "InheritanceSpecifier",
            "src": "2363:10:120"
          }
        ],
        "canonicalName": "MockLPPool1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28590,
        "linearizedBaseContracts": [
          28590,
          28587,
          17312,
          2557,
          2660,
          17294,
          2635,
          3169,
          1774
        ],
        "name": "MockLPPool1",
        "nameLocation": "2348:11:120",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28591,
        "src": "2339:37:120",
        "usedErrors": []
      }
    ],
    "src": "33:2344:120"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-23T16:17:51.839Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}