{
  "contractName": "ZorroControllerOwnable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ZorroToken.sol\":\"ZorroControllerOwnable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/tokens/ZorroToken.sol\":{\"keccak256\":\"0xf2e441c3d8ed3156bde9179b67a1b62500d2dcd4ffc4076100b89be3d272db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164baf4bddb147d2127cdc9cf029efa8c0a0e9b6a176bb11c18fb94301dbfa6e\",\"dweb:/ipfs/QmP8PQCCHj9Kvi1XFeD6h7duXBBBt3WqxgitVcDB94pL5e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610033610025640100000000610038810204565b64010000000061003c810204565b61008c565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103248061009b6000396000f3fe608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063b1414dbb146100a0578063f2fde38b146100b3575b600080fd5b6100756100c6565b005b600054600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b60015461008490600160a060020a031681565b6100756100c13660046102be565b61014b565b600054600160a060020a0316331461013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101496000610261565b565b600054600160a060020a031633146101bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610136565b600160a060020a038116610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610136565b61025e81610261565b50565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102d057600080fd5b8135600160a060020a03811681146102e757600080fd5b939250505056fea264697066735822122065927f38fcf6f859b6b112a1a293f589e09345994d507e6cd00ca1f9a1f1141564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610068577c01000000000000000000000000000000000000000000000000000000006000350463715018a6811461006d5780638da5cb5b14610077578063b1414dbb146100a0578063f2fde38b146100b3575b600080fd5b6100756100c6565b005b600054600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b60015461008490600160a060020a031681565b6100756100c13660046102be565b61014b565b600054600160a060020a0316331461013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101496000610261565b565b600054600160a060020a031633146101bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610136565b600160a060020a038116610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610136565b61025e81610261565b50565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102d057600080fd5b8135600160a060020a03811681146102e757600080fd5b939250505056fea264697066735822122065927f38fcf6f859b6b112a1a293f589e09345994d507e6cd00ca1f9a1f1141564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1324:55",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:55",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:55",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:55",
                "type": ""
              }
            ],
            "src": "14:226:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:239:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:55"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "386:36:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "412:9:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "399:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:23:55"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "390:5:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "508:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "517:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "520:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "510:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "510:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "444:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "455:5:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "462:42:55",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "451:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "451:54:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "441:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:65:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:73:55"
                  },
                  "nodeType": "YulIf",
                  "src": "431:93:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:55",
                "type": ""
              }
            ],
            "src": "245:309:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:182:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:21:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:21:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "795:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:18:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "800:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:30:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:30:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:2:55",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:18:55"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "839:34:55",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:62:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "812:62:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "883:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "895:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:2:55",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "883:4:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "710:9:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "724:4:55",
                "type": ""
              }
            ],
            "src": "559:356:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1094:228:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:21:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:21:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:55",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1161:2:55",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:30:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:30:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:55",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:55"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1200:34:55",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:62:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:62:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:55",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:55"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1271:8:55",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:36:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1244:36:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:27:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1301:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:3:55",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1297:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1297:19:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1289:4:55"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1071:9:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1085:4:55",
                "type": ""
              }
            ],
            "src": "920:402:55"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 55,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "288:257:49:-:0;;;;;;;;;;;;-1:-1:-1;921:32:3;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;288:257:49;;640:96:13;719:10;;640:96::o;2270:187:3:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;288:257:49:-;;;;;;;",
  "deployedSourceMap": "288:257:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:3;;;:::i;:::-;;1036:85;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;;-1:-1:-1;;;;;178:55:55;;;160:74;;148:2;133:18;1036:85:3;;;;;;;505:37:49;;;;;-1:-1:-1;;;;;505:37:49;;;1918:198:3;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:13;1248:23:3;1240:68;;;;;;;761:2:55;1240:68:3;;;743:21:55;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:3;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:13;1248:23:3;1240:68;;;;;;;761:2:55;1240:68:3;;;743:21:55;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:3;559:356:55;1240:68:3;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;::::1;::::0;;1122:2:55;1998:73:3::1;::::0;::::1;1104:21:55::0;1161:2;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1271:8;1251:18;;;1244:36;1297:19;;1998:73:3::1;920:402:55::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;245:309:55:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;-1:-1:-1;;;;;455:5:55;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:55:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ZorroControllerOwnable is Ownable {\n    /* Modifiers */\n    modifier onlyZorroController() {\n        require(_msgSender() == zorroControllerAddress, \"!zorroController\");\n        _;\n    }\n\n    /* State */\n    address public zorroControllerAddress;\n}\n\n/// @title The Zorro token (cross chain)\ncontract Zorro is ERC20(\"ZORRO\", \"ZOR\"), ZorroControllerOwnable {\n    /* Constructor */\n    constructor(address _zorroController) {\n        zorroControllerAddress = _zorroController;\n    }\n\n    /* Functions */\n    /// @notice Allows authorized minting of the Zorro token to a specified address\n    /// @param _to The address to mint to\n    /// @param _amount The amount to mint\n    function mint(address _to, uint256 _amount) public onlyZorroController {\n        _mint(_to, _amount);\n    }\n\n    /// @notice Allows authorized burning of the Zorro token from a specified account\n    /// @param _account The address to transfer ZOR from for burning\n    /// @param _amount The amount of ZOR to transfer and burn\n    function burn(address _account, uint256 _amount)\n        public\n        onlyZorroController\n    {\n        _burn(_account, _amount);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/ZorroToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ZorroToken.sol",
    "exportedSymbols": {
      "Address": [
        2945
      ],
      "Context": [
        2967
      ],
      "ERC20": [
        2323
      ],
      "IERC20": [
        2401
      ],
      "IERC20Metadata": [
        2426
      ],
      "Ownable": [
        532
      ],
      "SafeERC20": [
        2650
      ],
      "Zorro": [
        10562
      ],
      "ZorroControllerOwnable": [
        10512
      ]
    },
    "id": 10563,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10491,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:49"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2324,
        "src": "57:55:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 10493,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2946,
        "src": "114:51:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2651,
        "src": "167:65:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 533,
        "src": "234:52:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10496,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "323:7:49"
            },
            "id": 10497,
            "nodeType": "InheritanceSpecifier",
            "src": "323:7:49"
          }
        ],
        "canonicalName": "ZorroControllerOwnable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10512,
        "linearizedBaseContracts": [
          10512,
          532,
          2967
        ],
        "name": "ZorroControllerOwnable",
        "nameLocation": "297:22:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10508,
              "nodeType": "Block",
              "src": "388:95:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10500,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2957,
                            "src": "406:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "406:12:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10502,
                          "name": "zorroControllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10511,
                          "src": "422:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "406:38:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "id": 10504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "446:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        },
                        "value": "!zorroController"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        }
                      ],
                      "id": 10499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "398:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:67:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "398:67:49"
                },
                {
                  "id": 10507,
                  "nodeType": "PlaceholderStatement",
                  "src": "475:1:49"
                }
              ]
            },
            "id": 10509,
            "name": "onlyZorroController",
            "nameLocation": "366:19:49",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:49"
            },
            "src": "357:126:49",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b1414dbb",
            "id": 10511,
            "mutability": "mutable",
            "name": "zorroControllerAddress",
            "nameLocation": "520:22:49",
            "nodeType": "VariableDeclaration",
            "scope": 10512,
            "src": "505:37:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10510,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 10563,
        "src": "288:257:49",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 10515,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "612:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 10516,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "621:5:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 10514,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2323,
              "src": "606:5:49"
            },
            "id": 10517,
            "nodeType": "InheritanceSpecifier",
            "src": "606:21:49"
          },
          {
            "baseName": {
              "id": 10518,
              "name": "ZorroControllerOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10512,
              "src": "629:22:49"
            },
            "id": 10519,
            "nodeType": "InheritanceSpecifier",
            "src": "629:22:49"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10513,
          "nodeType": "StructuredDocumentation",
          "src": "547:41:49",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 10562,
        "linearizedBaseContracts": [
          10562,
          10512,
          532,
          2323,
          2426,
          2401,
          2967
        ],
        "name": "Zorro",
        "nameLocation": "597:5:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10528,
              "nodeType": "Block",
              "src": "718:58:49",
              "statements": [
                {
                  "expression": {
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10524,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10511,
                      "src": "728:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10525,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10521,
                      "src": "753:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "728:41:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "728:41:49"
                }
              ]
            },
            "id": 10529,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10521,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "700:16:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10529,
                  "src": "692:24:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:26:49"
            },
            "returnParameters": {
              "id": 10523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:49"
            },
            "scope": 10562,
            "src": "680:96:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10544,
              "nodeType": "Block",
              "src": "1041:36:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10540,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10532,
                        "src": "1057:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10541,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10534,
                        "src": "1062:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10539,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2140,
                      "src": "1051:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:19:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10543,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:19:49"
                }
              ]
            },
            "documentation": {
              "id": 10530,
              "nodeType": "StructuredDocumentation",
              "src": "802:163:49",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 10545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10536,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10509,
                  "src": "1021:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:19:49"
              }
            ],
            "name": "mint",
            "nameLocation": "979:4:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10532,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "992:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10545,
                  "src": "984:11:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10534,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1005:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10545,
                  "src": "997:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:30:49"
            },
            "returnParameters": {
              "id": 10538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:49"
            },
            "scope": 10562,
            "src": "970:107:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10560,
              "nodeType": "Block",
              "src": "1396:41:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10556,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10548,
                        "src": "1412:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10557,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10550,
                        "src": "1422:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10555,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2212,
                      "src": "1406:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10559,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:24:49"
                }
              ]
            },
            "documentation": {
              "id": 10546,
              "nodeType": "StructuredDocumentation",
              "src": "1083:212:49",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 10561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10553,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10552,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10509,
                  "src": "1372:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:19:49"
              }
            ],
            "name": "burn",
            "nameLocation": "1309:4:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10548,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1322:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1314:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10550,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1340:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1332:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:35:49"
            },
            "returnParameters": {
              "id": 10554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:0:49"
            },
            "scope": 10562,
            "src": "1300:137:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10563,
        "src": "588:851:49",
        "usedErrors": []
      }
    ],
    "src": "32:1408:49"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/ZorroToken.sol",
    "exportedSymbols": {
      "Address": [
        2945
      ],
      "Context": [
        2967
      ],
      "ERC20": [
        2323
      ],
      "IERC20": [
        2401
      ],
      "IERC20Metadata": [
        2426
      ],
      "Ownable": [
        532
      ],
      "SafeERC20": [
        2650
      ],
      "Zorro": [
        10562
      ],
      "ZorroControllerOwnable": [
        10512
      ]
    },
    "id": 10563,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10491,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:49"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 10492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2324,
        "src": "57:55:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 10493,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2946,
        "src": "114:51:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 2651,
        "src": "167:65:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10563,
        "sourceUnit": 533,
        "src": "234:52:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10496,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "323:7:49"
            },
            "id": 10497,
            "nodeType": "InheritanceSpecifier",
            "src": "323:7:49"
          }
        ],
        "canonicalName": "ZorroControllerOwnable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10512,
        "linearizedBaseContracts": [
          10512,
          532,
          2967
        ],
        "name": "ZorroControllerOwnable",
        "nameLocation": "297:22:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10508,
              "nodeType": "Block",
              "src": "388:95:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10500,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2957,
                            "src": "406:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "406:12:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10502,
                          "name": "zorroControllerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10511,
                          "src": "422:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "406:38:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "id": 10504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "446:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        },
                        "value": "!zorroController"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0",
                          "typeString": "literal_string \"!zorroController\""
                        }
                      ],
                      "id": 10499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "398:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:67:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "398:67:49"
                },
                {
                  "id": 10507,
                  "nodeType": "PlaceholderStatement",
                  "src": "475:1:49"
                }
              ]
            },
            "id": 10509,
            "name": "onlyZorroController",
            "nameLocation": "366:19:49",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:49"
            },
            "src": "357:126:49",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b1414dbb",
            "id": 10511,
            "mutability": "mutable",
            "name": "zorroControllerAddress",
            "nameLocation": "520:22:49",
            "nodeType": "VariableDeclaration",
            "scope": 10512,
            "src": "505:37:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10510,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          }
        ],
        "scope": 10563,
        "src": "288:257:49",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "5a4f52524f",
                "id": 10515,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "612:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_326275b9f4b68aa7d7ea224c0bef5965036702d3ad6d32d01b371497cf2a3f62",
                  "typeString": "literal_string \"ZORRO\""
                },
                "value": "ZORRO"
              },
              {
                "hexValue": "5a4f52",
                "id": 10516,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "621:5:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c40239b41672b77d6dfbd44e9921d84b98894c886703f34c0c956d542227eeaf",
                  "typeString": "literal_string \"ZOR\""
                },
                "value": "ZOR"
              }
            ],
            "baseName": {
              "id": 10514,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2323,
              "src": "606:5:49"
            },
            "id": 10517,
            "nodeType": "InheritanceSpecifier",
            "src": "606:21:49"
          },
          {
            "baseName": {
              "id": 10518,
              "name": "ZorroControllerOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10512,
              "src": "629:22:49"
            },
            "id": 10519,
            "nodeType": "InheritanceSpecifier",
            "src": "629:22:49"
          }
        ],
        "canonicalName": "Zorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10513,
          "nodeType": "StructuredDocumentation",
          "src": "547:41:49",
          "text": "@title The Zorro token (cross chain)"
        },
        "fullyImplemented": true,
        "id": 10562,
        "linearizedBaseContracts": [
          10562,
          10512,
          532,
          2323,
          2426,
          2401,
          2967
        ],
        "name": "Zorro",
        "nameLocation": "597:5:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10528,
              "nodeType": "Block",
              "src": "718:58:49",
              "statements": [
                {
                  "expression": {
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10524,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10511,
                      "src": "728:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10525,
                      "name": "_zorroController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10521,
                      "src": "753:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "728:41:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "728:41:49"
                }
              ]
            },
            "id": 10529,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10521,
                  "mutability": "mutable",
                  "name": "_zorroController",
                  "nameLocation": "700:16:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10529,
                  "src": "692:24:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:26:49"
            },
            "returnParameters": {
              "id": 10523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:49"
            },
            "scope": 10562,
            "src": "680:96:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10544,
              "nodeType": "Block",
              "src": "1041:36:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10540,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10532,
                        "src": "1057:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10541,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10534,
                        "src": "1062:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10539,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2140,
                      "src": "1051:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:19:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10543,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:19:49"
                }
              ]
            },
            "documentation": {
              "id": 10530,
              "nodeType": "StructuredDocumentation",
              "src": "802:163:49",
              "text": "@notice Allows authorized minting of the Zorro token to a specified address\n @param _to The address to mint to\n @param _amount The amount to mint"
            },
            "functionSelector": "40c10f19",
            "id": 10545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10536,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10509,
                  "src": "1021:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:19:49"
              }
            ],
            "name": "mint",
            "nameLocation": "979:4:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10532,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "992:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10545,
                  "src": "984:11:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10534,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1005:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10545,
                  "src": "997:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:30:49"
            },
            "returnParameters": {
              "id": 10538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:49"
            },
            "scope": 10562,
            "src": "970:107:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10560,
              "nodeType": "Block",
              "src": "1396:41:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10556,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10548,
                        "src": "1412:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10557,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10550,
                        "src": "1422:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10555,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2212,
                      "src": "1406:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10559,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:24:49"
                }
              ]
            },
            "documentation": {
              "id": 10546,
              "nodeType": "StructuredDocumentation",
              "src": "1083:212:49",
              "text": "@notice Allows authorized burning of the Zorro token from a specified account\n @param _account The address to transfer ZOR from for burning\n @param _amount The amount of ZOR to transfer and burn"
            },
            "functionSelector": "9dc29fac",
            "id": 10561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10553,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10552,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10509,
                  "src": "1372:19:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:19:49"
              }
            ],
            "name": "burn",
            "nameLocation": "1309:4:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10548,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1322:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1314:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10550,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1340:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 10561,
                  "src": "1332:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:35:49"
            },
            "returnParameters": {
              "id": 10554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:0:49"
            },
            "scope": 10562,
            "src": "1300:137:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10563,
        "src": "588:851:49",
        "usedErrors": []
      }
    ],
    "src": "32:1408:49"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-07T02:47:41.432Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}