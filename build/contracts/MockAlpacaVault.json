{
  "contractName": "MockAlpacaVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_liquidity",
          "type": "uint256"
        }
      ],
      "name": "AddedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RemovedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken0Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burn",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "requestFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"name\":\"AddedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RemovedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"requestFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burn\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken0Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"requestFunds(address,uint256)\":{\"notice\":\"Request funds from user through Vault\"},\"token()\":{\"notice\":\"Underlying token address\"},\"totalToken()\":{\"notice\":\"Return the total ERC20 entitled to the token holders. Be careful of unaccrued interests.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultAlpaca.sol\":\"MockAlpacaVault\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xd668e8741a79ce8c9531641d439b3e8dc1bd48eb83062137932713788571bd84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37353c74f6188187fb1b7c1227e82517da2c1eed515f6f93ea6cc58ac8c03bb7\",\"dweb:/ipfs/QmdhSX16g4sfTCBwx3PpP4bw5z9dMYRWnjmavnXLU9ZcEX\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0xca25febb3d9d1d68b8b7860b767db9ab18378d3adea7be76f7bb9dad8a50cb3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2393a0ddb94615c1f954243cd32acefa59bc176bbaeb8b6a3d0b0e88d75a8211\",\"dweb:/ipfs/Qmb3mpQhf3Q9W9rLizkP9pBdLvN6AqTqcUAAkA8EYYdNd2\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVaultAlpaca.sol\":{\"keccak256\":\"0xb9855910b90106f42273dbaedc17a66651c166b9dec496110f69b4b3e9347946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f2596ac65f2ba310f39d92b4aea898600ccf46a399a06dadb11df5b07cd02dc\",\"dweb:/ipfs/QmeFMdSF1CXG9iKm9xPh5khngjGsbf2H3CYtL5yLkGrFmd\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0xbc01335b64576076e0a43c0be771c89ccb5363b426521ce379f560e9d30cfe94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03d5bf8cb030a15ef51faf151654a2ffb2dabfeef04d56079a04289acc139317\",\"dweb:/ipfs/QmYGZw4JJPM4nxcWQzZKsrq8SuDW29Ye4c7enTaEsX1rpi\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x32cac346245d108670fd526a8d05a98c826fc16481b5e1a5f3342ef4bffe8692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b9abe0286f0afa0793191ce077c9e821ee7b0f6f3cf1c60a6c2691262e5970\",\"dweb:/ipfs/QmYqaL5S8TPMmLgxZGM4g7J3DrPASVi9WDNdyLWBqThd34\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]},\"project:/contracts/vaults/VaultAlpaca.sol\":{\"keccak256\":\"0x52fc9b5fc397136397d187dbec4ed24e6c34e1952ac942d10055ca6d712efb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://011c8531144b6630d4454954c4d479951fc5315c938f7519511984fde7a7ec1e\",\"dweb:/ipfs/QmNmbcR7zETEHLUqrLSMAbym1nuq1NtdvsMzgH7xZJpQr9\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x456ef42ed0073ba71c57a448d0947e43873f9e03e575d3e8844eb2a999a9bf02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f25731dfc4f37f71df7751e89b4136b51ba3c481e0a3beaf9b08f30e03708cf9\",\"dweb:/ipfs/QmTyXkJWd8QNhL9NJyfkP6nqwemmGrof5Bx68RSPii52CD\"]},\"project:/contracts/vaults/actions/VaultActionsAlpaca.sol\":{\"keccak256\":\"0x4ddf7a8c079d135c2bccde6c99a7511845a49bec8788ae2bba012618d50e0fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e00a55e89d4f68924af4df316c2c33fcdd58d4dd5cac50a8f57159bbb6dc210c\",\"dweb:/ipfs/QmQJMuD5Bve2QG8WkwuWFowJZHWV5y299v6tfvBNDfa7xh\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0xb7925f1137a6d68a0d01d6f560cca7de7978f25441d3207c5d849223ac1c015f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32936cf7db7afeb21565ee2290ede1b538b8199f244b3a2c18d192392760120\",\"dweb:/ipfs/QmRcAZWCNEwcqq12u63LoA7s9tZdUeDj5TAtbqpQeMJjUe\"]},\"project:/contracts/vaults/mocks/MockVaultAlpaca.sol\":{\"keccak256\":\"0xb7fcca9752e7bf0bdd8cfe8e155fc8a243a07da6605f0b013432ab2a465d17a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a10d57ed85e293c21b8093800b3be4c0d4912e2403ffabda228a32a783b4030\",\"dweb:/ipfs/QmX4QNxHjHYrs2vNS28swzknWowoo2fk3ZKEkAiWQEpVzh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611206806100206000396000f3fe608060405260043610610147576000357c0100000000000000000000000000000000000000000000000000000000900480634b0e7216116100c8578063a457c2d71161008c578063a457c2d714610384578063a9059cbb146103a4578063b6b55f25146103c4578063c8479cd6146103d7578063dd62ed3e14610421578063fc0c546a1461046757600080fd5b80634b0e7216146102bb578063626be5671461030557806370a082311461031957806370d5ae051461034f57806395d89b411461036f57600080fd5b80632e1a7d4d1161010f5780632e1a7d4d1461021e578063313ce56714610240578063395093511461025c57806340c10f191461027c578063494666b61461029c57600080fd5b806306fdde031461014c578063095ea7b3146101775780630dfe1681146101a757806318160ddd146101df57806323b872dd146101fe575b600080fd5b34801561015857600080fd5b5061016161047b565b60405161016e9190610fe3565b60405180910390f35b34801561018357600080fd5b50610197610192366004611032565b61050d565b604051901515815260200161016e565b3480156101b357600080fd5b506065546101c790600160a060020a031681565b604051600160a060020a03909116815260200161016e565b3480156101eb57600080fd5b506035545b60405190815260200161016e565b34801561020a57600080fd5b5061019761021936600461105c565b610525565b34801561022a57600080fd5b5061023e610239366004611098565b61054b565b005b34801561024c57600080fd5b506040516012815260200161016e565b34801561026857600080fd5b50610197610277366004611032565b610627565b34801561028857600080fd5b5061023e610297366004611032565b610666565b3480156102a857600080fd5b5061023e6102b7366004611032565b5050565b3480156102c757600080fd5b5061023e6102d63660046110b1565b6066805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b34801561031157600080fd5b5060006101f0565b34801561032557600080fd5b506101f06103343660046110b1565b600160a060020a031660009081526033602052604090205490565b34801561035b57600080fd5b506066546101c790600160a060020a031681565b34801561037b57600080fd5b50610161610670565b34801561039057600080fd5b5061019761039f366004611032565b61067f565b3480156103b057600080fd5b506101976103bf366004611032565b61073c565b61023e6103d2366004611098565b61074a565b3480156103e357600080fd5b5061023e6103f23660046110b1565b6065805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b34801561042d57600080fd5b506101f061043c3660046110cc565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b34801561047357600080fd5b5060006101c7565b60606036805461048a906110ff565b80601f01602080910402602001604051908101604052809291908181526020018280546104b6906110ff565b80156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b5050505050905090565b60003361051b8185856107ab565b5060019392505050565b600033610533858285610909565b61053e85858561099e565b60019150505b9392505050565b6066546105659030903390600160a060020a031684610bbe565b6065546040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152671bc16d674ec800006024820181905291600160a060020a0316906340c10f1990604401600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050507f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11218160405161061b91815260200190565b60405180910390a15050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061051b9082908690610661908790611153565b6107ab565b6102b78282610c46565b60606037805461048a906110ff565b336000818152603460209081526040808320600160a060020a0387168452909152812054909190838110156107245760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61073182868684036107ab565b506001949350505050565b60003361051b81858561099e565b60655461076290600160a060020a0316333084610bbe565b670de0b6b3a76400006107753382610c46565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c497701910161061b565b600160a060020a0383166108295760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0382166108a85760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a038381166000908152603460209081526040808320938616835292905220546000198114610998578181101561098b5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161071b565b61099884848484036107ab565b50505050565b600160a060020a038316610a1d5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a038216610a9c5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a03831660009081526033602052604090205481811015610b2e5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610b65908490611153565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb191815260200190565b60405180910390a3610998565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610998908590610d2d565b600160a060020a038216610c9f5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161071b565b8060356000828254610cb19190611153565b9091555050600160a060020a03821660009081526033602052604081208054839290610cde908490611153565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610d82826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316610e159092919063ffffffff16565b805190915015610d285780806020019051810190610da09190611192565b610d285760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161071b565b6060610e248484600085610e2c565b949350505050565b60603031831115610ea85760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0385163b610f025760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161071b565b60008086600160a060020a03168587604051610f1e91906111b4565b60006040518083038185875af1925050503d8060008114610f5b576040519150601f19603f3d011682016040523d82523d6000602084013e610f60565b606091505b5091509150610f70828286610f7b565b979650505050505050565b60608315610f8a575081610544565b825115610f9a5782518084602001fd5b8160405160e560020a62461bcd02815260040161071b9190610fe3565b60005b83811015610fd2578181015183820152602001610fba565b838111156109985750506000910152565b6020815260008251806020840152611002816040850160208701610fb7565b601f01601f19169190910160400192915050565b8035600160a060020a038116811461102d57600080fd5b919050565b6000806040838503121561104557600080fd5b61104e83611016565b946020939093013593505050565b60008060006060848603121561107157600080fd5b61107a84611016565b925061108860208501611016565b9150604084013590509250925092565b6000602082840312156110aa57600080fd5b5035919050565b6000602082840312156110c357600080fd5b61054482611016565b600080604083850312156110df57600080fd5b6110e883611016565b91506110f660208401611016565b90509250929050565b60028104600182168061111357607f821691505b6020821081141561114d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000821982111561118d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156111a457600080fd5b8151801515811461054457600080fd5b600082516111c6818460208701610fb7565b919091019291505056fea26469706673582212208e9e2201b9f127e68de4af38d62db9156d164b29c5173b1bef5f931b7cc30d7064736f6c634300080a0033",
  "deployedBytecode": "0x608060405260043610610147576000357c0100000000000000000000000000000000000000000000000000000000900480634b0e7216116100c8578063a457c2d71161008c578063a457c2d714610384578063a9059cbb146103a4578063b6b55f25146103c4578063c8479cd6146103d7578063dd62ed3e14610421578063fc0c546a1461046757600080fd5b80634b0e7216146102bb578063626be5671461030557806370a082311461031957806370d5ae051461034f57806395d89b411461036f57600080fd5b80632e1a7d4d1161010f5780632e1a7d4d1461021e578063313ce56714610240578063395093511461025c57806340c10f191461027c578063494666b61461029c57600080fd5b806306fdde031461014c578063095ea7b3146101775780630dfe1681146101a757806318160ddd146101df57806323b872dd146101fe575b600080fd5b34801561015857600080fd5b5061016161047b565b60405161016e9190610fe3565b60405180910390f35b34801561018357600080fd5b50610197610192366004611032565b61050d565b604051901515815260200161016e565b3480156101b357600080fd5b506065546101c790600160a060020a031681565b604051600160a060020a03909116815260200161016e565b3480156101eb57600080fd5b506035545b60405190815260200161016e565b34801561020a57600080fd5b5061019761021936600461105c565b610525565b34801561022a57600080fd5b5061023e610239366004611098565b61054b565b005b34801561024c57600080fd5b506040516012815260200161016e565b34801561026857600080fd5b50610197610277366004611032565b610627565b34801561028857600080fd5b5061023e610297366004611032565b610666565b3480156102a857600080fd5b5061023e6102b7366004611032565b5050565b3480156102c757600080fd5b5061023e6102d63660046110b1565b6066805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b34801561031157600080fd5b5060006101f0565b34801561032557600080fd5b506101f06103343660046110b1565b600160a060020a031660009081526033602052604090205490565b34801561035b57600080fd5b506066546101c790600160a060020a031681565b34801561037b57600080fd5b50610161610670565b34801561039057600080fd5b5061019761039f366004611032565b61067f565b3480156103b057600080fd5b506101976103bf366004611032565b61073c565b61023e6103d2366004611098565b61074a565b3480156103e357600080fd5b5061023e6103f23660046110b1565b6065805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b34801561042d57600080fd5b506101f061043c3660046110cc565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b34801561047357600080fd5b5060006101c7565b60606036805461048a906110ff565b80601f01602080910402602001604051908101604052809291908181526020018280546104b6906110ff565b80156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b5050505050905090565b60003361051b8185856107ab565b5060019392505050565b600033610533858285610909565b61053e85858561099e565b60019150505b9392505050565b6066546105659030903390600160a060020a031684610bbe565b6065546040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152671bc16d674ec800006024820181905291600160a060020a0316906340c10f1990604401600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050507f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11218160405161061b91815260200190565b60405180910390a15050565b336000818152603460209081526040808320600160a060020a038716845290915281205490919061051b9082908690610661908790611153565b6107ab565b6102b78282610c46565b60606037805461048a906110ff565b336000818152603460209081526040808320600160a060020a0387168452909152812054909190838110156107245760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61073182868684036107ab565b506001949350505050565b60003361051b81858561099e565b60655461076290600160a060020a0316333084610bbe565b670de0b6b3a76400006107753382610c46565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c497701910161061b565b600160a060020a0383166108295760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0382166108a85760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a038381166000908152603460209081526040808320938616835292905220546000198114610998578181101561098b5760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161071b565b61099884848484036107ab565b50505050565b600160a060020a038316610a1d5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a038216610a9c5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a03831660009081526033602052604090205481811015610b2e5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a03808516600090815260336020526040808220858503905591851681529081208054849290610b65908490611153565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb191815260200190565b60405180910390a3610998565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610998908590610d2d565b600160a060020a038216610c9f5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161071b565b8060356000828254610cb19190611153565b9091555050600160a060020a03821660009081526033602052604081208054839290610cde908490611153565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610d82826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316610e159092919063ffffffff16565b805190915015610d285780806020019051810190610da09190611192565b610d285760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161071b565b6060610e248484600085610e2c565b949350505050565b60603031831115610ea85760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161071b565b600160a060020a0385163b610f025760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161071b565b60008086600160a060020a03168587604051610f1e91906111b4565b60006040518083038185875af1925050503d8060008114610f5b576040519150601f19603f3d011682016040523d82523d6000602084013e610f60565b606091505b5091509150610f70828286610f7b565b979650505050505050565b60608315610f8a575081610544565b825115610f9a5782518084602001fd5b8160405160e560020a62461bcd02815260040161071b9190610fe3565b60005b83811015610fd2578181015183820152602001610fba565b838111156109985750506000910152565b6020815260008251806020840152611002816040850160208701610fb7565b601f01601f19169190910160400192915050565b8035600160a060020a038116811461102d57600080fd5b919050565b6000806040838503121561104557600080fd5b61104e83611016565b946020939093013593505050565b60008060006060848603121561107157600080fd5b61107a84611016565b925061108860208501611016565b9150604084013590509250925092565b6000602082840312156110aa57600080fd5b5035919050565b6000602082840312156110c357600080fd5b61054482611016565b600080604083850312156110df57600080fd5b6110e883611016565b91506110f660208401611016565b90509250929050565b60028104600182168061111357607f821691505b6020821081141561114d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000821982111561118d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602082840312156111a457600080fd5b8151801515811461054457600080fd5b600082516111c6818460208701610fb7565b919091019291505056fea26469706673582212208e9e2201b9f127e68de4af38d62db9156d164b29c5173b1bef5f931b7cc30d7064736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9463:128",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:128",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:128",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:128",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:128",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:128"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:128"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:128"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:128"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:128"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:128"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:128"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:128"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:128"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:128"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:128",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:128",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:128"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:128",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:128"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:128"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:128",
                    "statements": []
                  },
                  "src": "96:113:128"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:128"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:128"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:128"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:128"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:128"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:128",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:128",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:128",
                "type": ""
              }
            ],
            "src": "14:258:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:128"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:128"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:128",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:128"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:128"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:128",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:128"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:128"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:128",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:128"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:128"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:128"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:128",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:128",
                "type": ""
              }
            ],
            "src": "277:383:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:147:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "724:29:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "733:12:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:20:128"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:128"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "839:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "851:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "841:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "841:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "841:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "775:5:128"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "786:5:128"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "793:42:128",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:128"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:54:128"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "772:2:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:65:128"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:73:128"
                  },
                  "nodeType": "YulIf",
                  "src": "762:93:128"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "693:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:128",
                "type": ""
              }
            ],
            "src": "665:196:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "953:167:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "999:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1008:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1011:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1001:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1001:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1001:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "974:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "983:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "970:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "970:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:128",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "966:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "963:52:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:39:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1053:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1034:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:29:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1072:42:128",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1099:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1110:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:18:128"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1082:12:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:32:128"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1072:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "911:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "922:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "934:6:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "942:6:128",
                "type": ""
              }
            ],
            "src": "866:254:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1220:92:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1230:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1242:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1253:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1238:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1230:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1272:9:128"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1297:6:128"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1290:6:128"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1290:14:128"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1283:6:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1283:22:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1265:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:41:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1265:41:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1189:9:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1200:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1211:4:128",
                "type": ""
              }
            ],
            "src": "1125:187:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1418:125:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1428:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1440:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1451:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1436:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1436:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1428:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1470:9:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1485:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1493:42:128",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:55:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1463:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:74:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1463:74:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1387:9:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1398:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1409:4:128",
                "type": ""
              }
            ],
            "src": "1317:226:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1649:76:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1659:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1671:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1682:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1667:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1659:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1701:9:128"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1712:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1694:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1694:25:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1694:25:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1618:9:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1629:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1640:4:128",
                "type": ""
              }
            ],
            "src": "1548:177:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:224:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1880:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1882:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1882:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1882:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1855:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1864:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:128",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1847:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "1844:52:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1905:39:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1934:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1915:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1915:29:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1905:6:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1953:48:128",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1986:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1997:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1982:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:18:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1963:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:38:128"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2010:42:128",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2037:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2048:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:18:128"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2020:12:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:32:128"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2010:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1784:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1795:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1807:6:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1815:6:128",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1823:6:128",
                "type": ""
              }
            ],
            "src": "1730:328:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2133:110:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2179:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2188:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2191:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2181:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2181:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2181:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2154:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2163:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2175:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2146:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "2143:52:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2204:33:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2227:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2214:12:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2214:23:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2204:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2099:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2110:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2122:6:128",
                "type": ""
              }
            ],
            "src": "2063:180:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2345:87:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2355:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2367:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2378:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2363:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2363:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2355:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2397:9:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2412:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2420:4:128",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2408:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2408:17:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2390:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:36:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2390:36:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2314:9:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2325:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2336:4:128",
                "type": ""
              }
            ],
            "src": "2248:184:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2507:116:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2553:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2562:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2565:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2555:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2555:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2555:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2528:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2537:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2524:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2524:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2549:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2520:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "2517:52:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2578:39:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2607:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2588:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:29:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2473:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2484:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2496:6:128",
                "type": ""
              }
            ],
            "src": "2437:186:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2715:173:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2761:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2770:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2773:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2763:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2763:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2763:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2736:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2745:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2757:2:128",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2728:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "2725:52:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2786:39:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2815:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2796:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2796:29:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2786:6:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2834:48:128",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2867:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2878:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2863:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2863:18:128"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2844:18:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:38:128"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2834:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2673:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2684:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2696:6:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2704:6:128",
                "type": ""
              }
            ],
            "src": "2628:260:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2948:382:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2958:22:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2972:4:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2978:1:128",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2968:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2968:12:128"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2958:6:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2989:38:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3019:4:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:1:128",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3015:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:12:128"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2993:18:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3066:31:128",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3068:27:128",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3082:6:128"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3090:4:128",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3078:3:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3078:17:128"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3068:6:128"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3046:18:128"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3039:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3039:26:128"
                  },
                  "nodeType": "YulIf",
                  "src": "3036:61:128"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3156:168:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3177:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3180:77:128",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3170:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3170:88:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3170:88:128"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3278:1:128",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3281:4:128",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3271:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3271:15:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3271:15:128"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3306:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3309:4:128",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3299:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3299:15:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3299:15:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3112:18:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3135:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3143:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3132:2:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3132:14:128"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3109:2:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3109:38:128"
                  },
                  "nodeType": "YulIf",
                  "src": "3106:218:128"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2928:4:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2937:6:128",
                "type": ""
              }
            ],
            "src": "2893:437:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3464:168:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3474:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3486:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3497:2:128",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3482:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3474:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3516:9:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3531:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3539:42:128",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3527:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3527:55:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3509:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3509:74:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3509:74:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3603:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:18:128"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3619:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:34:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3425:9:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3436:6:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3444:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3455:4:128",
                "type": ""
              }
            ],
            "src": "3335:297:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3685:234:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3720:168:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3741:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3744:77:128",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3734:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3734:88:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3734:88:128"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3842:1:128",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3845:4:128",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3835:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3835:15:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3835:15:128"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3870:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3873:4:128",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3863:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3863:15:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3863:15:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3701:1:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3708:1:128"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3698:2:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:13:128"
                  },
                  "nodeType": "YulIf",
                  "src": "3695:193:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:16:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3908:1:128"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3911:1:128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3904:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3904:9:128"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3897:3:128"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3668:1:128",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3671:1:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3677:3:128",
                "type": ""
              }
            ],
            "src": "3637:282:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4098:227:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4115:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4126:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4149:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4160:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4145:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4145:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4165:2:128",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4138:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4138:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4188:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4184:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4184:18:128"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4204:34:128",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4177:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4177:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4259:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4270:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4255:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4255:18:128"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4275:7:128",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4248:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4248:35:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4248:35:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4292:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4304:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4315:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4300:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4300:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4292:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4075:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4089:4:128",
                "type": ""
              }
            ],
            "src": "3924:401:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4459:119:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4469:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4481:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:128",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4477:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4477:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4469:4:128"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4511:9:128"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4522:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:25:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4504:25:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4549:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4560:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:18:128"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4565:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:34:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4420:9:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4431:6:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4439:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4450:4:128",
                "type": ""
              }
            ],
            "src": "4330:248:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4757:226:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4774:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4785:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4767:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4767:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4767:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4808:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4819:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4804:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4804:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4824:2:128",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4797:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4797:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4847:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4858:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:18:128"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4863:34:128",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4836:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4836:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4918:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4929:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4914:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4914:18:128"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4934:6:128",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4907:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4907:34:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4950:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4962:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4973:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4958:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4958:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4950:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4734:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4748:4:128",
                "type": ""
              }
            ],
            "src": "4583:400:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5162:224:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5179:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5190:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5172:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5172:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5172:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5213:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5224:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5209:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5209:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5229:2:128",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5202:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5202:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5202:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5252:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5263:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5248:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5248:18:128"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5268:34:128",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5241:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5241:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5241:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5323:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5334:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5319:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5319:18:128"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5339:4:128",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5312:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5312:32:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5312:32:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5353:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5365:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5376:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5361:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5353:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5139:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5153:4:128",
                "type": ""
              }
            ],
            "src": "4988:398:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5565:179:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5582:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5593:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5575:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5575:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5575:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5616:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5627:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5612:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5612:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5632:2:128",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5605:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5605:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5605:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5655:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5666:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5651:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:18:128"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5671:31:128",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5644:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:59:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5644:59:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5712:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5724:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5735:2:128",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5720:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5720:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5712:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5542:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5556:4:128",
                "type": ""
              }
            ],
            "src": "5391:353:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5923:227:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5940:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5951:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5933:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5933:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5933:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5974:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5985:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5970:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5970:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5990:2:128",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5963:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5963:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5963:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6013:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6024:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6009:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:18:128"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6029:34:128",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6002:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6002:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6002:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6084:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6095:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6080:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6080:18:128"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6100:7:128",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6073:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:35:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6073:35:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6117:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6129:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6140:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6125:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6125:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6117:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5900:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5914:4:128",
                "type": ""
              }
            ],
            "src": "5749:401:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6329:225:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6346:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6357:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6339:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6339:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6339:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6380:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6391:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6376:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6376:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6396:2:128",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6369:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6419:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6430:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6415:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6415:18:128"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6435:34:128",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6408:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6408:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6408:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6490:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6501:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6486:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6486:18:128"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6506:5:128",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6479:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6479:33:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6479:33:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6521:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6533:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6544:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6529:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6529:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6521:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6306:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6320:4:128",
                "type": ""
              }
            ],
            "src": "6155:399:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6733:228:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6750:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6761:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6743:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6743:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6743:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6784:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6795:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6780:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6780:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6800:2:128",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6773:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6773:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6823:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6834:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6819:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6819:18:128"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6839:34:128",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6812:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6812:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6812:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:18:128"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6910:8:128",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:36:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:36:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6928:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6940:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6951:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6936:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6936:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6928:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6710:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6724:4:128",
                "type": ""
              }
            ],
            "src": "6559:402:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7123:241:128",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7133:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7145:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7156:2:128",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7141:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7133:4:128"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7168:52:128",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7178:42:128",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7172:2:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7236:9:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7251:6:128"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7259:2:128"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7247:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7247:15:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7229:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7229:34:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7283:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7294:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7279:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7279:18:128"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7303:6:128"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7311:2:128"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7299:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7299:15:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7272:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7272:43:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7272:43:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7335:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7346:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7331:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7331:18:128"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7351:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7324:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7324:34:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7324:34:128"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7076:9:128",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7087:6:128",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7095:6:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7103:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7114:4:128",
                "type": ""
              }
            ],
            "src": "6966:398:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7543:181:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7560:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7571:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7553:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7553:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7553:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7594:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7605:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7590:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7590:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7610:2:128",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7583:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7583:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7583:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7633:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7644:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7629:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7629:18:128"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7649:33:128",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7622:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7622:61:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7622:61:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7692:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7704:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7715:2:128",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7700:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7700:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7692:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7520:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7534:4:128",
                "type": ""
              }
            ],
            "src": "7369:355:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7807:199:128",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7853:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7862:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7865:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7855:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7855:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7855:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7828:7:128"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7837:9:128"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7824:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7824:23:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7849:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7820:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7820:32:128"
                  },
                  "nodeType": "YulIf",
                  "src": "7817:52:128"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7878:29:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7897:9:128"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7891:5:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7891:16:128"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7882:5:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7960:16:128",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7969:1:128",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7972:1:128",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7962:6:128"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7962:12:128"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7962:12:128"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7929:5:128"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7950:5:128"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7943:6:128"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7943:13:128"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7936:6:128"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7936:21:128"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7926:2:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7926:32:128"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7919:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7919:40:128"
                  },
                  "nodeType": "YulIf",
                  "src": "7916:60:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7985:15:128",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7995:5:128"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7985:6:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7773:9:128",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7784:7:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7796:6:128",
                "type": ""
              }
            ],
            "src": "7729:277:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8185:232:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8202:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8213:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8195:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8195:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8195:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8236:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8247:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8232:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8232:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8252:2:128",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8225:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8225:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8225:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8275:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8286:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8271:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8271:18:128"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8291:34:128",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8264:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8264:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8264:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8346:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8357:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8342:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8342:18:128"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8362:12:128",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8335:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8335:40:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8335:40:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8384:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8396:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8407:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8392:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8392:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8384:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8162:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8176:4:128",
                "type": ""
              }
            ],
            "src": "8011:406:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8596:228:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8613:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8624:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8606:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8606:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8606:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8647:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8658:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8643:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8643:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8663:2:128",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8636:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8636:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8636:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8686:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8697:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8682:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8682:18:128"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8702:34:128",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8675:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8675:62:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8675:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8757:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8768:2:128",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8753:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8753:18:128"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8773:8:128",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8746:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8746:36:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8746:36:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8791:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8803:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8814:3:128",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8799:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8799:19:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8791:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8573:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8587:4:128",
                "type": ""
              }
            ],
            "src": "8422:402:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9003:179:128",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9020:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9031:2:128",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9013:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9013:21:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9013:21:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9054:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9065:2:128",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9050:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9050:18:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9070:2:128",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9043:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9043:30:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9043:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9093:9:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9104:2:128",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9089:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9089:18:128"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9109:31:128",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9082:6:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9082:59:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9082:59:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9150:26:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9162:9:128"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9173:2:128",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9158:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9158:18:128"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9150:4:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8980:9:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8994:4:128",
                "type": ""
              }
            ],
            "src": "8829:353:128"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9324:137:128",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9334:27:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9354:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9348:5:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:13:128"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9338:6:128",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9396:6:128"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9404:4:128",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9392:3:128"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9392:17:128"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9411:3:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9416:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9370:21:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9370:53:128"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9370:53:128"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9432:23:128",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9443:3:128"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9448:6:128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9439:3:128"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9439:16:128"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9432:3:128"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9300:3:128",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9305:6:128",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9316:3:128",
                "type": ""
              }
            ],
            "src": "9187:274:128"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 128,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "366:1524:121:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "366:1524:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;-1:-1:-1;4770:197:9;;;;;:::i;:::-;;:::i;:::-;;;1290:14:128;;1283:22;1265:41;;1253:2;1238:18;4770:197:9;1125:187:128;599:21:121;;;;;;;;;;-1:-1:-1;599:21:121;;;;-1:-1:-1;;;;;599:21:121;;;;;;-1:-1:-1;;;;;1481:55:128;;;1463:74;;1451:2;1436:18;599:21:121;1317:226:128;3581:106:9;;;;;;;;;;-1:-1:-1;3668:12:9;;3581:106;;;1694:25:128;;;1682:2;1667:18;3581:106:9;1548:177:128;5529:286:9;;;;;;;;;;-1:-1:-1;5529:286:9;;;;;:::i;:::-;;:::i;1321:372:121:-;;;;;;;;;;-1:-1:-1;1321:372:121;;;;;:::i;:::-;;:::i;:::-;;3430:91:9;;;;;;;;;;-1:-1:-1;3430:91:9;;3512:2;2390:36:128;;2378:2;2363:18;3430:91:9;2248:184:128;6210:236:9;;;;;;;;;;-1:-1:-1;6210:236:9;;;;;:::i;:::-;;:::i;419:97:97:-;;;;;;;;;;-1:-1:-1;419:97:97;;;;;:::i;:::-;;:::i;1699:72:121:-;;;;;;;;;;-1:-1:-1;1699:72:121;;;;;:::i;:::-;419:97:97;;;774:82:121;;;;;;;;;;-1:-1:-1;774:82:121;;;;;:::i;:::-;830:11;:19;;-1:-1:-1;;830:19:121;-1:-1:-1;;;;;830:19:121;;;;;;;;;;774:82;862:107;;;;;;;;;;-1:-1:-1;961:1:121;862:107;;3745:125:9;;;;;;;;;;-1:-1:-1;3745:125:9;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:9;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;626:26:121;;;;;;;;;;-1:-1:-1;626:26:121;;;;-1:-1:-1;;;;;626:26:121;;;2704:102:9;;;;;;;;;;;;;:::i;6933:429::-;;;;;;;;;;-1:-1:-1;6933:429:9;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;;;;;-1:-1:-1;4066:189:9;;;;;:::i;:::-;;:::i;975:340:121:-;;;;;;:::i;:::-;;:::i;687:81::-;;;;;;;;;;-1:-1:-1;687:81:121;;;;;:::i;:::-;746:6;:15;;-1:-1:-1;;746:15:121;-1:-1:-1;;;;;746:15:121;;;;;;;;;;687:81;4313:149:9;;;;;;;;;;-1:-1:-1;4313:149:9;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:9;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;1777:111:121;;;;;;;;;;-1:-1:-1;961:1:121;1777:111;862:107;2493:98:9;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:14;4907:32:9;929:10:14;4923:7:9;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:9;;4770:197;-1:-1:-1;;;4770:197:9:o;5529:286::-;5656:4;929:10:14;5712:38:9;5728:4;929:10:14;5743:6:9;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;1321:372:121:-;1460:11;;1373:129;;1399:4;;1436:10;;-1:-1:-1;;;;;1460:11:121;1485:7;1373:49;:129::i;:::-;1599:6;;1577:62;;;;;1612:10;1577:62;;;3509:74:128;1537:7:121;3599:18:128;;;3592:34;;;1537:7:121;-1:-1:-1;;;;;1599:6:121;;1577:34;;3482:18:128;;1577:62:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:32;1671:14;1654:32;;;;1694:25:128;;1682:2;1667:18;;1548:177;1654:32:121;;;;;;;;1363:330;1321:372;:::o;6210:236:9:-;929:10:14;6298:4:9;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:9;;;;;;;;;;6298:4;;929:10:14;6352:66:9;;929:10:14;;6377:27:9;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;419:97:97:-;485:24;491:8;501:7;485:5;:24::i;2704:102:9:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:14;7026:4:9;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:9;;;;;;;;;;7026:4;;929:10:14;7152:35:9;;;;7144:85;;;;-1:-1:-1;;;;;7144:85:9;;4126:2:128;7144:85:9;;;4108:21:128;4165:2;4145:18;;;4138:30;4204:34;4184:18;;;4177:62;4275:7;4255:18;;;4248:35;4300:19;;7144:85:9;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;:::-;-1:-1:-1;7351:4:9;;6933:429;-1:-1:-1;;;;6933:429:9:o;4066:189::-;4145:4;929:10:14;4199:28:9;929:10:14;4216:2:9;4220:6;4199:9;:28::i;975:340:121:-;1052:6;;1034:124;;-1:-1:-1;;;;;1052:6:121;1090:10;1122:4;1141:7;1034:42;:124::i;:::-;1189:7;1229:29;1235:10;1189:7;1229:5;:29::i;:::-;1273:35;;;4504:25:128;;;4560:2;4545:18;;4538:34;;;1273:35:121;;4477:18:128;1273:35:121;4330:248:128;10460:370:9;-1:-1:-1;;;;;10591:19:9;;10583:68;;;;-1:-1:-1;;;;;10583:68:9;;4785:2:128;10583:68:9;;;4767:21:128;4824:2;4804:18;;;4797:30;4863:34;4843:18;;;4836:62;4934:6;4914:18;;;4907:34;4958:19;;10583:68:9;4583:400:128;10583:68:9;-1:-1:-1;;;;;10669:21:9;;10661:68;;;;-1:-1:-1;;;;;10661:68:9;;5190:2:128;10661:68:9;;;5172:21:128;5229:2;5209:18;;;5202:30;5268:34;5248:18;;;5241:62;5339:4;5319:18;;;5312:32;5361:19;;10661:68:9;4988:398:128;10661:68:9;-1:-1:-1;;;;;10740:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1694:25:128;;;10791:32:9;;1667:18:128;10791:32:9;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:9;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:9;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;;;11356:68:9;;5593:2:128;11356:68:9;;;5575:21:128;5632:2;5612:18;;;5605:30;5671:31;5651:18;;;5644:59;5720:18;;11356:68:9;5391:353:128;11356:68:9;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:9;;7943:68;;;;-1:-1:-1;;;;;7943:68:9;;5951:2:128;7943:68:9;;;5933:21:128;5990:2;5970:18;;;5963:30;6029:34;6009:18;;;6002:62;6100:7;6080:18;;;6073:35;6125:19;;7943:68:9;5749:401:128;7943:68:9;-1:-1:-1;;;;;8029:16:9;;8021:64;;;;-1:-1:-1;;;;;8021:64:9;;6357:2:128;8021:64:9;;;6339:21:128;6396:2;6376:18;;;6369:30;6435:34;6415:18;;;6408:62;6506:5;6486:18;;;6479:33;6529:19;;8021:64:9;6155:399:128;8021:64:9;-1:-1:-1;;;;;8167:15:9;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;;;8192:72:9;;6761:2:128;8192:72:9;;;6743:21:128;6800:2;6780:18;;;6773:30;6839:34;6819:18;;;6812:62;6910:8;6890:18;;;6883:36;6936:19;;8192:72:9;6559:402:128;8192:72:9;-1:-1:-1;;;;;8298:15:9;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:9;8404:4;-1:-1:-1;;;;;8395:26:9;;8414:6;8395:26;;;;1694:25:128;;1682:2;1667:18;;1548:177;8395:26:9;;;;;;;;8432:37;12132:121;967:252:12;1143:68;;;-1:-1:-1;;;;;7247:15:128;;;1143:68:12;;;7229:34:128;7299:15;;7279:18;;;7272:43;7331:18;;;;7324:34;;;1143:68:12;;;;;;;;;;7141:18:128;;;;1143:68:12;;;;;;;;;;1166:27;1143:68;;;1116:96;;1136:5;;1116:19;:96::i;8752:389:9:-;-1:-1:-1;;;;;8835:21:9;;8827:65;;;;-1:-1:-1;;;;;8827:65:9;;7571:2:128;8827:65:9;;;7553:21:128;7610:2;7590:18;;;7583:30;7649:33;7629:18;;;7622:61;7700:18;;8827:65:9;7369:355:128;8827:65:9;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:9;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:9;;1694:25:128;;;-1:-1:-1;;;;;9038:37:9;;;9055:1;;9038:37;;1682:2:128;1667:18;9038:37:9;;;;;;;419:97:97;;;12132:121:9;;;;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;8213:2:128;3921:85:12;;;8195:21:128;8252:2;8232:18;;;8225:30;8291:34;8271:18;;;8264:62;8362:12;8342:18;;;8335:40;8392:19;;3921:85:12;8011:406:128;3872:223:13;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:13:o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;8624:2:128;5148:81:13;;;8606:21:128;8663:2;8643:18;;;8636:30;8702:34;8682:18;;;8675:62;8773:8;8753:18;;;8746:36;8799:19;;5148:81:13;8422:402:128;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;9031:2:128;5239:60:13;;;9013:21:128;9070:2;9050:18;;;9043:30;9109:31;9089:18;;;9082:59;9158:18;;5239:60:13;8829:353:128;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:258:128:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:128;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:128;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:128:o;665:196::-;733:20;;-1:-1:-1;;;;;782:54:128;;772:65;;762:93;;851:1;848;841:12;762:93;665:196;;;:::o;866:254::-;934:6;942;995:2;983:9;974:7;970:23;966:32;963:52;;;1011:1;1008;1001:12;963:52;1034:29;1053:9;1034:29;:::i;:::-;1024:39;1110:2;1095:18;;;;1082:32;;-1:-1:-1;;;866:254:128:o;1730:328::-;1807:6;1815;1823;1876:2;1864:9;1855:7;1851:23;1847:32;1844:52;;;1892:1;1889;1882:12;1844:52;1915:29;1934:9;1915:29;:::i;:::-;1905:39;;1963:38;1997:2;1986:9;1982:18;1963:38;:::i;:::-;1953:48;;2048:2;2037:9;2033:18;2020:32;2010:42;;1730:328;;;;;:::o;2063:180::-;2122:6;2175:2;2163:9;2154:7;2150:23;2146:32;2143:52;;;2191:1;2188;2181:12;2143:52;-1:-1:-1;2214:23:128;;2063:180;-1:-1:-1;2063:180:128:o;2437:186::-;2496:6;2549:2;2537:9;2528:7;2524:23;2520:32;2517:52;;;2565:1;2562;2555:12;2517:52;2588:29;2607:9;2588:29;:::i;2628:260::-;2696:6;2704;2757:2;2745:9;2736:7;2732:23;2728:32;2725:52;;;2773:1;2770;2763:12;2725:52;2796:29;2815:9;2796:29;:::i;:::-;2786:39;;2844:38;2878:2;2867:9;2863:18;2844:38;:::i;:::-;2834:48;;2628:260;;;;;:::o;2893:437::-;2978:1;2968:12;;3025:1;3015:12;;;3036:61;;3090:4;3082:6;3078:17;3068:27;;3036:61;3143:2;3135:6;3132:14;3112:18;3109:38;3106:218;;;3180:77;3177:1;3170:88;3281:4;3278:1;3271:15;3309:4;3306:1;3299:15;3106:218;;2893:437;;;:::o;3637:282::-;3677:3;3708:1;3704:6;3701:1;3698:13;3695:193;;;3744:77;3741:1;3734:88;3845:4;3842:1;3835:15;3873:4;3870:1;3863:15;3695:193;-1:-1:-1;3904:9:128;;3637:282::o;7729:277::-;7796:6;7849:2;7837:9;7828:7;7824:23;7820:32;7817:52;;;7865:1;7862;7855:12;7817:52;7897:9;7891:16;7950:5;7943:13;7936:21;7929:5;7926:32;7916:60;;7972:1;7969;7962:12;9187:274;9316:3;9354:6;9348:13;9370:53;9416:6;9411:3;9404:4;9396:6;9392:17;9370:53;:::i;:::-;9439:16;;;;;9187:274;-1:-1:-1;;9187:274:128:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultAlpaca.sol\";\n\nimport \"../../tokens/mocks/MockToken.sol\";\n\nimport \"../../interfaces/Alpaca/IAlpacaFairLaunch.sol\";\n\nimport \"../../interfaces/Alpaca/IAlpacaVault.sol\";\n\ncontract MockVaultAlpaca is VaultAlpaca {\n    function unfarm(uint256 _wantAmt) public {\n        _unfarm(_wantAmt);\n    }\n}\n\ncontract MockAlpacaVault is IAlpacaVault, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event AddedLiquidity(uint256 _amount, uint256 _liquidity);\n    event RemovedLiquidity(uint256 _amount);\n\n    address public token0;\n    address public burnAddress;\n    uint256 private _dummy;\n\n    function setToken0Address(address _token) public {\n        token0 = _token;\n    }\n\n    function setBurnAddress(address _burn) public {\n        burnAddress = _burn;\n    }\n\n    function totalToken() external view returns (uint256) {\n        require(_dummy>=0);\n        return 0;\n    }\n\n    function deposit(uint256 _amount) public payable {\n        IERC20Upgradeable(token0).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _amount\n        );\n        uint256 _liquidity = 1 ether; // Hard code for tests\n        _mint(msg.sender, _liquidity);\n        emit AddedLiquidity(_amount, _liquidity);\n    }\n\n    function withdraw(uint256 _shares) public {\n        IERC20Upgradeable(address(this)).safeTransferFrom(\n            msg.sender,\n            burnAddress,\n            _shares\n        );\n        uint256 _withdrawalAmt = 2 ether; // Hard code for tests\n        IMockERC20Upgradeable(token0).mint(msg.sender, _withdrawalAmt);\n        emit RemovedLiquidity(_withdrawalAmt);\n    }\n\n    function requestFunds(address targetedToken, uint256 amount) external {}\n\n    function token() external view returns (address) {\n        require(_dummy>=0);\n        return address(0);\n    }\n}\n\ncontract MockAlpacaFarm is IFairLaunch, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event Deposited(address indexed _want, uint256 indexed _amount);\n    event Withdrew(address indexed _want, uint256 indexed _amount);\n\n    address public burnAddress;\n    address public wantToken;\n    uint256 private _dummy;\n\n    function setWantAddress(address _wantToken) public {\n        wantToken = _wantToken;\n    }\n\n    function setBurnAddress(address _burnAddress) public {\n        burnAddress = _burnAddress;\n    }\n\n    function poolLength() external view returns (uint256) {\n        require(_dummy>=0);\n        return 0;\n    }\n\n    function addPool(\n        uint256 _allocPoint,\n        address _stakeToken,\n        bool _withUpdate\n    ) external {}\n\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external {}\n\n    function pendingAlpaca(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        require(_dummy>=0);\n        require(_pid>=0);\n        require(_user != address(0));\n        return 0;\n    }\n\n    function updatePool(uint256 _pid) external {}\n\n    function deposit(\n        address _for,\n        uint256 _pid,\n        uint256 _amount\n    ) public {\n        require(_for != address(0));\n        require(_pid>=0);\n        IERC20Upgradeable(wantToken).safeTransferFrom(\n            msg.sender,\n            burnAddress,\n            _amount\n        );\n        emit Deposited(wantToken, _amount);\n    }\n\n    function withdraw(\n        address _for,\n        uint256 _pid,\n        uint256 _amount\n    ) public {\n        require(_pid>=0);\n        IMockERC20Upgradeable(wantToken).mint(_for, _amount);\n        emit Withdrew(wantToken, _amount);\n    }\n\n    function withdrawAll(address _for, uint256 _pid) external {}\n\n  function harvest(uint256 _pid) external {}\n\n  function getFairLaunchPoolId() external returns (uint256) {\n    require(_dummy>=0);\n    _dummy = 1;\n    return 0;\n  }\n\n  function poolInfo(uint256 _pid)\n    external\n    view\n    returns (\n      address,\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    ) {\n        require(_pid>=0);\n        require(_dummy>=0);\n        return (address(0), 0, 0, 0, 0);\n    }\n\n  function alpaca() external returns (address) {\n    _dummy = 1;\n    return address(0);\n  }\n\n  function userInfo(uint256 _pid, address _user)\n    external\n    view\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      address\n    ) {\n        require(_dummy>=0);\n        require(_pid>=0);\n        require(_user != address(0));\n        return (0, 0, 0, address(0));\n    }\n\n  function emergencyWithdraw(uint256 _pid) external {}\n}\n\ncontract MockBUSD is MockERC20Upgradeable {}\n\ncontract MockAlpaca is MockERC20Upgradeable {}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultAlpaca.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultAlpaca.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13144
      ],
      "IAMMRouter02": [
        13232
      ],
      "IAlpacaVault": [
        12580
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12545
      ],
      "ILayerZeroReceiver": [
        14312
      ],
      "IMockERC20Upgradeable": [
        17492
      ],
      "IStargateReceiver": [
        14559
      ],
      "IVault": [
        15341
      ],
      "IVaultAlpaca": [
        15352
      ],
      "IZorroControllerXChain": [
        14153
      ],
      "IZorroControllerXChainBase": [
        13972
      ],
      "IZorroControllerXChainDeposit": [
        14006
      ],
      "IZorroControllerXChainEarn": [
        14076
      ],
      "IZorroControllerXChainReceiver": [
        14141
      ],
      "IZorroControllerXChainWithdraw": [
        14129
      ],
      "Initializable": [
        1774
      ],
      "MockAlpaca": [
        25877
      ],
      "MockAlpacaFarm": [
        25871
      ],
      "MockAlpacaVault": [
        25545
      ],
      "MockBUSD": [
        25874
      ],
      "MockERC20Upgradeable": [
        17510
      ],
      "MockUSDC": [
        17513
      ],
      "MockVaultAlpaca": [
        25391
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15563
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeSwapUni": [
        15769
      ],
      "VaultActions": [
        23221
      ],
      "VaultActionsAlpaca": [
        21116
      ],
      "VaultAlpaca": [
        17733
      ],
      "VaultAlpacaLeveragedBTCB": [
        17736
      ],
      "VaultBase": [
        19579
      ]
    },
    "id": 25878,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25374,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:121"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultAlpaca.sol",
        "file": "../VaultAlpaca.sol",
        "id": 25375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25878,
        "sourceUnit": 17737,
        "src": "58:28:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 25376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25878,
        "sourceUnit": 17514,
        "src": "88:42:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol",
        "file": "../../interfaces/Alpaca/IAlpacaFairLaunch.sol",
        "id": 25377,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25878,
        "sourceUnit": 12546,
        "src": "132:55:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Alpaca/IAlpacaVault.sol",
        "file": "../../interfaces/Alpaca/IAlpacaVault.sol",
        "id": 25378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25878,
        "sourceUnit": 12581,
        "src": "189:50:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25379,
              "name": "VaultAlpaca",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17733,
              "src": "269:11:121"
            },
            "id": 25380,
            "nodeType": "InheritanceSpecifier",
            "src": "269:11:121"
          }
        ],
        "canonicalName": "MockVaultAlpaca",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25391,
        "linearizedBaseContracts": [
          25391,
          17733,
          19579,
          1885,
          1944,
          571,
          3169,
          1774,
          15352,
          15341
        ],
        "name": "MockVaultAlpaca",
        "nameLocation": "250:15:121",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25389,
              "nodeType": "Block",
              "src": "328:34:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25386,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25382,
                        "src": "346:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25385,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17682
                      ],
                      "referencedDeclaration": 17682,
                      "src": "338:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "338:17:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25388,
                  "nodeType": "ExpressionStatement",
                  "src": "338:17:121"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 25390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "296:6:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25382,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "311:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25390,
                  "src": "303:16:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "302:18:121"
            },
            "returnParameters": {
              "id": 25384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:121"
            },
            "scope": 25391,
            "src": "287:75:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25878,
        "src": "241:123:121",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25392,
              "name": "IAlpacaVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12580,
              "src": "394:12:121"
            },
            "id": 25393,
            "nodeType": "InheritanceSpecifier",
            "src": "394:12:121"
          },
          {
            "baseName": {
              "id": 25394,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17510,
              "src": "408:20:121"
            },
            "id": 25395,
            "nodeType": "InheritanceSpecifier",
            "src": "408:20:121"
          }
        ],
        "canonicalName": "MockAlpacaVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25545,
        "linearizedBaseContracts": [
          25545,
          17510,
          2557,
          2660,
          17492,
          2635,
          3169,
          1774,
          12580
        ],
        "name": "MockAlpacaVault",
        "nameLocation": "375:15:121",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 25399,
            "libraryName": {
              "id": 25396,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "441:20:121"
            },
            "nodeType": "UsingForDirective",
            "src": "435:49:121",
            "typeName": {
              "id": 25398,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25397,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "466:17:121"
              },
              "referencedDeclaration": 2635,
              "src": "466:17:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 25405,
            "name": "AddedLiquidity",
            "nameLocation": "496:14:121",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25401,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "519:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25405,
                  "src": "511:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25403,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_liquidity",
                  "nameLocation": "536:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25405,
                  "src": "528:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:37:121"
            },
            "src": "490:58:121"
          },
          {
            "anonymous": false,
            "id": 25409,
            "name": "RemovedLiquidity",
            "nameLocation": "559:16:121",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25407,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "584:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25409,
                  "src": "576:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "575:17:121"
            },
            "src": "553:40:121"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 25411,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "614:6:121",
            "nodeType": "VariableDeclaration",
            "scope": 25545,
            "src": "599:21:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25410,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 25413,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "641:11:121",
            "nodeType": "VariableDeclaration",
            "scope": 25545,
            "src": "626:26:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25415,
            "mutability": "mutable",
            "name": "_dummy",
            "nameLocation": "674:6:121",
            "nodeType": "VariableDeclaration",
            "scope": 25545,
            "src": "658:22:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25414,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 25424,
              "nodeType": "Block",
              "src": "736:32:121",
              "statements": [
                {
                  "expression": {
                    "id": 25422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25420,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25411,
                      "src": "746:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25421,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25417,
                      "src": "755:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "746:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25423,
                  "nodeType": "ExpressionStatement",
                  "src": "746:15:121"
                }
              ]
            },
            "functionSelector": "c8479cd6",
            "id": 25425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setToken0Address",
            "nameLocation": "696:16:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25417,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "721:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25425,
                  "src": "713:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "712:16:121"
            },
            "returnParameters": {
              "id": 25419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:121"
            },
            "scope": 25545,
            "src": "687:81:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25434,
              "nodeType": "Block",
              "src": "820:36:121",
              "statements": [
                {
                  "expression": {
                    "id": 25432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25430,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25413,
                      "src": "830:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25431,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25427,
                      "src": "844:5:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "830:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25433,
                  "nodeType": "ExpressionStatement",
                  "src": "830:19:121"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 25435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "783:14:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25427,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "806:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25435,
                  "src": "798:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:15:121"
            },
            "returnParameters": {
              "id": 25429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:121"
            },
            "scope": 25545,
            "src": "774:82:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12553
            ],
            "body": {
              "id": 25448,
              "nodeType": "Block",
              "src": "916:53:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25441,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25415,
                          "src": "934:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "942:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "934:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "926:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25445,
                  "nodeType": "ExpressionStatement",
                  "src": "926:18:121"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 25446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "961:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 25439,
                  "id": 25447,
                  "nodeType": "Return",
                  "src": "954:8:121"
                }
              ]
            },
            "functionSelector": "626be567",
            "id": 25449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalToken",
            "nameLocation": "871:10:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:121"
            },
            "returnParameters": {
              "id": 25439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25449,
                  "src": "907:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "906:9:121"
            },
            "scope": 25545,
            "src": "862:107:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12559
            ],
            "body": {
              "id": 25482,
              "nodeType": "Block",
              "src": "1024:291:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25458,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1090:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1090:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25462,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1122:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAlpacaVault_$25545",
                              "typeString": "contract MockAlpacaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAlpacaVault_$25545",
                              "typeString": "contract MockAlpacaVault"
                            }
                          ],
                          "id": 25461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1114:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25460,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1114:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25464,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25451,
                        "src": "1141:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25455,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25411,
                            "src": "1052:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25454,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1034:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 25456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1034:25:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 25457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "1034:42:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 25465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:124:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25466,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:124:121"
                },
                {
                  "assignments": [
                    25468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25468,
                      "mutability": "mutable",
                      "name": "_liquidity",
                      "nameLocation": "1176:10:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 25482,
                      "src": "1168:18:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25467,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1168:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25470,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 25469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1189:7:121",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1168:28:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25472,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1235:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1235:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25474,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25468,
                        "src": "1247:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25471,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "1229:5:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25476,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:29:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25478,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25451,
                        "src": "1288:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25479,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25468,
                        "src": "1297:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25477,
                      "name": "AddedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25405,
                      "src": "1273:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:35:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25481,
                  "nodeType": "EmitStatement",
                  "src": "1268:40:121"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 25483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "984:7:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25451,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1000:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25483,
                  "src": "992:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:17:121"
            },
            "returnParameters": {
              "id": 25453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:0:121"
            },
            "scope": 25545,
            "src": "975:340:121",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12565
            ],
            "body": {
              "id": 25518,
              "nodeType": "Block",
              "src": "1363:330:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25495,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1436:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1436:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25497,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25413,
                        "src": "1460:11:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25498,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25485,
                        "src": "1485:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25491,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1399:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAlpacaVault_$25545",
                                  "typeString": "contract MockAlpacaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAlpacaVault_$25545",
                                  "typeString": "contract MockAlpacaVault"
                                }
                              ],
                              "id": 25490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1391:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25489,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1391:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1391:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25488,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1373:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 25493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:32:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 25494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "1373:49:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 25499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:129:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25500,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:129:121"
                },
                {
                  "assignments": [
                    25502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25502,
                      "mutability": "mutable",
                      "name": "_withdrawalAmt",
                      "nameLocation": "1520:14:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 25518,
                      "src": "1512:22:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1512:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25504,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 25503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1537:7:121",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25509,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1612:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1612:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25511,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25502,
                        "src": "1624:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25506,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25411,
                            "src": "1599:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25505,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17492,
                          "src": "1577:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$17492_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 25507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1577:29:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$17492",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 25508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17491,
                      "src": "1577:34:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:62:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25513,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:62:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25515,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25502,
                        "src": "1671:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25514,
                      "name": "RemovedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25409,
                      "src": "1654:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:32:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25517,
                  "nodeType": "EmitStatement",
                  "src": "1649:37:121"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 25519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1330:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25485,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1347:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25519,
                  "src": "1339:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:17:121"
            },
            "returnParameters": {
              "id": 25487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1363:0:121"
            },
            "scope": 25545,
            "src": "1321:372:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12573
            ],
            "body": {
              "id": 25526,
              "nodeType": "Block",
              "src": "1769:2:121",
              "statements": []
            },
            "functionSelector": "494666b6",
            "id": 25527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestFunds",
            "nameLocation": "1708:12:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25521,
                  "mutability": "mutable",
                  "name": "targetedToken",
                  "nameLocation": "1729:13:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25527,
                  "src": "1721:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25523,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1752:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25527,
                  "src": "1744:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:39:121"
            },
            "returnParameters": {
              "id": 25525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:121"
            },
            "scope": 25545,
            "src": "1699:72:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12579
            ],
            "body": {
              "id": 25543,
              "nodeType": "Block",
              "src": "1826:62:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25533,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25415,
                          "src": "1844:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1852:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1844:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1836:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25537,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:18:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 25540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1871:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 25538,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1871:7:121",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 25541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1871:10:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 25531,
                  "id": 25542,
                  "nodeType": "Return",
                  "src": "1864:17:121"
                }
              ]
            },
            "functionSelector": "fc0c546a",
            "id": 25544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1786:5:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:121"
            },
            "returnParameters": {
              "id": 25531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25544,
                  "src": "1817:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:9:121"
            },
            "scope": 25545,
            "src": "1777:111:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25878,
        "src": "366:1524:121",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25546,
              "name": "IFairLaunch",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12545,
              "src": "1919:11:121"
            },
            "id": 25547,
            "nodeType": "InheritanceSpecifier",
            "src": "1919:11:121"
          },
          {
            "baseName": {
              "id": 25548,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17510,
              "src": "1932:20:121"
            },
            "id": 25549,
            "nodeType": "InheritanceSpecifier",
            "src": "1932:20:121"
          }
        ],
        "canonicalName": "MockAlpacaFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25871,
        "linearizedBaseContracts": [
          25871,
          17510,
          2557,
          2660,
          17492,
          2635,
          3169,
          1774,
          12545
        ],
        "name": "MockAlpacaFarm",
        "nameLocation": "1901:14:121",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 25553,
            "libraryName": {
              "id": 25550,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "1965:20:121"
            },
            "nodeType": "UsingForDirective",
            "src": "1959:49:121",
            "typeName": {
              "id": 25552,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25551,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "1990:17:121"
              },
              "referencedDeclaration": 2635,
              "src": "1990:17:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 25559,
            "name": "Deposited",
            "nameLocation": "2020:9:121",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25555,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2046:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25559,
                  "src": "2030:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25557,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2069:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25559,
                  "src": "2053:23:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:48:121"
            },
            "src": "2014:64:121"
          },
          {
            "anonymous": false,
            "id": 25565,
            "name": "Withdrew",
            "nameLocation": "2089:8:121",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25561,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2114:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25565,
                  "src": "2098:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25563,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2137:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25565,
                  "src": "2121:23:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:48:121"
            },
            "src": "2083:63:121"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 25567,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "2167:11:121",
            "nodeType": "VariableDeclaration",
            "scope": 25871,
            "src": "2152:26:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25566,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2152:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 25569,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "2199:9:121",
            "nodeType": "VariableDeclaration",
            "scope": 25871,
            "src": "2184:24:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25568,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2184:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25571,
            "mutability": "mutable",
            "name": "_dummy",
            "nameLocation": "2230:6:121",
            "nodeType": "VariableDeclaration",
            "scope": 25871,
            "src": "2214:22:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25570,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2214:7:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 25580,
              "nodeType": "Block",
              "src": "2294:39:121",
              "statements": [
                {
                  "expression": {
                    "id": 25578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25576,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25569,
                      "src": "2304:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25577,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25573,
                      "src": "2316:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2304:22:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25579,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:22:121"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 25581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "2252:14:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25573,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "2275:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25581,
                  "src": "2267:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2266:20:121"
            },
            "returnParameters": {
              "id": 25575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2294:0:121"
            },
            "scope": 25871,
            "src": "2243:90:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25590,
              "nodeType": "Block",
              "src": "2392:43:121",
              "statements": [
                {
                  "expression": {
                    "id": 25588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25586,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25567,
                      "src": "2402:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25587,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25583,
                      "src": "2416:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2402:26:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25589,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:26:121"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 25591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "2348:14:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25583,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "2371:12:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25591,
                  "src": "2363:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:22:121"
            },
            "returnParameters": {
              "id": 25585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2392:0:121"
            },
            "scope": 25871,
            "src": "2339:96:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12437
            ],
            "body": {
              "id": 25604,
              "nodeType": "Block",
              "src": "2495:53:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25597,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "2513:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2521:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2513:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2505:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25601,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:18:121"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 25602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2540:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 25595,
                  "id": 25603,
                  "nodeType": "Return",
                  "src": "2533:8:121"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 25605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "2450:10:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2460:2:121"
            },
            "returnParameters": {
              "id": 25595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25605,
                  "src": "2486:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:9:121"
            },
            "scope": 25871,
            "src": "2441:107:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12446
            ],
            "body": {
              "id": 25614,
              "nodeType": "Block",
              "src": "2670:2:121",
              "statements": []
            },
            "functionSelector": "7abceffd",
            "id": 25615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPool",
            "nameLocation": "2563:7:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25607,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "2588:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25615,
                  "src": "2580:19:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25609,
                  "mutability": "mutable",
                  "name": "_stakeToken",
                  "nameLocation": "2617:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25615,
                  "src": "2609:19:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25611,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "2643:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25615,
                  "src": "2638:16:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2570:90:121"
            },
            "returnParameters": {
              "id": 25613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2670:0:121"
            },
            "scope": 25871,
            "src": "2554:118:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12455
            ],
            "body": {
              "id": 25624,
              "nodeType": "Block",
              "src": "2787:2:121",
              "statements": []
            },
            "functionSelector": "46ca6bea",
            "id": 25625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPool",
            "nameLocation": "2687:7:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25617,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2712:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25625,
                  "src": "2704:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25619,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "2734:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25625,
                  "src": "2726:19:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25621,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "2760:11:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25625,
                  "src": "2755:16:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2694:83:121"
            },
            "returnParameters": {
              "id": 25623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2787:0:121"
            },
            "scope": 25871,
            "src": "2678:111:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12464
            ],
            "body": {
              "id": 25657,
              "nodeType": "Block",
              "src": "2907:117:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25635,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "2925:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2933:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2925:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2917:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25639,
                  "nodeType": "ExpressionStatement",
                  "src": "2917:18:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25641,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25627,
                          "src": "2953:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2959:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2953:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2945:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2945:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25645,
                  "nodeType": "ExpressionStatement",
                  "src": "2945:16:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25647,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25629,
                          "src": "2979:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2996:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2988:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25648,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2988:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2988:10:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2979:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2971:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:28:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25654,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:28:121"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 25655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3016:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 25633,
                  "id": 25656,
                  "nodeType": "Return",
                  "src": "3009:8:121"
                }
              ]
            },
            "functionSelector": "94443b73",
            "id": 25658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingAlpaca",
            "nameLocation": "2804:13:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25627,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2826:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25658,
                  "src": "2818:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25629,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2840:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25658,
                  "src": "2832:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2817:29:121"
            },
            "returnParameters": {
              "id": 25633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25632,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25658,
                  "src": "2894:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2893:9:121"
            },
            "scope": 25871,
            "src": "2795:229:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12469
            ],
            "body": {
              "id": 25663,
              "nodeType": "Block",
              "src": "3073:2:121",
              "statements": []
            },
            "functionSelector": "51eb05a6",
            "id": 25664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nameLocation": "3039:10:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25660,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3058:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25664,
                  "src": "3050:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3049:14:121"
            },
            "returnParameters": {
              "id": 25662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3073:0:121"
            },
            "scope": 25871,
            "src": "3030:45:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12478
            ],
            "body": {
              "id": 25703,
              "nodeType": "Block",
              "src": "3180:249:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25674,
                          "name": "_for",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25666,
                          "src": "3198:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3214:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3206:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25675,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3206:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3206:10:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3198:18:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:27:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25681,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:27:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25683,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25668,
                          "src": "3235:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3241:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3235:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3227:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25687,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:16:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25692,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3312:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3312:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25694,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25567,
                        "src": "3336:11:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25695,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25670,
                        "src": "3361:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25689,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25569,
                            "src": "3271:9:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25688,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3253:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 25690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3253:28:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 25691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "3253:45:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 25696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3253:125:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25697,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:125:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25699,
                        "name": "wantToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25569,
                        "src": "3403:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25700,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25670,
                        "src": "3414:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25698,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25559,
                      "src": "3393:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25702,
                  "nodeType": "EmitStatement",
                  "src": "3388:34:121"
                }
              ]
            },
            "functionSelector": "0efe6a8b",
            "id": 25704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3090:7:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25666,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "3115:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25704,
                  "src": "3107:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25668,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3137:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25704,
                  "src": "3129:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25670,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3159:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25704,
                  "src": "3151:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3097:75:121"
            },
            "returnParameters": {
              "id": 25672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:121"
            },
            "scope": 25871,
            "src": "3081:348:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12487
            ],
            "body": {
              "id": 25732,
              "nodeType": "Block",
              "src": "3535:138:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25714,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25708,
                          "src": "3553:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3559:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3553:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3545:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25718,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:16:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25723,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25706,
                        "src": "3609:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25724,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25710,
                        "src": "3615:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25720,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25569,
                            "src": "3593:9:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25719,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17492,
                          "src": "3571:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$17492_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 25721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:32:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$17492",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 25722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17491,
                      "src": "3571:37:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:52:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25726,
                  "nodeType": "ExpressionStatement",
                  "src": "3571:52:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25728,
                        "name": "wantToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25569,
                        "src": "3647:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25729,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25710,
                        "src": "3658:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25727,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25565,
                      "src": "3638:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3638:28:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25731,
                  "nodeType": "EmitStatement",
                  "src": "3633:33:121"
                }
              ]
            },
            "functionSelector": "b5c5f672",
            "id": 25733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3444:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25706,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "3470:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "3462:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25708,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3492:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "3484:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25710,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3514:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "3506:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3506:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3452:75:121"
            },
            "returnParameters": {
              "id": 25712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3535:0:121"
            },
            "scope": 25871,
            "src": "3435:238:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12494
            ],
            "body": {
              "id": 25740,
              "nodeType": "Block",
              "src": "3737:2:121",
              "statements": []
            },
            "functionSelector": "cc6dbc27",
            "id": 25741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "3688:11:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25735,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "3708:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25741,
                  "src": "3700:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25737,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3722:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25741,
                  "src": "3714:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3699:28:121"
            },
            "returnParameters": {
              "id": 25739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3737:0:121"
            },
            "scope": 25871,
            "src": "3679:60:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12499
            ],
            "body": {
              "id": 25746,
              "nodeType": "Block",
              "src": "3783:2:121",
              "statements": []
            },
            "functionSelector": "ddc63262",
            "id": 25747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "3752:7:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25743,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3768:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25747,
                  "src": "3760:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:14:121"
            },
            "returnParameters": {
              "id": 25745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:0:121"
            },
            "scope": 25871,
            "src": "3743:42:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12504
            ],
            "body": {
              "id": 25764,
              "nodeType": "Block",
              "src": "3847:59:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25753,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "3861:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3869:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3861:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3853:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25757,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:18:121"
                },
                {
                  "expression": {
                    "id": 25760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25758,
                      "name": "_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25571,
                      "src": "3877:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 25759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3886:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3877:10:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25761,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:10:121"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 25762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3900:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 25751,
                  "id": 25763,
                  "nodeType": "Return",
                  "src": "3893:8:121"
                }
              ]
            },
            "functionSelector": "eff42ef2",
            "id": 25765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFairLaunchPoolId",
            "nameLocation": "3798:19:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3817:2:121"
            },
            "returnParameters": {
              "id": 25751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25765,
                  "src": "3838:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3837:9:121"
            },
            "scope": 25871,
            "src": "3789:117:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12519
            ],
            "body": {
              "id": 25802,
              "nodeType": "Block",
              "src": "4058:102:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25781,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25767,
                          "src": "4076:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4082:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4076:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4068:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25785,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:16:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25787,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "4102:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4110:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4102:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4094:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4094:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25791,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:18:121"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4138:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4130:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25792,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4130:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:10:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4142:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 25797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 25798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4148:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 25799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4151:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 25800,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4129:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(address,int_const 0,int_const 0,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 25779,
                  "id": 25801,
                  "nodeType": "Return",
                  "src": "4122:31:121"
                }
              ]
            },
            "functionSelector": "1526fe27",
            "id": 25803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolInfo",
            "nameLocation": "3919:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25767,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3936:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "3928:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3927:14:121"
            },
            "returnParameters": {
              "id": 25779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "3984:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "3999:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "4014:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "4029:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4029:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25803,
                  "src": "4044:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4044:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3976:81:121"
            },
            "scope": 25871,
            "src": "3910:250:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12524
            ],
            "body": {
              "id": 25817,
              "nodeType": "Block",
              "src": "4209:44:121",
              "statements": [
                {
                  "expression": {
                    "id": 25810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25808,
                      "name": "_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25571,
                      "src": "4215:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 25809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4224:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4215:10:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25811,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:10:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 25814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4246:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4238:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 25812,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4238:7:121",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 25815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4238:10:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 25807,
                  "id": 25816,
                  "nodeType": "Return",
                  "src": "4231:17:121"
                }
              ]
            },
            "functionSelector": "94faab23",
            "id": 25818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "alpaca",
            "nameLocation": "4173:6:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4179:2:121"
            },
            "returnParameters": {
              "id": 25807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25806,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25818,
                  "src": "4200:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4200:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4199:9:121"
            },
            "scope": 25871,
            "src": "4164:89:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12539
            ],
            "body": {
              "id": 25863,
              "nodeType": "Block",
              "src": "4405:137:121",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25834,
                          "name": "_dummy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25571,
                          "src": "4423:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4431:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4423:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4415:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4415:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25838,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:18:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25840,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25820,
                          "src": "4451:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4457:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4451:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4443:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4443:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25844,
                  "nodeType": "ExpressionStatement",
                  "src": "4443:16:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25846,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25822,
                          "src": "4477:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4494:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4486:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25847,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4486:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4486:10:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4477:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4469:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4469:28:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25853,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:28:121"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 25854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4515:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 25855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4518:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 25856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4521:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4532:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4524:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25857,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4524:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4524:10:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 25861,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4514:21:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_address_$",
                      "typeString": "tuple(int_const 0,int_const 0,int_const 0,address)"
                    }
                  },
                  "functionReturnParameters": 25832,
                  "id": 25862,
                  "nodeType": "Return",
                  "src": "4507:28:121"
                }
              ]
            },
            "functionSelector": "93f1a40b",
            "id": 25864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInfo",
            "nameLocation": "4266:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25820,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "4283:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4275:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25822,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4297:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4289:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4274:29:121"
            },
            "returnParameters": {
              "id": 25832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25825,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4346:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4346:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4361:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4361:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4376:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4376:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25864,
                  "src": "4391:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4338:66:121"
            },
            "scope": 25871,
            "src": "4257:285:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12544
            ],
            "body": {
              "id": 25869,
              "nodeType": "Block",
              "src": "4596:2:121",
              "statements": []
            },
            "functionSelector": "5312ea8e",
            "id": 25870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "4555:17:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25866,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "4581:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 25870,
                  "src": "4573:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4572:14:121"
            },
            "returnParameters": {
              "id": 25868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4596:0:121"
            },
            "scope": 25871,
            "src": "4546:52:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25878,
        "src": "1892:2708:121",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25872,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17510,
              "src": "4623:20:121"
            },
            "id": 25873,
            "nodeType": "InheritanceSpecifier",
            "src": "4623:20:121"
          }
        ],
        "canonicalName": "MockBUSD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25874,
        "linearizedBaseContracts": [
          25874,
          17510,
          2557,
          2660,
          17492,
          2635,
          3169,
          1774
        ],
        "name": "MockBUSD",
        "nameLocation": "4611:8:121",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 25878,
        "src": "4602:44:121",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25875,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17510,
              "src": "4671:20:121"
            },
            "id": 25876,
            "nodeType": "InheritanceSpecifier",
            "src": "4671:20:121"
          }
        ],
        "canonicalName": "MockAlpaca",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25877,
        "linearizedBaseContracts": [
          25877,
          17510,
          2557,
          2660,
          17492,
          2635,
          3169,
          1774
        ],
        "name": "MockAlpaca",
        "nameLocation": "4657:10:121",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 25878,
        "src": "4648:46:121",
        "usedErrors": []
      }
    ],
    "src": "33:4662:121"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-26T23:10:35.542Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "requestFunds(address,uint256)": {
        "notice": "Request funds from user through Vault"
      },
      "token()": {
        "notice": "Underlying token address"
      },
      "totalToken()": {
        "notice": "Return the total ERC20 entitled to the token holders. Be careful of unaccrued interests."
      }
    },
    "version": 1
  }
}